<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Toward Jellyfin Homeserver: Does CPU and GPU 3D performance matter?</title>
    <link href="/StaticBlog/2024/03/26/jellyfinTranscodeBench/"/>
    <url>/StaticBlog/2024/03/26/jellyfinTranscodeBench/</url>
    
    <content type="html"><![CDATA[<blockquote><ul><li>Just a record of my experiment on these 3 systems.</li><li>Primarily using 4K 120Mbps and “720p” (actually 1080p) 8Mbps presets</li><li>Use HDR tone mapping by default</li><li>Using Defualt CRF of 23 for AVC and 28 for HEVC.</li><li>I prefer subtitle burn-in since it eleminates any subtitle sync issue in browsers. For HDR contents I prefer direct streaming using 3rd party apps to deal with subtitles.</li></ul></blockquote><p>Intel’s latest iGPU’s transcoding performance is impressive, however there’s a myth that encoder and decoder alone determines transcoding efficiency. For me, with morden 4K HDR videos and styled/image subtitles transcoding is in many cases a synthetic workload for CPU, GPU and media engine, especailly for low powered NAS CPUs. Here I have multiple test footages on my NAS transcoded via Jellyfin installed on these machines:</p><ol><li>Low powered machine with a 4 E-core Intel N100 CPU, 8GB DDR4 memory and the powerful Intel Gen12 media encoders.</li><li>High powered machine with a 16-Core AMD Ryzen 9 7950X3D CPU, 64GB DDR5 memory and NVIDIA RTX 4090 graphics card, eliminating any possible bottleneck on CPU and GPU 3D engine.</li><li>ROG Ally with AMD Ryzen Z1 Extreme, 16GB LPDDR5 memory and Radeon 780M RDNA3 GPU to simulate 7840U/7840HS/7940HS/8845HS AMD mini PCs. I only did a quick test of JW4 and SW2 4Kto4K subtitle burn-in on this setup.</li></ol><h1 id="Takeaway"><a href="#Takeaway" class="headerlink" title="Takeaway"></a>Takeaway</h1><p> The result is somewhat unexpected, the intel N100 is constantly having its fast media engines underloaded when burning subtitles in Linux, and virtually everywhere in Windows. In Windows <code>ffmpeg</code> process can easily saturate the CPU just pulling files via SMB. On the other hand, the Intel media engine, even fully loaded, is 3-4x slower than the latest NVENC, and that’s only one of the total of 2.</p><p> While Intel’s low power iGPU is still my go for always-on home media servers, a beefier setup is certainly useful if you want to serve multiple users simultanously.</p><p> The AMD setup is somewhere in between. It has a powerful 8-core Zen 4 CPU and 12CU RDNA3 GPU to eliminate any other bottlenecks. It is nearly 2x as fast as the N100 setup, though the media codec of the latter is not fully utilized due to GPU bottleneck. </p><p> I did logged the start play and seek time on the AMD and Intel setups with footage JW4, 4Kto4K sub burn-in settings. The AMD 7840U family took about 9s to start playing and 5s to seek, while the N100 took about 10.5s and 6s.</p><h2 id="For-N100"><a href="#For-N100" class="headerlink" title="For N100"></a>For N100</h2><ul><li>VAAPI makes no  difference</li><li>Low-power encoder is slightly faster</li><li>VPP tone-mapping is useless unless you want some power saving</li><li>Tone mapping and subtitle burning may cause GPU 3D engine bottleneck and impact performance badly.</li><li>Audio transcoding will also saturate CPU, capped at 5-6x.</li><li>Encoding in HEVC has 10%-20% performance hit compared to H.264, however, it’s only a pain point if your browser supports HEVC and you want to watch 4K HDR tone-mapped content in your home network. </li><li>For some videos FFMPEG have to probe through the entire video if one subtitle stream has no offset (common for ASS or SRT streams), better to turn on burn-in for small videos only. </li><li>Not able to handle 4K in Windows.</li></ul><h2 id="For-Nvidia-Cards"><a href="#For-Nvidia-Cards" class="headerlink" title="For Nvidia Cards"></a>For Nvidia Cards</h2><ul><li>RTX 4090 could pull over 150W power when transcoding and hit maximium frequency. </li><li>Since there is no 3D and CPU bottleneck, one NVENC should constantly hit full load.</li></ul><h2 id="For-AMD-7840U-like-SoCs"><a href="#For-AMD-7840U-like-SoCs" class="headerlink" title="For AMD 7840U-like SoCs:"></a>For AMD 7840U-like SoCs:</h2><ul><li>No bottleneck on CPU or GPU</li><li>Draws ~25w power with CPU at 3.2GHz (turbo boost off) and GPU at 0.8-1.6GHz.</li></ul><h2 id="For"><a href="#For" class="headerlink" title="For"></a>For</h2><h1 id="Intel-N100-with-Intel-UHD-Graphics-24EUs-750MHz-Linux"><a href="#Intel-N100-with-Intel-UHD-Graphics-24EUs-750MHz-Linux" class="headerlink" title="Intel N100 with Intel UHD Graphics, 24EUs@750MHz, Linux"></a>Intel N100 with Intel UHD Graphics, 24EUs@750MHz, Linux</h1><h2 id="JW4"><a href="#JW4" class="headerlink" title="JW4"></a>JW4</h2><ul><li><p>Bitrate: 67.4Mbps</p></li><li><p>Purpose: Remux 4K HDR10</p></li><li><p>4Kto4K, VPP tone mapping, no sub burn-in: ~50fps</p><img src="image-20240326004515287.png"/> </li><li><p>4Kto4K, non-VPP tone mapping, no burn-in: 57fps</p></li><li><p>4Kto4K, VPP tone mapping burin-in: 27fps </p><ul><li>Lower CPU and GPU (both 3D and codec) usage</li><li>~1W GPU, ~7w CPU power</li></ul></li><li><p>4Kto4K, non-VPP tone mapping burin-in: 43fps </p><ul><li>~1.8w GPU, ~10w CPU power</li></ul></li><li><p>4Kto1080p, subtitle burn-in: 82fps</p></li></ul><h2 id="GunBuster"><a href="#GunBuster" class="headerlink" title="GunBuster"></a>GunBuster</h2><ul><li><p>Bitrate: 11.7Mbps</p></li><li><p>Purpose: 1080 * 1440 video</p></li><li><p>Original: ~200fps</p><img src="image-20240326005327975.png"/></li><li><p>1080pto1080p 8Mbps: ~270fps</p></li></ul><h2 id="Mazouku"><a href="#Mazouku" class="headerlink" title="Mazouku"></a>Mazouku</h2><ul><li><p>Bitrate: 3.7Mbps</p></li><li><p>Purpose: 1080p SDR WEBDL anime, with pre-burnt-in subtitles</p></li><li><p>Original: ~230fps</p><img src="image-20240326011426188.png"/></li></ul><h2 id="Madoka"><a href="#Madoka" class="headerlink" title="Madoka"></a>Madoka</h2><ul><li><p>Bitrate: 11.7Mbps</p></li><li><p>Purpose: High bitrate Bluray Anime</p></li><li><p>Original: 117fps</p></li><li><p>to 8Mbps: 114fps</p><img src="image-20240326012141376.png"/></li></ul><h2 id="SW2"><a href="#SW2" class="headerlink" title="SW2"></a>SW2</h2><ul><li><p>Bitrate: 41.5Mbps</p></li><li><p>Purpose: High Bitrate Bluray 4K HDR10</p></li><li><p>4Kto4K, sub burn-in: ~50fps</p><img src="image-20240326012738767.png"/></li><li><p>4Kto4K, no subtitle: ~75fps</p></li><li><p>4Kto1080p 8Mbps, sub burn-in: 94fps</p></li></ul><h2 id="Euphoria"><a href="#Euphoria" class="headerlink" title="Euphoria"></a>Euphoria</h2><ul><li><p>Bitrate: 22.7Mbps</p></li><li><p>Purpose: High Bitrate HDR10 TV show</p></li><li><p>4Kto4K, sub burn-in: ~50fps</p></li><li><p>4Kto4K, no sub: ~70fps </p></li><li><p>to 1080p 8Mbps, with sub: ~110fps</p><img src="image-20240326013108836.png"/></li></ul><h2 id="LongSeason-No-subtitle"><a href="#LongSeason-No-subtitle" class="headerlink" title="LongSeason (No subtitle)"></a>LongSeason (No subtitle)</h2><ul><li><p>Bitrate: 7.1Mbps</p></li><li><p>Purpose: Low bitrate WEBDL 4K HDR (DV)</p></li><li><p>4Kto4K: ~55fps (3D engine bottleneck, video render at ~60%)</p><img src="image-20240326023051969.png"/></li><li><p>to 1080p 6Mbps: ~130fps</p></li></ul><h2 id="Cyberpunk"><a href="#Cyberpunk" class="headerlink" title="Cyberpunk"></a>Cyberpunk</h2><ul><li><p>Bitrate:  5.7Mbps</p></li><li><p>Purpose: 1080p HDR</p></li><li><p>Original, with sub burn-in: ~120fps</p><img src="image-20240326023625272.png"/></li><li><p>without sub burn-in: ~220fps </p></li></ul><h1 id="Intel-N100-with-Intel-UHD-Graphics-24EUs-750MHz-Windows"><a href="#Intel-N100-with-Intel-UHD-Graphics-24EUs-750MHz-Windows" class="headerlink" title="Intel N100 with Intel UHD Graphics, 24EUs@750MHz, Windows"></a>Intel N100 with Intel UHD Graphics, 24EUs@750MHz, Windows</h1><h2 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h2><ul><li>Windows 11 23H2 fresh install</li><li>New Intel drivers break tone mapping, using driver 5085.</li></ul><h2 id="JW4-1"><a href="#JW4-1" class="headerlink" title="JW4"></a>JW4</h2><ul><li><p>Bitrate: 67.4Mbps</p></li><li><p>Purpose: Remux 4K HDR10</p></li><li><p>4Kto4K, VPP tone mapping, no sub burn-in: ~30fps</p> <img src="image-20240326024747894.png"/></li><li><p>4Kto4K, burin-in: 17fps </p></li><li><p>4Kto1080p, subtitle burn-in: ~40fps</p></li></ul><h2 id="GunBuster-1"><a href="#GunBuster-1" class="headerlink" title="GunBuster"></a>GunBuster</h2><ul><li><p>Bitrate: 11.7Mbps</p></li><li><p>Purpose: 1080 * 1440 video</p></li><li><p>Original: ~200fps</p><img src="image-20240326025212560.png"/></li><li><p>1080pto1080p 8Mbps: ~210fps</p></li></ul><h2 id="Mazouku-1"><a href="#Mazouku-1" class="headerlink" title="Mazouku"></a>Mazouku</h2><ul><li>Bitrate: 3.7Mbps</li><li>Purpose: 1080p WEBDL anime, with pre-burnt-in subtitles</li><li>Original: ~160fps</li></ul><h2 id="Madoka-1"><a href="#Madoka-1" class="headerlink" title="Madoka"></a>Madoka</h2><ul><li><p>Bitrate: 11.7Mbps</p></li><li><p>Purpose: High bitrate Bluray Anime</p></li><li><p>Original, burn-in: 89fps</p><img src="image-20240326024248852.png"/></li><li><p>to 6Mbps: 92fps</p></li></ul><h2 id="SW2-1"><a href="#SW2-1" class="headerlink" title="SW2"></a>SW2</h2><ul><li><p>Bitrate: 41.5Mbps</p></li><li><p>Purpose: High Bitrate Bluray 4K HDR10</p></li><li><p>4Kto4K, sub burn-in: 24fps</p></li><li><p>4Kto4K, no subtitle: 36fps</p></li><li><p>4Kto1080p 8Mbps, sub burn-in: 52fps</p></li></ul><h2 id="Euphoria-1"><a href="#Euphoria-1" class="headerlink" title="Euphoria"></a>Euphoria</h2><ul><li><p>Bitrate: 22.7Mbps</p></li><li><p>Purpose: High Bitrate HDR10 TV show</p></li><li><p>4Kto4K, sub burn-in: ~20fps</p></li><li><p>4Kto4K, no sub: ~30fps </p></li><li><p>to 1080p 8Mbps, with sub: ~50fps</p></li></ul><h2 id="LongSeason-No-subtitle-1"><a href="#LongSeason-No-subtitle-1" class="headerlink" title="LongSeason (No subtitle)"></a>LongSeason (No subtitle)</h2><ul><li><p>Bitrate: 7.1Mbps</p></li><li><p>Purpose: Low bitrate WEBDL 4K HDR (DV)</p></li><li><p>4Kto4K: 11fps</p></li><li><p>to 1080p 6Mbps: 21fps</p><img src="image-20240326030527752.png"/></li></ul><h2 id="Cyberpunk-1"><a href="#Cyberpunk-1" class="headerlink" title="Cyberpunk"></a>Cyberpunk</h2><ul><li><p>Bitrate:  5.7Mbps</p></li><li><p>Purpose: 1080p HDR</p></li><li><p>Original, with sub burn-in: 53fps</p></li><li><p>without sub burn-in: ~100fps </p></li></ul><h1 id="NVIDIA-RTX-4090-16384CUDAs-2835MHz"><a href="#NVIDIA-RTX-4090-16384CUDAs-2835MHz" class="headerlink" title="NVIDIA RTX 4090, 16384CUDAs @2835MHz"></a>NVIDIA RTX 4090, 16384CUDAs @2835MHz</h1><h2 id="JW4-2"><a href="#JW4-2" class="headerlink" title="JW4"></a>JW4</h2><ul><li><p>Bitrate: 67.4Mbps</p></li><li><p>Purpose: Remux 4K HDR10</p></li><li><p>4Kto4K, tone mapping, no sub burn-in: ~200fps</p> <img src="image-20240326004908964.png"/></li><li><p>4Kto1080p, subtitle burn-in: ~240fps</p></li></ul><h2 id="GunBuster-2"><a href="#GunBuster-2" class="headerlink" title="GunBuster"></a>GunBuster</h2><ul><li><p>Bitrate: 11.7Mbps</p></li><li><p>Purpose: 1080 * 1440 video</p></li><li><p>1080pto1080p: ~800fps</p><img src="image-20240326005114050.png"/></li><li><p>1080pto1080p 8Mbps: ~900fps</p></li></ul><h2 id="Mazouku-2"><a href="#Mazouku-2" class="headerlink" title="Mazouku"></a>Mazouku</h2><ul><li>Bitrate: 3.7Mbps</li><li>Purpose: 1080p WEBDL anime, with pre-burnt-in subtitles</li><li>Original: 837fps</li></ul><h2 id="Madoka-2"><a href="#Madoka-2" class="headerlink" title="Madoka"></a>Madoka</h2><ul><li>Bitrate: 11.7Mbps</li><li>Purpose: High bitrate Bluray Anime</li><li>Original, burn-in: ~650fps</li><li>to 6Mbps: ~700fps</li></ul><h2 id="SW2-2"><a href="#SW2-2" class="headerlink" title="SW2"></a>SW2</h2><ul><li><p>Bitrate: 41.5Mbps</p></li><li><p>Purpose: High Bitrate Bluray 4K HDR10</p></li><li><p>4Kto4K, sub burn-in: ~250fps</p></li><li><p>4Kto4K, no subtitle: ~260fps</p></li><li><p>4Kto1080p 8Mbps, sub burn-in: ~400fps</p></li></ul><h2 id="Euphoria-2"><a href="#Euphoria-2" class="headerlink" title="Euphoria"></a>Euphoria</h2><ul><li><p>Bitrate: 22.7Mbps</p></li><li><p>Purpose: High Bitrate HDR10 TV show</p></li><li><p>4Kto4K, sub burn-in: ~250fps</p></li><li><p>4Kto4K, no sub: ~260fps </p></li><li><p>to 1080p 8Mbps, with sub: ~300fps</p></li></ul><h2 id="LongSeason-No-subtitle-2"><a href="#LongSeason-No-subtitle-2" class="headerlink" title="LongSeason (No subtitle)"></a>LongSeason (No subtitle)</h2><ul><li><p>Bitrate: 7.1Mbps</p></li><li><p>Purpose: Low bitrate WEBDL 4K HDR (DV)</p></li><li><p>4Kto4K: 370fps</p></li><li><p>to 1080p 6Mbps: 710fps</p></li></ul><h2 id="Cyberpunk-2"><a href="#Cyberpunk-2" class="headerlink" title="Cyberpunk"></a>Cyberpunk</h2><ul><li><p>Bitrate:  5.7Mbps</p></li><li><p>Purpose: 1080p HDR</p></li><li><p>Original, with sub burn-in: 860fps</p></li><li><p>without sub burn-in: 910fps </p></li></ul><h1 id="AMD-Ryzen-Z1-Extreme-12CU-82-x44-78-x41-51-64-x30-x2e-x38-x2d-x32-46-x37-x47-72-x7a"><a href="#AMD-Ryzen-Z1-Extreme-12CU-82-x44-78-x41-51-64-x30-x2e-x38-x2d-x32-46-x37-x47-72-x7a" class="headerlink" title="AMD Ryzen Z1 Extreme, 12CU &#82;&#x44;&#78;&#x41;&#51;&#64;&#x30;&#x2e;&#x38;&#x2d;&#x32;&#46;&#x37;&#x47;&#72;&#x7a;"></a>AMD Ryzen Z1 Extreme, 12CU <a href="mailto:&#82;&#x44;&#78;&#x41;&#51;&#64;&#x30;&#x2e;&#x38;&#x2d;&#x32;&#46;&#x37;&#x47;&#72;&#x7a;">&#82;&#x44;&#78;&#x41;&#51;&#64;&#x30;&#x2e;&#x38;&#x2d;&#x32;&#46;&#x37;&#x47;&#72;&#x7a;</a></h1><h2 id="JW4-3"><a href="#JW4-3" class="headerlink" title="JW4"></a>JW4</h2><ul><li><p>Bitrate: 67.4Mbps</p></li><li><p>Purpose: Remux 4K HDR10</p></li><li><p>4Kto4K, tone mapping, sub burn-in: 76fps</p></li></ul><h2 id="SW2-3"><a href="#SW2-3" class="headerlink" title="SW2"></a>SW2</h2><ul><li>Bitrate: 41.5Mbps</li><li>Purpose: High Bitrate Bluray 4K HDR10</li><li>4Kto4K, sub burn-in: ~110fps</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>NAS</tag>
      
      <tag>Hardware</tag>
      
      <tag>Jellyfin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>孩子们，我回来了</title>
    <link href="/StaticBlog/2024/03/15/dmzjComic/"/>
    <url>/StaticBlog/2024/03/15/dmzjComic/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>在过去的两年多里，我一直在用之前获取的DMZJ轻小说API下载和更新汉化轻小说。它在几乎没有修改的情况下一直工作到了现在，令我十分惊讶。这个项目的初衷原本只是为了提取轻小说供阅读器使用，因为我尚且还能忍受动漫之家App的漫画阅读体验，同时随着叔叔版权化的作品越来越多，在这个平台上看漫画的比例也一直在下降（叔叔购入版权后DMZJ的对应漫画就会莫名消失或无法观看，尽管历史数据甚至汉化组提交更新都还是正常的，用户一般称为“神隐”）。但叔叔毕竟是国内正规的平台，一些带有NSFW要素（尽管不是不是R18）的作品是无法上架的，也只会购买有着一定受众群体的漫画，DMZJ这种游走在灰色地带的汉化漫画提供者始终有一定价值。虽说如此，DMZJ也仍有其局限，一些有名的，有H要素的作品还总是会被“神隐”掉，即使没有版权平台上架。这种例子我接触得很少，直到今年《憧魔》大火之后DMZJ也顺势下架了这部高人气NSFW向作品，此时终于意识到还是有必要做些什么的。</p><div style="display: flex; justify-content: space-around;">  <div style="width: 45%;">    <img src="Screenshot_20240316_032646.jpg" style="width: 100%; height: auto;">  </div>  <div style="width: 45%;">    <img src="Screenshot_20240316_032627.jpg" style="width: 100%; height: auto;">  </div></div><h1 id="安卓客户端逆向"><a href="#安卓客户端逆向" class="headerlink" title="安卓客户端逆向"></a>安卓客户端逆向</h1><p>DMZJ拦截隐藏漫画的手段很简单，服务端下发的漫画列表已经是过滤好的，不会出现隐藏漫画；但观看历史记录列表却仍会留存这部漫画，可能是以备将来这些神隐漫画重新上架吧。点击已下架漫画的历史记录，App详情页会做一次拦截，给出空的页面；同时直接点击阅读按钮也不能直接跳转进阅读页。简单逆向了一下漫画详情页<code>com.dmzjsq.manhua_kt.ui.details.cartoon.CartoonDetailsActivityV3</code>和漫画阅读页<code>com.dmzjsq.manhua.ui.abc.viewpager2.BrowseActivityAncestors4</code>后发现后者确实没有拦截逻辑，但唤起这个Activity带的参数里有Comic和Chapter两个Parcelable，因此不方便在App外通过<code>adb shell am</code>直接启动，需要对App本身进行一定修改。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">q</span><span class="hljs-params">(Activity activity, BookInfo bookInfo, ChapterInfo chapterInfo, <span class="hljs-keyword">int</span> i10, <span class="hljs-keyword">boolean</span> z10)</span> </span>&#123;<br>        Intent intent = <span class="hljs-keyword">new</span> Intent(activity, BrowseActivityAncestors4.class);<br>        intent.putExtra(<span class="hljs-string">&quot;intent_extra_bookinfo&quot;</span>, (Parcelable) bookInfo);<br>        intent.putExtra(<span class="hljs-string">&quot;intent_extra_chapterinfo&quot;</span>, (Parcelable) chapterInfo);<br>        intent.putExtra(<span class="hljs-string">&quot;intent_extra_readpage&quot;</span>, i10);<br>        intent.putExtra(<span class="hljs-string">&quot;intent_extra_share&quot;</span>, z10);<br>        intent.setFlags(DownloadExpSwitchCode.BUGFIX_GETPACKAGEINFO_BY_UNZIP);<br>        activity.startActivityForResult(intent, <span class="hljs-number">35</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><p>在练习两年半后，DMZJ的安卓开发终于在用Kotlin和MVVM架构重构他们的App了，也学会了打开混淆，泪目。</p><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><p>还是熟悉的味道，没有用<code>Retrofit</code>， 就是裸调<code>OkHttp</code>， 在一个大的Util类里自己写接口方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">a</span><span class="hljs-params">(String str, String str2, String str3, Map&lt;String, File&gt; map, com.dmzjsq.manhua.net.b bVar)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.httpClient.newCall(<span class="hljs-keyword">new</span> q2.a(SqHttpUrl.f18278a.a(SqHttpUrl.ApiType.API_USER_BASE) + <span class="hljs-string">&quot;register/m_submit_v2&quot;</span>).b(<span class="hljs-string">&quot;nickname&quot;</span>, str).b(NotificationCompat.CATEGORY_EMAIL, str2).b(<span class="hljs-string">&quot;passwd&quot;</span>, str3).h(map, <span class="hljs-string">&quot;用户注册接口Emial&quot;</span>)).enqueue(bVar);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">c</span><span class="hljs-params">(String str, String str2, com.dmzjsq.manhua.net.a aVar)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.httpClient.newCall(<span class="hljs-keyword">new</span> q2.a(SqHttpUrl.f18278a.a(SqHttpUrl.ApiType.API_RELASE_BASE) + <span class="hljs-string">&quot;game_c/game/appoint/&quot;</span> + str + <span class="hljs-string">&quot;/&quot;</span> + str2 + <span class="hljs-string">&quot;.json&quot;</span>).d(<span class="hljs-string">&quot;游戏预约&quot;</span>)).enqueue(aVar);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">d</span><span class="hljs-params">(String str)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.httpClient.newCall(<span class="hljs-keyword">new</span> q2.a(SqHttpUrl.f18278a.a(SqHttpUrl.ApiType.API_RELASE_BASE) + <span class="hljs-string">&quot;game_c/game/history/add?game_id=&quot;</span> + str).d(<span class="hljs-string">&quot;添加玩过的游戏&quot;</span>)).enqueue(<span class="hljs-keyword">new</span> h(<span class="hljs-keyword">this</span>));<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">e</span><span class="hljs-params">(String str, com.dmzjsq.manhua.net.b bVar)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.httpClient.newCall(<span class="hljs-keyword">new</span> q2.a(SqHttpUrl.f18278a.a(SqHttpUrl.ApiType.API_V4) + <span class="hljs-string">&quot;comic/detail/&quot;</span> + str + <span class="hljs-string">&quot;?coreToken=&quot;</span> + DmzjCore.getToken(CApplication.getInstance())).d(<span class="hljs-string">&quot;漫画详情proto&quot;</span>)).enqueue(bVar);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">f</span><span class="hljs-params">(String str, String str2, com.dmzjsq.manhua.net.b bVar)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.httpClient.newCall(<span class="hljs-keyword">new</span> q2.a(SqHttpUrl.f18278a.a(SqHttpUrl.ApiType.API_V4) + <span class="hljs-string">&quot;comic/chapter/&quot;</span> + str + <span class="hljs-string">&quot;/&quot;</span> + str2 + <span class="hljs-string">&quot;?coreToken=&quot;</span> + DmzjCore.getToken(CApplication.getInstance())).d(<span class="hljs-string">&quot;漫画章节proto&quot;</span>)).enqueue(bVar);<br>      <br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">h</span><span class="hljs-params">(String str, String str2, com.dmzjsq.manhua.net.b bVar)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.httpClient.newCall(<span class="hljs-keyword">new</span> q2.a(SqHttpUrl.f18278a.a(SqHttpUrl.ApiType.API_V4) + <span class="hljs-string">&quot;comic/update/list/&quot;</span> + str + <span class="hljs-string">&quot;/&quot;</span> + str2).d(<span class="hljs-string">&quot; 漫画更新列表proto&quot;</span>)).enqueue(bVar);<br>    &#125;<br></code></pre></td></tr></table></figure><p>注意最后的<code>Request.d/e/f</code>方法是用来加参数的，中文String做参数，用来走分支判断加一些特定的参数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> Request <span class="hljs-title">d</span><span class="hljs-params">(String str)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (str.equals(<span class="hljs-string">&quot;漫画吐糟Index&quot;</span>)) &#123;<br>            <span class="hljs-keyword">this</span>.f54212a.put(OapsKey.KEY_SIZE, <span class="hljs-string">&quot;3&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (str.equals(<span class="hljs-string">&quot;漫画章节proto&quot;</span>) &amp;&amp; CartoonDetailsActivityV3.f18538v.getDisable_level().equals(<span class="hljs-string">&quot;1&quot;</span>)) &#123;<br>            <span class="hljs-keyword">this</span>.f54212a.put(<span class="hljs-string">&quot;disable_level&quot;</span>, <span class="hljs-string">&quot;1&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">this</span>.f54212a.put(<span class="hljs-string">&quot;channel&quot;</span>, <span class="hljs-string">&quot;Android&quot;</span>);<br>        <span class="hljs-keyword">this</span>.f54212a.put(HiAnalyticsConstant.HaKey.BI_KEY_PHONETYPE, RomUtils.getRomTypeForDMZJ());<br>        ...<br>        Request.Builder url = <span class="hljs-keyword">new</span> Request.Builder().url(<span class="hljs-keyword">this</span>.f54213b);<br>        <span class="hljs-keyword">return</span> url.addHeader(<span class="hljs-string">&quot;User-Agent&quot;</span>, <span class="hljs-string">&quot;Android,DMZJ1,&quot;</span> + com.dmzjsq.manhua.utils.c.getSystemCode()).build();<br>    &#125;<br></code></pre></td></tr></table></figure><p>总之主打一个传统派程序员的风格自由。</p><h2 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h2><p>上面的代码里有个新东西：<code>DmzjCore.getToken(CApplication.getInstance())</code>, 用来拼一个<code>coreToken</code>参数上去，这个方法是一个JNI方法，看起来是他们自己写的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DmzjCore</span> </span>&#123;<br>    <span class="hljs-keyword">static</span> &#123;<br>        System.loadLibrary(<span class="hljs-string">&quot;dmzj&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">native</span> String <span class="hljs-title">checkSignature</span><span class="hljs-params">(Context context)</span></span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">native</span> String <span class="hljs-title">getSignature</span><span class="hljs-params">(Context context)</span></span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">native</span> String <span class="hljs-title">getToken</span><span class="hljs-params">(Context context)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>但实际上无论加不加这个token都是能正常拉数据的，且这个JNI方法实际上是没有调用的：</p><img src="Screenshot 2024-03-16 at 00.08.55.png" /><p>当然不排除他们把之前的Java版RSAUtil搬到so里或用so取密钥来给逆向者上（也许只有一点的）强度。</p><p>除此之外还是熟悉的RSAUtils和明文密钥，如下图所示：</p><img src="Screenshot 2024-03-15 at 23.43.09-0562368.png" /><h1 id="IDL"><a href="#IDL" class="headerlink" title="IDL"></a>IDL</h1><p>与两年前不同的是，现在的AI工具能够轻松地将<code>protoc</code>生成的一大堆Java代码转换为Protobuf IDL，极大地节省了工作量。</p><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs protobuf">syntax = <span class="hljs-string">&quot;proto3&quot;</span>; <br><br><span class="hljs-comment">// package com.dmzjsq.manhua.proto; </span><br><span class="hljs-keyword">package</span> comic;<br><br><br><span class="hljs-class"><span class="hljs-keyword">message</span> <span class="hljs-title">ComicTag</span> </span>&#123;<br>    <span class="hljs-built_in">int32</span> tag_id = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">string</span> tag_name = <span class="hljs-number">2</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">message</span> <span class="hljs-title">Urls</span> </span>&#123;<br>    <span class="hljs-built_in">int64</span> id = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">string</span> title = <span class="hljs-number">2</span>;<br>    <span class="hljs-built_in">string</span> url = <span class="hljs-number">3</span>;<br>    <span class="hljs-built_in">string</span> icon = <span class="hljs-number">4</span>; <span class="hljs-comment">// Assuming this is an icon or similar field</span><br>    <span class="hljs-built_in">string</span> package_name = <span class="hljs-number">5</span>;<br>    <span class="hljs-built_in">string</span> d_url = <span class="hljs-number">6</span>; <span class="hljs-comment">// Assuming this is a direct or download URL</span><br>    <span class="hljs-built_in">int32</span> btype = <span class="hljs-number">7</span>; <span class="hljs-comment">// Assuming this is a type indicator, represented as an integer</span><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">message</span> <span class="hljs-title">UrlLinks</span> </span>&#123;<br>    <span class="hljs-built_in">string</span> title = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">repeated</span> Urls list = <span class="hljs-number">2</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">message</span> <span class="hljs-title">ChapterInfo</span> </span>&#123;<br>    <span class="hljs-built_in">int64</span> chapter_id = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">string</span> chapter_title = <span class="hljs-number">2</span>;<br>    <span class="hljs-built_in">int64</span> updatetime = <span class="hljs-number">3</span>;<br>    <span class="hljs-built_in">int32</span> filesize = <span class="hljs-number">4</span>;<br>    <span class="hljs-built_in">int32</span> chapter_order = <span class="hljs-number">5</span>;<br>    <span class="hljs-built_in">bool</span> is_fee = <span class="hljs-number">6</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">message</span> <span class="hljs-title">ComicChapters</span> </span>&#123;<br>    <span class="hljs-built_in">string</span> title = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">repeated</span> ChapterInfo data = <span class="hljs-number">2</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">message</span> <span class="hljs-title">ComicInfo</span> </span>&#123;<br>    <span class="hljs-built_in">int64</span> id = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">string</span> title = <span class="hljs-number">2</span>;<br>    <span class="hljs-built_in">int32</span> direction = <span class="hljs-number">3</span>;<br>    <span class="hljs-built_in">int32</span> islong = <span class="hljs-number">4</span>;<br>    <span class="hljs-built_in">int32</span> is_dmzj = <span class="hljs-number">5</span>;<br>    <span class="hljs-built_in">string</span> cover = <span class="hljs-number">6</span>;<br>    <span class="hljs-built_in">string</span> description = <span class="hljs-number">7</span>;<br>    <span class="hljs-built_in">int64</span> lastUpdatetime = <span class="hljs-number">8</span>;<br>    <span class="hljs-built_in">string</span> lastUpdateChapterName = <span class="hljs-number">9</span>;<br>    <span class="hljs-built_in">int32</span> copyright = <span class="hljs-number">10</span>;<br>    <span class="hljs-built_in">string</span> firstLetter = <span class="hljs-number">11</span>;<br>    <span class="hljs-built_in">string</span> comicPy = <span class="hljs-number">12</span>;<br>    <span class="hljs-built_in">int32</span> hidden = <span class="hljs-number">13</span>;<br>    <span class="hljs-built_in">int64</span> hotNum = <span class="hljs-number">14</span>;<br>    <span class="hljs-built_in">int64</span> hitNum = <span class="hljs-number">15</span>;<br>    <span class="hljs-built_in">int64</span> uid = <span class="hljs-number">16</span>;<br>    <span class="hljs-built_in">int32</span> isLock = <span class="hljs-number">17</span>;<br>    <span class="hljs-built_in">int32</span> lastUpdateChapterId = <span class="hljs-number">18</span>;<br>    <span class="hljs-keyword">repeated</span> ComicTag types = <span class="hljs-number">19</span>;<br>    <span class="hljs-keyword">repeated</span> ComicTag status = <span class="hljs-number">20</span>;<br>    <span class="hljs-keyword">repeated</span> ComicTag authors = <span class="hljs-number">21</span>;<br>    <span class="hljs-built_in">int64</span> subscribeNum = <span class="hljs-number">22</span>;<br>    <span class="hljs-keyword">repeated</span> ComicChapters chapters = <span class="hljs-number">23</span>;<br>    <span class="hljs-built_in">int32</span> isNeedLogin = <span class="hljs-number">24</span>;<br>    <span class="hljs-keyword">repeated</span> UrlLinks urlLinks = <span class="hljs-number">25</span>;<br>    <span class="hljs-built_in">int32</span> isHideChapter = <span class="hljs-number">26</span>;<br>    <span class="hljs-keyword">repeated</span> UrlLinks dhUrlLinks = <span class="hljs-number">27</span>;<br>    <span class="hljs-built_in">string</span> cornerMark = <span class="hljs-number">28</span>;<br>    <span class="hljs-built_in">int32</span> isFee = <span class="hljs-number">29</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">message</span> <span class="hljs-title">ComicResponse</span> </span>&#123;<br>    <span class="hljs-built_in">int32</span> errno = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">string</span> errmsg = <span class="hljs-number">2</span>;<br>    ComicInfo data = <span class="hljs-number">3</span>; <br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">message</span> <span class="hljs-title">ChapterDetail</span> </span>&#123;<br>    <span class="hljs-built_in">int64</span> chapter_id = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">int64</span> comic_id = <span class="hljs-number">2</span>;<br>    <span class="hljs-built_in">string</span> title = <span class="hljs-number">3</span>;<br>    <span class="hljs-built_in">int32</span> chapter_order = <span class="hljs-number">4</span>;<br>    <span class="hljs-built_in">int32</span> direction = <span class="hljs-number">5</span>;<br>    <span class="hljs-keyword">repeated</span> <span class="hljs-built_in">string</span> page_url = <span class="hljs-number">6</span>;<br>    <span class="hljs-built_in">int32</span> picnum = <span class="hljs-number">7</span>;<br>    <span class="hljs-keyword">repeated</span> <span class="hljs-built_in">string</span> page_url_hd = <span class="hljs-number">8</span>;<br>    <span class="hljs-built_in">int32</span> comment_count = <span class="hljs-number">9</span>;<br>&#125;<br><br><br><span class="hljs-class"><span class="hljs-keyword">message</span> <span class="hljs-title">ChapterResponse</span> </span>&#123;<br>    <span class="hljs-built_in">int32</span> errno = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">string</span> errmsg = <span class="hljs-number">2</span>;<br>    ChapterDetail data = <span class="hljs-number">3</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="Archive"><a href="#Archive" class="headerlink" title="Archive"></a>Archive</h1><p>到<code>ChapterDetail</code>层就可以拿到两种分辨率的漫画图片列表了，这些图片只要带着正确的User Agent，类似<code>DMZJ1,x.xx</code>就能直接下载下来，不需要额外的Token以及response解密，反而比之前抓的轻小说API更容易。注意Chapters列表可能有多个，比如“连载”和”单行本“就可能同时存在，将这个列表下载下来即可。</p><img src="image-20240316041636575.png"  style="margin-bottom: 10px; zoom:70%;" /><p>不确定它是否有反爬措施，毕竟这次用的API就是客户端API，而客户端是支持多线程下载的，至少我一个IP下载几千张图没出什么问题。实在不放心可以挂个代理，只是梯子可能会不时导致少数图片下载失败。</p><img src="image-20240317022840763.png"  style="zoom:70%; margin-bottom: 10px; " /><p>最后用更新的逻辑顺便兜底了这个场景，下载失败的图片和更新的图片会在下次跑的时候增量更新上去，作为脚本其功能也算是完善了。</p><img src="image-20240317025825764.png" style="zoom:70%;" /><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>这组三脚猫功夫的API加密其实根本拦不住第三方开发者，虽然不像几年前API传得满GitHub都是，第三方客户端遍地开花，但现在也还是有很好的<a href="https://github.com/xiaoyaocz/flutter_dmzj">客户端</a>可以正常使用。写到这里我不时会想起七八年前在Windows Phone上用第三方DMZJ客户端的情景；第三方甚至第一方的App都不是永恒的，甚至连运行他们的平台都会消失，这也正是自己拥有数据的意义。备份就像保险，怎么算期望都是亏本的，也许很久都不会用到，但条件允许的前提下还是得有所投入的嘛。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
      <tag>JS</tag>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>泡面盖拯救计划：在世界读书日用JS制作电子书</title>
    <link href="/StaticBlog/2022/04/24/dmzjReader/"/>
    <url>/StaticBlog/2022/04/24/dmzjReader/</url>
    
    <content type="html"><![CDATA[<h1 id="数据源"><a href="#数据源" class="headerlink" title="数据源"></a>数据源</h1><p>借着复活我七年高龄的Kindle的想法，这次就来抓一个动漫之家轻小说源，做成电子书给它看（为啥不抓漫画呢？别问问就是今天世界读书日）。虽然动漫之家有不少汉化的轻小说资源，其移动端阅读体验却不敢恭维，而Web端满屏的广告也基本断绝了用Kindle那个又慢又卡的浏览器阅读的可能。原本的想法是在本地托管一个网页，通过DMZJ的API做出一个适合Kindle浏览器的静态阅读页（出于性能考虑，最好直接禁用Kindle浏览器的JavaScript）。于是我很快就想到，既然API都有了，不如直接扒下来做成电子书再发过去，岂不美哉？Anyway，万事开头难，只要拿到API，剩下的客户端、Web还是直接存本地都可以信手拈来。当然以我在Windows UWP端见证的几版DMZJ客户端消亡史来看，他们的API还是变动频繁的，不如直接存本地划算。</p><p>如前所述，至少在几年前，DMZJ的API就已经被人抓取了，因此出现了众多的基于第三方API的客户端，在GitHub上仍有2021年时可用的API。但不幸的是，现在抓包的结果表明之前的API已经过时，至少在漫画/小说章节部分，DMZJ的API已经引入了新的加密。<img src="image-20220424174404514.png" alt="image-20220424174404514" style="zoom:50%;" /></p><img src="image-20220424161305785.png" alt="image-20220424161305785" style="zoom: 50%;" /><p>于是祭出<code>jadx</code>，直接反编译看它的小说详情页<code>NovelInstructionActivity</code>源码。我们可以看到小说的基本信息接口已经是加密的（拿到数据直接一个<code>postDelayed</code>加载到UI上真的大丈夫？）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">refresh</span><span class="hljs-params">(<span class="hljs-keyword">boolean</span> z)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.mNovelProtocol.setPathParam(<span class="hljs-keyword">this</span>.intent_extra_nid);<br>        AppBeanFunctionUtils.setCommentRequestException(getActivity(), <span class="hljs-keyword">this</span>.mNovelProtocol);<br>        MyNetClient.getInstance().getNovel(<span class="hljs-keyword">this</span>.intent_extra_nid, <span class="hljs-keyword">new</span> MyCallBack1(getActivity(), <span class="hljs-keyword">new</span> MyCallBack1.B() &#123;<br>            <span class="hljs-comment">/* class com.dmzj.manhua.ui.NovelInstructionActivity.AnonymousClass1 */</span><br><br>            <span class="hljs-meta">@Override</span> <span class="hljs-comment">// com.dmzj.manhua.net.MyCallBack1.B</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onReceiveData</span><span class="hljs-params">(String str)</span> </span>&#123;<br>                NovelInstructionActivity.<span class="hljs-keyword">this</span>.scrollview.onRefreshComplete();<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">byte</span>[] decryptWithPrivateKeyBlock = RSAUtil.decryptWithPrivateKeyBlock(str);<br>                    JsonFormat jsonFormat = <span class="hljs-keyword">new</span> JsonFormat();<br>                    Novel.NovelInfoResponse parseFrom = Novel.NovelInfoResponse.parseFrom(decryptWithPrivateKeyBlock);<br>                    <span class="hljs-keyword">if</span> (parseFrom.getErrno() == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">final</span> String printToString = jsonFormat.printToString((Message) parseFrom.getDataOrBuilder());<br>                        NovelInstructionActivity.<span class="hljs-keyword">this</span>.getDefaultHandler().postDelayed(<span class="hljs-keyword">new</span> Runnable() &#123;<br>                            <span class="hljs-comment">/* class com.dmzj.manhua.ui.NovelInstructionActivity.AnonymousClass1.AnonymousClass1 */</span><br><br>                            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">()</span> </span>&#123;<br>                                NovelInstructionActivity.<span class="hljs-keyword">this</span>.refreshBasicInfos(printToString);<br>                            &#125;<br>                        &#125;, <span class="hljs-number">500</span>);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        UIUtils.show(NovelInstructionActivity.<span class="hljs-keyword">this</span>.getActivity(), parseFrom.getErrmsg());<br>                    &#125;<br>                    NovelInstructionActivity.<span class="hljs-keyword">this</span>.ltUnionADPlatform = BrowseAdHelper.setAd(NovelInstructionActivity.<span class="hljs-keyword">this</span>.getActivity(), NovelInstructionActivity.<span class="hljs-keyword">this</span>.layout_ad_layout, <span class="hljs-number">2</span>);<br>                &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                    e.printStackTrace();<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-meta">@Override</span> <span class="hljs-comment">// com.dmzj.manhua.net.MyCallBack1.B</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onReceiveError</span><span class="hljs-params">(String str, <span class="hljs-keyword">int</span> i)</span> </span>&#123;<br>                NovelInstructionActivity.<span class="hljs-keyword">this</span>.scrollview.onRefreshComplete();<br>            &#125;<br>        &#125;));<br></code></pre></td></tr></table></figure><p>然后我们看它的<code>RSAUtil</code>，私钥就明文放着，你懂得。</p><p>简单调用一下，发现之前抓取的请求能被正常解码，内容应该是protobuf。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">object</span> DMZJDecrypter &#123;<br>    <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">run</span><span class="hljs-params">(ciphertext: <span class="hljs-type">String</span>)</span></span>&#123;<br>        println(<br>            String(RSAUtils.decryptWithPrivateKeyBlock(ciphertext))<br>        )<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="image-20220424174218724.png" alt="image-20220424174218724"></p><p>使用<code>protoc --decode_raw &lt; ~/Downloads/dmzj_resp.bin &gt; ~/Downloads/dmzj_resp.txt</code>解码，可以看到如下结构：</p><img src="image-20220424185604656.png" alt="image-20220424185604656" style="zoom:50%;" /><p>但我们还需要找到这些字段的含义，在apk中可以看到三个由<code>protoc</code>生成的ProtoBuf实体类：</p><img src="image-20220424185144983.png" alt="image-20220424185144983" style="zoom:50%;" /><p>比如，Novel类型对应着NovelChapter、NovelInfo、NovelVolume三种对象，其定义类似：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">NovelInfo</span><span class="hljs-params">()</span> </span>&#123;<br>            <span class="hljs-keyword">this</span>.memoizedIsInitialized = -<span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">this</span>.novelId_ = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">this</span>.name_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.zone_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.status_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.lastUpdateVolumeName_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.lastUpdateChapterName_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.lastUpdateVolumeId_ = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">this</span>.lastUpdateChapterId_ = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">this</span>.lastUpdateTime_ = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">this</span>.cover_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.hotHits_ = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">this</span>.introduction_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.types_ = LazyStringArrayList.EMPTY;<br>            <span class="hljs-keyword">this</span>.authors_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.firstLetter_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.subscribeNum_ = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">this</span>.redisUpdateTime_ = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">this</span>.volume_ = Collections.emptyList();<br>        &#125;<br></code></pre></td></tr></table></figure><p>显然这与protobuf的结构对应。至此我们终于可以使用新版的DMZJ API了。</p><p>以下是本人总结出的DMZJ轻小说的Protobuf IDL示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs idl">syntax = &quot;proto2&quot;;<br><br>package novel;<br><br>message NovelChapterDetail &#123;<br>    required int32 chapterId = 1;<br>    required string chapterName = 2;<br>    required int32 chapterOrder = 3; <br>&#125;<br><br>message NovelVolumeDetail &#123;<br>    required int32 volumeId = 1;<br>    required string volumeName = 2;<br>    required int32 volumeOrder = 3;<br>    repeated NovelChapterDetail chapters = 4;<br>&#125;<br><br>message NovelChapterResponse &#123;<br>    optional int32 errno = 1;<br>    optional string errmsg = 2;<br>    repeated NovelVolumeDetail data = 3;<br>&#125;<br><br>message NovelInfoResponse &#123;<br>    optional int32 errno = 1;<br>    optional string errmsg = 2;<br>    repeated NovelInfo data = 3;<br>&#125;<br><br><br>message NovelVolume &#123;<br>    required int32 volumeId = 1;<br>    required int32 novelId = 2;<br>    required string volumeName = 3;<br>    required int32 volumeOrder = 4;<br>    required uint64 addtime = 5;<br>    required uint32 sumChapters = 6;<br>&#125;<br><br>message NovelInfo &#123;<br>    required int32 novelId = 1;<br>    required string name = 2;<br>    required string zone = 3;<br>    required string status = 4;<br>    required string lastUpdateVolumeName = 5 ;<br>    required string lastUpdateChapterName = 6;<br>    required int32 lastUpdateVolumeId = 7;<br>    required int32 lastUpdateChapterId = 8;<br>    required uint64 lastUpdateTime = 9;<br>    required string cover = 10;<br>    required int32 hotHits = 11;<br>    required string introduction = 12;<br>    repeated string types = 13;<br>    required string authors = 14;<br>    required string firstLetter = 15;<br>    required int32 subscribeNum = 16;<br>    optional uint64 redisUpdateTime = 17; <br>    repeated NovelVolume volume = 18;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>简单用<code>protobuf.js</code>解码后就可以得到我们想要的目录：</p><p><img src="image-20220425000148505.png" alt="image-20220425000148505"></p><p>当然还有最后一步即获取对应章节的文本，这个接口需要用上一步得到的<code>volumeId</code>和<code>chapterId</code>与两个query <code>t</code>和<code>k</code>即可访问:  <code>http://jurisdiction.muwai.com/lnovel/$&#123;volumeId&#125;_$&#123;chapterId&#125;.txt</code>。</p><img src="image-20220425120102467.png" alt="image-20220425120102467" style="zoom:50%;" /><p>顾名思义，<code>t</code>就是当前的时间戳，而<code>k</code>应该是根据时间戳生成的随机ID，更改其中任何一个，或者不上传都会被403。</p><img src="image-20220425120229409.png" alt="image-20220425120229409" style="zoom:50%;" /><p>反编译<code>NovelBrowsActivity</code>，可以看到章节刷新的逻辑：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">final</span> NovelDescription.Chapter chapter = <span class="hljs-keyword">this</span>.novelChapters.get(z ? i - <span class="hljs-number">1</span> : i + <span class="hljs-number">1</span>);<br>        loadChapterNovel(<span class="hljs-keyword">null</span>, chapter.getChapter_name(), <span class="hljs-keyword">this</span>.intent_extra_nid, chapter.getVolume_id(), chapter.getChapter_id(), <span class="hljs-keyword">new</span> OnCommenCompleteListener() &#123;<br>            <span class="hljs-comment">/* class com.dmzj.manhua.ui.NovelBrowseActivity.AnonymousClass8 */</span><br><br>            <span class="hljs-meta">@Override</span> <span class="hljs-comment">// com.dmzj.manhua.ui.NovelBrowseActivity.OnCommenCompleteListener</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onComplete</span><span class="hljs-params">(Bundle bundle)</span> </span>&#123;<br>                ...<br>            &#125;<br>        &#125;, <span class="hljs-keyword">false</span>, z);<br></code></pre></td></tr></table></figure><p>在<code>loadChapterNovel</code>方法中，我们可以看到拼接出最终URL的方法<code>MyspUtils</code>中, 这个只是个拿SahredPreference的工具，会从SahredPreference中拿对应URL的缓存地址，然后从本地加载：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">loadChapterNovel</span><span class="hljs-params">(<span class="hljs-keyword">final</span> ReadHistory4Novel readHistory4Novel, String str, String str2, String str3, String str4, <span class="hljs-keyword">final</span> OnCommenCompleteListener onCommenCompleteListener, <span class="hljs-keyword">final</span> <span class="hljs-keyword">boolean</span> z, <span class="hljs-keyword">final</span> <span class="hljs-keyword">boolean</span> z2)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>        String str5 = <span class="hljs-keyword">new</span> URLPathMaker(<span class="hljs-keyword">this</span>.ctx, URLPathMaker.URL_ENUM.HttpUrlTypeNovelDownLoad).get_url(URLPathMaker.URL_ENUM.HttpUrlTypeNovelDownLoad, str3 + <span class="hljs-string">&quot;_&quot;</span> + str4);<br>        KLog.log(<span class="hljs-string">&quot;小说地址&quot;</span>, str5);<br>        String str6 = MyspUtils.getStr(<span class="hljs-keyword">this</span>.ctx, str5);<br>        KLog.log(<span class="hljs-string">&quot;str&quot;</span>, str6);<br>        <span class="hljs-keyword">if</span> (ZzTool.isNoEmpty(str6) &amp;&amp; onCommenCompleteListener != <span class="hljs-keyword">null</span>) &#123;...&#125;<br>   <span class="hljs-keyword">this</span>.mNovelHelper.getLocalLocalFile(getActivity(), str2, str3, str4, <span class="hljs-keyword">new</span> NovelHelper.OnLoadCompleteListener() &#123;<br>            <span class="hljs-meta">@Override</span> <span class="hljs-comment">// com.dmzj.manhua.novel.NovelHelper.OnLoadCompleteListener</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onComplete</span><span class="hljs-params">(String str, String str2)</span> </span>&#123;...&#125;<br>         &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>在没有命中缓存之后，会调用<code>NovelHelper.getLocalLocalFile()</code>方法（这个方法真的会执行下载，但名字就…编码习惯真好）。所以前面做出来的URL只是用来查询缓存用的，并未在这个方法中触发下载行为。</p><p>在<code>NovelHelper</code>中，我们终于看到计算两个query的部分，key即是一个混合了时间戳的MD5编码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">goWebDownLoad</span><span class="hljs-params">(<span class="hljs-keyword">final</span> StepActivity stepActivity, String str, <span class="hljs-keyword">final</span> String str2, <span class="hljs-keyword">final</span> OnLoadCompleteListener onLoadCompleteListener)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (!AppUtils.RELEASE) &#123;<br>            Log.d(<span class="hljs-string">&quot;novel_goWebDownLoad&quot;</span>, <span class="hljs-string">&quot;webpath = &quot;</span> + str);<br>        &#125;<br>        <span class="hljs-keyword">long</span> currentTimeMillis = System.currentTimeMillis() / <span class="hljs-number">1000</span>;<br>        String replace = str.replace(Api.NOVEL_URL, <span class="hljs-string">&quot;&quot;</span>);<br>        StringBuilder sb = <span class="hljs-keyword">new</span> StringBuilder();<br>        sb.append(str);<br>        sb.append(<span class="hljs-string">&quot;?t=&quot;</span>);<br>        sb.append(currentTimeMillis);<br>        sb.append(<span class="hljs-string">&quot;&amp;k=&quot;</span>);<br>        sb.append(MD5.MD5Encode(Api.NOVEL_KEY + replace + currentTimeMillis).toLowerCase());<br>        String sb2 = sb.toString();<br>        KLog.log(<span class="hljs-string">&quot;小说地址====&quot;</span>, sb2);<br>  ...<br>&#125;<br></code></pre></td></tr></table></figure><p>现在我们得到可用的query了。</p><img src="image-20220425134554616.png" alt="image-20220425134554616" style="zoom:50%;" /><h1 id="制作电子书"><a href="#制作电子书" class="headerlink" title="制作电子书"></a>制作电子书</h1><p>不得不承认，DMZJ最近的API改版确实为获取数据带来了不少麻烦，幸好客户端APK混淆强度很低，通过反编译可以拿到其加密逻辑和接口详情。现在我们具有了完整的数据源，包括书籍信息（作者、封面、地区、tag等）、目录信息（卷、章节）和每章节对应的文本。</p><p>这里我使用了npm模块<code>epub-gen</code>来生成Epub电子书。由于Epub也适用HTML和CSS排版，只需要提供HTML章节文本和外置的CSS即可用以生成Epub。<a href="https://www.npmjs.com/package/epub-gen">epub-gen</a>的使用相当简单，只需要指定一些选项，将分章节的对象列表作为内容构造出Epub对象即可完成电子书的生成。该模块也可以自动下载url中的图片作为封面。</p><p>从之前获取的数据结构中生成Epub电子书的代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> content = []<br>   volumes.forEach(<span class="hljs-function"><span class="hljs-params">vol</span> =&gt;</span> &#123;<br>       content.push(&#123;<br>           <span class="hljs-attr">title</span>: vol.volumeName,<br>           <span class="hljs-attr">data</span>: <span class="hljs-string">&quot;&quot;</span><br>       &#125;)<br>       <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> chap <span class="hljs-keyword">of</span> vol.chapters) &#123;<br>           content.push(&#123;<br>               <span class="hljs-attr">title</span>: chap.chapterName,<br>               <span class="hljs-attr">data</span>: <span class="hljs-string">`&lt;div&gt;<span class="hljs-subst">$&#123;chap.text&#125;</span>/div`</span><br>           &#125;)<br>       &#125;<br>   &#125;)<br><br>   <span class="hljs-keyword">const</span> options = &#123;<br>       <span class="hljs-attr">title</span>: info.name,<br>       <span class="hljs-attr">author</span>: info.authors,<br>       <span class="hljs-attr">cover</span>: info.cover,<br>       <span class="hljs-attr">lang</span>: <span class="hljs-string">&quot;zh&quot;</span>,<br>       <span class="hljs-attr">tocTitle</span>: <span class="hljs-string">&quot;目录&quot;</span>,<br>       <span class="hljs-attr">content</span>: content,<br>       <span class="hljs-attr">verbose</span>: <span class="hljs-literal">true</span><br>   &#125;<br>   <br>   book = <span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> Epub(options, path.join(workingDir, <span class="hljs-string">`<span class="hljs-subst">$&#123;info.name&#125;</span>.epub`</span>))<br>   <span class="hljs-keyword">return</span> book<br></code></pre></td></tr></table></figure><img src="image-20220425162559469.png" alt="image-20220425162559469" style="zoom:50%;" /><p>一切都很完美……但<code>epub-gen</code>实际上并不支持多级目录，这意味着，我们得到的卷-章节两级的结构无法被生成到epub中……不过也不是什么大问题，首先有一些workaround，如在卷的<code>data</code>中插入空页，再放入其他章节；其次也可以直接修改<code>epub-gen</code>，这就不在本文讨论范围了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
      <tag>JS</tag>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DICOM网络传输协议解析</title>
    <link href="/StaticBlog/2021/11/11/DICOM-protocol-internals/"/>
    <url>/StaticBlog/2021/11/11/DICOM-protocol-internals/</url>
    
    <content type="html"><![CDATA[<h2 align='center' style="font-family: serif; font-size: 40px;">DICOM网络传输协议解析</h2><blockquote><p>该博客是由本人<a href="https://github.com/RandomNamer/BMECourseDesign">课程设计</a>其中一项报告改进而来。</p></blockquote><h2 id="一、概览"><a href="#一、概览" class="headerlink" title="一、概览"></a>一、概览</h2><h3 id="PACS简介"><a href="#PACS简介" class="headerlink" title="PACS简介"></a>PACS简介</h3><p>图像存档与通信系统（PACS）是一种医学成像技术，提供对多个模态图像的存储、访问、查找等功能。 PACS 图像存储和传输的通用格式是DICOM，而PACS本身就是DICOM标准的一部分。PACS系统由模态（Modality）、服务器（Server）和查看器（View Station）组成，可以认为是客户/服务模型的一种实现。其中模态和查看器都属于用户（Service Class User, SCU），而服务器被称作Service Class Provider，简写为SCP。</p><p>在实现上，模态通常是计算机断层扫描 (CT)、超声、核医学、正电子发射断层扫描 (PET) 和磁共振成像 (MRI)等数字成像设备。模态可以先发送到质量保证 (QA) 工作站，如果信息正确，则图像将传递到服务器中进行存储。这一步骤以来DICOM标准中的C-STORE协议。View Station是放射科医生审查患者研究并制定诊断的地方，其基本功能是对服务器中的数据执行增删改查操作，在DICOM标准中由C-FIND、C-MOVE 和 C-GET等实现。在View Station中，也可以继承报告系统等外围设施，并与医院内的其他信息系统如电子病历系统EMR相整合，形成端到端的工作流。</p><h4 id="DCMTK"><a href="#DCMTK" class="headerlink" title="DCMTK"></a>DCMTK</h4><p>这里我们采用了DCMTK工具包充当Modality和View Station。DCMTK是一套实现了DCM标准的开源程序包和库，使用C++开发，实现了跨平台。DCMTK中实现了大部分DICOM标准，包括图像的打开、转换和校验功能，以及在互联网上传输DICOM文件。</p><p>本次在macOS系统上构建DCMTK，在其它类UNIX系统下的构建应该也有着一致的步骤。DCMTK源码中已经写好了对应各种系统的<code>CMakelist</code>, 只需要执行<code>cmake</code>即可完成配置。然后在源文件路径下<code>make</code>即可构建整个项目，构建成功后会输出对应的静态库文件和二进制可执行文件：</p><img src="image-20210930193320612.png" alt="image-20210930193320612" style="zoom:33%;" /><img src="image-20210930193338568.png" alt="image-20210930193338568" style="zoom:33%;" /><p>输出有一组命令行工具和对应的静态链接库，满足了使用者通过系统命令调用和直接链接调用的需求，非常方便二次开发。同时，我们也可以直接使用生成的命令行工具执行各种DICOM操作，例如，我们可以用其中的<code>storescu</code>充当modality，向服务端发送DICOM文件。发送的格式为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">storescu [options] peer port dcmfile-in...<br></code></pre></td></tr></table></figure><h4 id="CONQEST-SERVER"><a href="#CONQEST-SERVER" class="headerlink" title="CONQEST SERVER"></a>CONQEST SERVER</h4><p>CONQUEST是一个轻量级的DICOM SERVER，实现了DIMSE消息机制，以及对多种数据库的支持。</p><h2 id="二、图像通信及其参数分析"><a href="#二、图像通信及其参数分析" class="headerlink" title="二、图像通信及其参数分析"></a>二、图像通信及其参数分析</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>DICOM是一种建构在TCP/IP之上的高层协议。DICOM协议的底层是ULP（Upper Layer Protocol）。它主要负责与TCP相对接，当 DICOM 应用实体通过 DIMSE 完成消息交换后，需要 DICOM 上层协议层 ULP 来提供传输支持。</p><p>ULP 提供 5 种连接控制服务：A-ASSOCIATE、A-RELEASE、A-ABORT、P-DATA、A-P-ABORT。</p><ul><li>A-ASSOCIATE： 用来在通信实体双方间协商并建立关联，交换一些初始化信息，因此它是一个证实性服务；</li><li>A-RELEASE： 用于在完成传输后释放关联，它是一个正常的中止方式，不会造成应用数据的丢失，也是一种证实性服务；</li><li>A-ABORT： 是当通信出现异常时用来终止关联，有可能造成一些暂存数据的丢失，它是一个非证实性服务；</li><li>P-DATA： 用来传输 DIMSE 命令流和数据流，通信实体一方一旦把 DIMSE 消息流传送出去就认定另一方能够准确无误地收到，因此它是一个非证实性服务；</li><li>A-P-ABORT： 也是用来终止关联，主要是用于当网络连接失败时，使得上层能够及时获得操作响应信息。</li></ul><p>ULP 提供了 7 个协议数据单元（Protocol Data Unit， PDU）来实现上述的 5 种服务 。</p><ul><li>A-ASSOCIATE-RQ： 建立ASSOCIATE请求</li><li>A-ASSOCIATE-AC： 接受ASSOCIATE建立</li><li>A-ASSOCIATE-RJ： 拒绝ASSOCIATE建立</li><li>P-DATA-TF： 进行数据传输</li><li>A-RELEASE-RQ： ASSOCIATE释放请求</li><li>A-RELEASE-RP： ASSOCIATE释放响应</li><li>A-ABORT： ASSOCIATE终止</li></ul><p>从前文也可以推测出DICOM图像传输的过程：通过Association PDU建立连接，通过P-DATA-TF PDU进行实际传输，传输完成后通过Release PDU进行连接释放，或在传输途中使用A-ABORT中止连接。</p><p>通信的细节将在下面进行讲述。</p><h3 id="C-STORE"><a href="#C-STORE" class="headerlink" title="C-STORE"></a>C-STORE</h3><p>这里使用<code>-v -d</code>参数使DCMTK的命令行工具输出Debug模式下的详尽日志，同时也可以使用网络抓包工具进行辅助分析。</p><img src="image-20210930194603984.png" alt="image-20210930194603984" style="zoom:50%;" /><p>日志中包括双方建立连接，传输，传输完成的详细过程，其中包括建立连接时的请求和响应信息<code>A-ASSOCIATE-RQ</code>、<code>A-ASSOCIATE-AC</code>、发送store请求的DIMSE信息和收到store响应的DIMSE信息。</p><h4 id="连接建立"><a href="#连接建立" class="headerlink" title="连接建立"></a>连接建立</h4><p>在DICOM标准中，连接请求A-ASSOCIATE-RQ描述如下：</p><table><thead><tr><th align="center"><strong>PDU bytes</strong></th><th align="center"><strong>Field name</strong></th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">PDU-type</td><td align="center">01H</td></tr><tr><td align="center">02</td><td align="center">Reserved</td><td align="center">保留字段，应为00H，但接收方不做校验。</td></tr><tr><td align="center">3-6</td><td align="center">PDU-length</td><td align="center">报文的长度。应该被编码为二进制数字。</td></tr><tr><td align="center">7-8</td><td align="center">Protocol-version</td><td align="center">用每一位代表一个DICOM UL协议。比如发送端支持协议版本1，就应该把第0位设置为1。</td></tr><tr><td align="center">9-10</td><td align="center">Reserved</td><td align="center">保留字段，应为0000H，但接收方不做校验。</td></tr><tr><td align="center">11-26</td><td align="center">Called-AE-title</td><td align="center">接收端DICOM应用名称。应该被编码为16个字符，空字符用20H补齐。</td></tr><tr><td align="center">27-42</td><td align="center">Calling-AE-title</td><td align="center">发送端DICOM应用名称。应该被编码为16个字符，空字符用20H补齐。</td></tr><tr><td align="center">43-74</td><td align="center">Reserved</td><td align="center">保留字段，应全为0，但接收方不做校验。</td></tr><tr><td align="center">75-xxx</td><td align="center">Variable items</td><td align="center">一个Application Context项目，多个Prensentation Context项目和用户信息。</td></tr></tbody></table><p>比如在例子中的传输中，就有一个PDU Length为 3853 + 6 bytes的请求报文，其发送端应用名为<code>STORESCU</code>，接收端AE title为<code>ANY-SCP</code>,  Application Context Name为<code>1.2.840.10008.3.1.1.1</code>。</p><p>在服务端收到请求后，服务器就会开始解析请求中携带的信息，主要是检查携带的Presentation Context，条件满足后就会做出响应，然后返回ASSOCIATE-AC报文，其结构定义如下：</p><table><thead><tr><th align="center"><strong>PDU bytes</strong></th><th align="center"><strong>Field name</strong></th><th align="center"><strong>Description of field</strong></th></tr></thead><tbody><tr><td align="center">1</td><td align="center">PDU-type</td><td align="center">02H</td></tr><tr><td align="center">2</td><td align="center">Reserved</td><td align="center">保留字段，应为00H，但接收方不做校验。</td></tr><tr><td align="center">3-6</td><td align="center">PDU-length</td><td align="center">报文的长度。应该被编码为二进制数字。</td></tr><tr><td align="center">7-8</td><td align="center">Protocol-version</td><td align="center">用每一位代表一个DICOM UL协议。比如发送端支持协议版本1，就应该把第0位设置为1。</td></tr><tr><td align="center">9-10</td><td align="center">Reserved</td><td align="center">保留字段，应为0000H，但接收方不做校验。</td></tr><tr><td align="center">11-26</td><td align="center">Reserved</td><td align="center">保留字段，应与 A-ASSOCIATE-RQ PDU一致, 但不做校验。</td></tr><tr><td align="center">27-42</td><td align="center">Reserved</td><td align="center">保留字段，应与 A-ASSOCIATE-RQ PDU一致, 但不做校验。</td></tr><tr><td align="center">43-74</td><td align="center">Reserved</td><td align="center">保留字段，应与 A-ASSOCIATE-RQ PDU一致, 但不做校验。</td></tr><tr><td align="center">75-xxx</td><td align="center">Variable items</td><td align="center">一个Application Context项目，多个Prensentation Context项目和用户信息。</td></tr></tbody></table><h4 id="Presentation-Context"><a href="#Presentation-Context" class="headerlink" title="Presentation Context"></a>Presentation Context</h4><p>Presentation Context是DICOM协议中规定客户端支持传输形式的一种表示。它详细描述了该类型片段内容的结构和编码格式。它由3部分构成：一个Context ID, 一个Abstract Syntax和多个Transfer Syntax。</p><ol><li><strong>Context ID</strong>是一个1 - 255之间的正奇数</li><li><strong>Abstract Syntax</strong>是数据代表的含义，通常用DICOM SOP Class UID表示，如下面两种ID；同时也可以用私有ID表示来实现自定义图像类型的传输。<ul><li><code>1.2.840.10008.1.1</code>  <em>Verification SOP Class</em></li><li><code>1.2.840.10008.5.1.4.1.1</code>  <em>CT Image Storage</em></li></ul></li><li><strong>Transfer Syntax</strong>是数据编码格式。通常用DICOM Transfer Syntax Class UID表示，如下面两种ID；同时也可以用私有ID表示来实现自定义图像类型的传输。<ul><li><code>1.2.840.10008.1.2</code>  <em>Implicit VR Little Endian</em></li><li><code>1.2.840.10008.1.2.4.50</code>   <em>JPEG Baseline</em></li></ul></li></ol><p>dcmtk的日志可以帮助我们解析Presentation Context，如下所示：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Context</span> <span class="hljs-variable">ID</span><span class="hljs-operator">:</span>        <span class="hljs-number">45</span> <span class="hljs-punctuation">(</span><span class="hljs-variable">Proposed</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span>     <span class="hljs-variable">Abstract</span> <span class="hljs-built_in">Syntax</span><span class="hljs-operator">:</span> <span class="hljs-operator">=</span><span class="hljs-variable">DigitalIntraOralXRayImageStorageForPresentation</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span>     <span class="hljs-variable">Proposed</span> <span class="hljs-variable">SCP</span><span class="hljs-operator">/</span><span class="hljs-variable">SCU</span> <span class="hljs-variable">Role</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Default</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span>     <span class="hljs-variable">Proposed</span> <span class="hljs-variable">Transfer</span> <span class="hljs-built_in">Syntax</span><span class="hljs-punctuation">(</span><span class="hljs-variable">es</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span>       <span class="hljs-operator">=</span><span class="hljs-variable">LittleEndianExplicit</span><br></code></pre></td></tr></table></figure><p>在Server中，打开Debug模式日志，也会在对ASSOCIATE-RQ中携带的Presentation Context进行列印：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">CONQUESTSRV1</span>] UPACS THREAD <span class="hljs-number">45</span>: STARTED AT: Wed Oct <span class="hljs-number">13</span> <span class="hljs-number">18</span>:<span class="hljs-number">25</span>:<span class="hljs-number">41</span> <span class="hljs-number">2021</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] A-ASSOCIATE-RQ Packet Dump<br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Calling Application Title : <span class="hljs-string">&quot;STORESCU        &quot;</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Called Application Title : <span class="hljs-string">&quot;ANY-SCP         &quot;</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Application Context : <span class="hljs-string">&quot;1.2.840.10008.3.1.1.1&quot;</span>, PDU length: <span class="hljs-number">16384</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Number of Proposed Presentation Contexts: <span class="hljs-number">128</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Presentation Context <span class="hljs-number">0</span> <span class="hljs-string">&quot;1.2.840.10008.5.1.4.1.1.9.1.3&quot;</span> <span class="hljs-number">1</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Presentation Context <span class="hljs-number">1</span> <span class="hljs-string">&quot;1.2.840.10008.5.1.4.1.1.9.1.3&quot;</span> <span class="hljs-number">1</span><br>...<br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Presentation Context <span class="hljs-number">127</span> <span class="hljs-string">&quot;1.2.840.10008.5.1.4.1.1.12.2&quot;</span> <span class="hljs-number">1</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] Server Command   := <span class="hljs-number">0001</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] Message ID       := <span class="hljs-number">0001</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] FreeStore Left <span class="hljs-number">17269</span> <span class="hljs-keyword">on</span> c:\<br>[<span class="hljs-meta">CONQUESTSRV1</span>] Written file: c:\users\admi\desktop\dicomserver150b\data\MF<span class="hljs-number">-0000012</span>\<span class="hljs-number">1.3</span><span class="hljs-number">.6</span><span class="hljs-number">.1</span><span class="hljs-number">.4</span><span class="hljs-number">.1</span><span class="hljs-number">.5962</span><span class="hljs-number">.1</span><span class="hljs-number">.3</span><span class="hljs-number">.5012</span><span class="hljs-number">.1</span><span class="hljs-number">.1166546115</span><span class="hljs-number">.14677</span>_0001_000001_16341207560000.dcm<br>[<span class="hljs-meta">CONQUESTSRV1</span>] UPACS THREAD <span class="hljs-number">45</span>: ENDED AT: Wed Oct <span class="hljs-number">13</span> <span class="hljs-number">18</span>:<span class="hljs-number">25</span>:<span class="hljs-number">56</span> <span class="hljs-number">2021</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] UPACS THREAD <span class="hljs-number">45</span>: TOTAL RUNNING TIME: <span class="hljs-number">15</span> SECONDS<br></code></pre></td></tr></table></figure><h4 id="DIMSE"><a href="#DIMSE" class="headerlink" title="DIMSE"></a>DIMSE</h4><p>DIMSE（DICOM Message Service Element）是在P-DATA PDU下传输的一种消息格式。DICOM3.0协议中共有11种DIMSE服务：</p><table><thead><tr><th><strong>Name</strong></th><th><strong>Group</strong></th><th><strong>Type</strong></th></tr></thead><tbody><tr><td>C-STORE</td><td>DIMSE-C</td><td>operation</td></tr><tr><td>C-GET</td><td>DIMSE-C</td><td>operation</td></tr><tr><td>C-MOVE</td><td>DIMSE-C</td><td>operation</td></tr><tr><td>C-FIND</td><td>DIMSE-C</td><td>operation</td></tr><tr><td>C-ECHO</td><td>DIMSE-C</td><td>operation</td></tr><tr><td>N-EVENT-REPORT</td><td>DIMSE-N</td><td>notification</td></tr><tr><td>N-GET</td><td>DIMSE-N</td><td>operation</td></tr><tr><td>N-SET</td><td>DIMSE-N</td><td>operation</td></tr><tr><td>N-ACTION</td><td>DIMSE-N</td><td>operation</td></tr><tr><td>N-CREATE</td><td>DIMSE-N</td><td>operation</td></tr><tr><td>N-DELETE</td><td>DIMSE-N</td><td>operation</td></tr></tbody></table><p>这里还是以C-STORE为例进行分析。在收到服务端返回的ASSOCIATE-AC报文后，就正式发起store请求，进行传输。日志种会输出本次传输的DIMSE信息。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=====================</span> <span class="hljs-variable">OUTGOING</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">====================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">Type</span>                  <span class="hljs-operator">:</span> <span class="hljs-built_in">C</span><span class="hljs-operator">-</span><span class="hljs-variable">STORE</span> <span class="hljs-variable">RQ</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">ID</span>                    <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Class</span> <span class="hljs-variable">UID</span>        <span class="hljs-operator">:</span> <span class="hljs-variable">SecondaryCaptureImageStorage</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Instance</span> <span class="hljs-variable">UID</span>     <span class="hljs-operator">:</span> <span class="hljs-number">1.3</span><span class="hljs-number">.6</span><span class="hljs-number">.1</span><span class="hljs-number">.4</span><span class="hljs-number">.1</span><span class="hljs-number">.5962</span><span class="hljs-number">.99</span><span class="hljs-number">.1</span><span class="hljs-number">.2280943358</span><span class="hljs-number">.716200484</span><span class="hljs-number">.1363785608958</span><span class="hljs-number">.60</span><span class="hljs-number">.0</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Data</span> <span class="hljs-built_in">Set</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">present</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Priority</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">medium</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=======================</span> <span class="hljs-variable">END</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">=======================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DcmDataset</span><span class="hljs-string">::read</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">TransferSyntax</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Received</span> <span class="hljs-variable">Store</span> <span class="hljs-variable">Response</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=====================</span> <span class="hljs-variable">INCOMING</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">====================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">Type</span>                  <span class="hljs-operator">:</span> <span class="hljs-built_in">C</span><span class="hljs-operator">-</span><span class="hljs-variable">STORE</span> <span class="hljs-variable">RSP</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Presentation</span> <span class="hljs-built_in">Context</span> <span class="hljs-variable">ID</span>       <span class="hljs-operator">:</span> <span class="hljs-number">203</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">ID</span> <span class="hljs-variable">Being</span> <span class="hljs-variable">Responded</span> <span class="hljs-variable">To</span> <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Class</span> <span class="hljs-variable">UID</span>        <span class="hljs-operator">:</span> <span class="hljs-variable">SecondaryCaptureImageStorage</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Instance</span> <span class="hljs-variable">UID</span>     <span class="hljs-operator">:</span> <span class="hljs-number">1.3</span><span class="hljs-number">.6</span><span class="hljs-number">.1</span><span class="hljs-number">.4</span><span class="hljs-number">.1</span><span class="hljs-number">.5962</span><span class="hljs-number">.99</span><span class="hljs-number">.1</span><span class="hljs-number">.2280943358</span><span class="hljs-number">.716200484</span><span class="hljs-number">.1363785608958</span><span class="hljs-number">.60</span><span class="hljs-number">.0</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Data</span> <span class="hljs-built_in">Set</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">none</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">Status</span>                  <span class="hljs-operator">:</span> <span class="hljs-number">0</span><span class="hljs-variable">x0000</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Success</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=======================</span> <span class="hljs-variable">END</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">=======================</span><br></code></pre></td></tr></table></figure><p>在传输完成后，即可在服务端数据库看到这个图像，说明传输已经成功。</p><img src="image-20211013183425277.png" alt="image-20211013183425277" style="zoom:50%;" /><h4 id="传输"><a href="#传输" class="headerlink" title="传输"></a>传输</h4><p>DIMSE传输与DICOM图像传输都是用P-DATA PDU，这里通过抓包软件对它们进行分析。</p><p>在A-ASSOCIATE AC消息之后，两者开始通过P-DATA PDU进行传输。首先我们可以看到C-STORE RQ这一DIMSE消息的报文。其信息内容与之前日志输出的完全一致。</p><img src="image-20211013183453881.png" alt="image-20211013183453881" style="zoom:50%;" /><p>然后我们可以看到DCM文件被实际传输。PDV长度为32768B（32KB），实际上由24个长度为1514字节的TCP帧构成。传输的内容是小端序，未压缩，无加密。</p><img src="image-20211013183507932.png" alt="image-20211013183507932" style="zoom:50%;" /><h3 id="C-FIND"><a href="#C-FIND" class="headerlink" title="C-FIND"></a>C-FIND</h3><h4 id="Information-Model"><a href="#Information-Model" class="headerlink" title="Information Model"></a>Information Model</h4><p>在DICOM标准中，查询/取回的信息模型有以下三种：</p><ul><li>Patient Root</li><li>Study Root</li><li>Patient/Study Only</li></ul><p>例如，在患者根模型中，有四种层级的分类：</p><ul><li>Patient：对应Patient Information Entity (IE)</li><li>Study：对应一个患者和Study IE</li><li>Series：Series依赖具体的modality，在一个study中。它对应着Series, Frame of Reference 和Equipment IE。</li><li>Composite Object Instance：对应Composite Object IE。</li></ul><h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><p>C-FIND查询使用Key- Value进行，查询在SCP中会被转换为对应的SQL语句，向数据库发起查询。</p><table><thead><tr><th align="center"><strong>描述/模块</strong></th><th align="center"><strong>标签</strong></th><th align="center"><strong>匹配密钥类型</strong></th><th align="center"><strong>返回密钥类型</strong></th><th align="center"><strong>备注/匹配类型</strong></th></tr></thead><tbody><tr><td align="center">病人姓名</td><td align="center">（0010,0010）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">患者ID</td><td align="center">（0010,0020）</td><td align="center">R</td><td align="center">1</td><td align="center">请求标识符中应显示。应使用单值匹配检索。注意由于预计只有一个响应，这是一个唯一的密钥。</td></tr><tr><td align="center">患者ID的发行人</td><td align="center">（0010,0021）</td><td align="center">R</td><td align="center">2</td><td align="center">应使用单值匹配检索。在有多个发行商的情况下，此密钥限制将患者ID（0010,0020）与患者ID（0010,0020）唯一域匹配。</td></tr><tr><td align="center">患者的出生日期</td><td align="center">（0010,0030）</td><td align="center">—</td><td align="center">2</td><td align="center"></td></tr><tr><td align="center">患者的性别</td><td align="center">（0010,0040）</td><td align="center">—</td><td align="center">2</td><td align="center"></td></tr><tr><td align="center">患者识别模块的所有其他属性</td><td align="center"></td><td align="center">—</td><td align="center">3</td><td align="center"></td></tr><tr><td align="center">患者人口统计模块的所有其他属性</td><td align="center"></td><td align="center">—</td><td align="center">3</td><td align="center"></td></tr><tr><td align="center">观察日期时间</td><td align="center">（0040，A032）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">值类型</td><td align="center">（0040，A040）</td><td align="center">—</td><td align="center">1</td><td align="center">应与（0040，A043）的第一行相同</td></tr><tr><td align="center">概念名称代码序列</td><td align="center">（0040，A043）</td><td align="center">—</td><td align="center">1</td><td align="center">请求中不应存在，响应中用应与标识符中内容模板序列（0040，A504）中标识的模板相同。</td></tr><tr><td align="center">&gt;代码值</td><td align="center">（0008,0100）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;编码方案指示</td><td align="center">（0008,0102）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;编码方案版本</td><td align="center">（0008,0103）</td><td align="center">—</td><td align="center">1C</td><td align="center">如果编码方案指示（0008,0102）的值不足以明确识别代码值（0008,0100），则为必填项。</td></tr><tr><td align="center">&gt;代码含义</td><td align="center">（0008,0104）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;概念名称代码序列的所有其他属性</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">内容序列</td><td align="center">（0040，A730）</td><td align="center">—</td><td align="center">2</td><td align="center">内容序列（0040，A730）是一个潜在的递归嵌套项目序列。内容序列应始终在请求标识符中发送零长度。响应数据集中的内容序列应包含所请求模板的内容项。</td></tr><tr><td align="center">&gt;内容序列的所有属性</td><td align="center"></td><td align="center">—</td><td align="center">—</td><td align="center">SCP提供的内容项目。对内容项属性类型的要求应符合SR文档内容模块中的定义。</td></tr><tr><td align="center">HL7结构化文档参考序列</td><td align="center">（0040，A390）</td><td align="center">—</td><td align="center">1C</td><td align="center"></td></tr><tr><td align="center">&gt;参考的SOP类UID</td><td align="center">（0008,1150）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;引用的SOP实例UID</td><td align="center">（0008,1155）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;HL7实例标识符</td><td align="center">（0040，E001）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;检索URI</td><td align="center">（0040，E010）</td><td align="center">—</td><td align="center">3</td><td align="center"></td></tr><tr><td align="center">包含其他参考实例序列的研究</td><td align="center">（0008,1200）</td><td align="center">—</td><td align="center">1C</td><td align="center">如果内容序列（0040，A390）包含引用使用患者/研究/系列/实例信息模型的SOP实例的内容项，则为必填项。</td></tr><tr><td align="center">&gt;引用系列序列</td><td align="center">（0008,1115）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;&gt;系列实例UID</td><td align="center">（0020,000E）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;&gt;引用实例序列</td><td align="center">（0008,114A）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;&gt;&gt;参考SOP类UID</td><td align="center">（0008,1150）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;&gt;&gt;引用的SOP实例UID</td><td align="center">（0008,1155）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr></tbody></table><h4 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h4><p>C-FIND也同样遵循上述的流程，即先通过Association PDU建立连接，通过P-DATA-TF PDU进行实际传输，传输完成后通过Release PDU进行连接释放。我们试验查询上一次写入的DCM文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  ~ findscu -v -d -S -k &quot;(0008, 0052)=STUDY&quot; -k &quot;(0010,0020)=Case1&quot; 59.78.44.209 5678<br>D: $dcmtk: findscu v3.6.6 2021-01-14 $<br>D: <br>D: DcmDataDictionary: Loading file: /usr/local/Cellar/dcmtk/3.6.6/share/dcmtk/dicom.dic<br>D: Request Parameters:<br>D: ====================== BEGIN A-ASSOCIATE-RQ =====================<br>D: Our Implementation Class UID:      1.2.276.0.7230010.3.0.3.6.6<br>D: Our Implementation Version Name:   OFFIS_DCMTK_366<br>D: Their Implementation Class UID:    <br>D: Their Implementation Version Name: <br>D: Application Context Name:    1.2.840.10008.3.1.1.1<br>D: Calling Application Name:    FINDSCU<br>D: Called Application Name:     ANY-SCP<br>D: Responding Application Name: ANY-SCP<br>D: Our Max PDU Receive Size:    16384<br>D: Their Max PDU Receive Size:  0<br>D: Presentation Contexts:<br>D:   Context ID:        1 (Proposed)<br>D:     Abstract Syntax: =FINDStudyRootQueryRetrieveInformationModel<br>D:     Proposed SCP/SCU Role: Default<br>D:     Proposed Transfer Syntax(es):<br>D:       =LittleEndianExplicit<br>D:       =BigEndianExplicit<br>D:       =LittleEndianImplicit<br>D: Requested Extended Negotiation: none<br>D: Accepted Extended Negotiation:  none<br>D: Requested User Identity Negotiation: none<br>D: User Identity Negotiation Response:  none<br>D: ======================= END A-ASSOCIATE-RQ ======================<br></code></pre></td></tr></table></figure><p>在ASSOCIATE-RQ中，我们可以看到它携带了一个Presentation Context，表示这个是一个StudyRoot的Information Model。对方只要支持这一种Infromation Model即可完成连接。</p><p>在DICOM 3.0中，C-FIND-RQ协议规定如下：</p><table><thead><tr><th align="center"><strong>Message Field</strong></th><th align="center"><strong>Description of Field</strong></th></tr></thead><tbody><tr><td align="center">Command Group Length</td><td align="center">最后一个数值组到下一组的间隔</td></tr><tr><td align="center">Affected SOP Class UID</td><td align="center">本次操作的SOP Class UID</td></tr><tr><td align="center">Command Field</td><td align="center">0020H表示为C-FIND-RQ消息</td></tr><tr><td align="center">Message ID</td><td align="center">用来唯一表示本次操作并与其他正在进行的作业相区隔。</td></tr><tr><td align="center">Priority</td><td align="center">LOW = 0002H；MEDIUM = 0000H；HIGH = 0001H</td></tr><tr><td align="center">Command Data Set Type</td><td align="center">除0101H (Null)外均可.</td></tr><tr><td align="center">Identifier</td><td align="center">Service Class Specification数据集合，可以用来存储查询的Query。</td></tr></tbody></table><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">I</span>: Requesting Association<br><span class="hljs-attribute">D</span>: setting network send timeout to <span class="hljs-number">60</span> seconds<br><span class="hljs-attribute">D</span>: setting network receive timeout to <span class="hljs-number">60</span> seconds<br><span class="hljs-attribute">D</span>: Constructing Associate RQ PDU<br><span class="hljs-attribute">D</span>: PDU Type: Associate Accept, PDU Length: <span class="hljs-number">187</span> + <span class="hljs-number">6</span> bytes PDU header<br><span class="hljs-attribute">D</span>:   <span class="hljs-number">02</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  bb  <span class="hljs-number">00</span>  <span class="hljs-number">01</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">41</span>  <span class="hljs-number">4</span>e  <span class="hljs-number">59</span>  <span class="hljs-number">2</span>d  <span class="hljs-number">53</span>  <span class="hljs-number">43</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">50</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">46</span>  <span class="hljs-number">49</span>  <span class="hljs-number">4</span>e  <span class="hljs-number">44</span>  <span class="hljs-number">53</span>  <span class="hljs-number">43</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">55</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">10</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">15</span>  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e<br><span class="hljs-attribute">D</span>:   <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">38</span>  <span class="hljs-number">34</span>  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">38</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">33</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e<br><span class="hljs-attribute">D</span>:   <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">21</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">19</span>  <span class="hljs-number">01</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">40</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">11</span>  <span class="hljs-number">31</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">2</span>e  <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">38</span>  <span class="hljs-number">34</span>  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">38</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">32</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">50</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">3</span>d  <span class="hljs-number">51</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">04</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">80</span>  <span class="hljs-number">00</span>  <span class="hljs-number">52</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">22</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">38</span>  <span class="hljs-number">32</span>  <span class="hljs-number">36</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">33</span>  <span class="hljs-number">36</span>  <span class="hljs-number">38</span>  <span class="hljs-number">30</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">30</span>  <span class="hljs-number">34</span>  <span class="hljs-number">33</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">33</span>  <span class="hljs-number">35</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">36</span>  <span class="hljs-number">36</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">30</span>  <span class="hljs-number">31</span>  <span class="hljs-number">55</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">0</span>b  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">35</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>f  <span class="hljs-number">57</span>  <span class="hljs-number">49</span>  <span class="hljs-number">4</span>e  <span class="hljs-number">33</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">32</span><br><span class="hljs-attribute">D</span>: Parsing an A-ASSOCIATE PDU<br><span class="hljs-attribute">D</span>: Association Parameters Negotiated:<br><span class="hljs-attribute">D</span>: ====================== BEGIN A-ASSOCIATE-AC =====================<br><span class="hljs-attribute">D</span>: Our Implementation Class UID:      <span class="hljs-number">1.2.276.0</span>.<span class="hljs-number">7230010</span>.<span class="hljs-number">3.0.3.6</span>.<span class="hljs-number">6</span><br><span class="hljs-attribute">D</span>: Our Implementation Version Name:   OFFIS_DCMTK_<span class="hljs-number">366</span><br><span class="hljs-attribute">D</span>: Their Implementation Class UID:    <span class="hljs-number">1.2.826.0</span>.<span class="hljs-number">1</span>.<span class="hljs-number">3680043</span>.<span class="hljs-number">2</span>.<span class="hljs-number">135</span>.<span class="hljs-number">1066</span>.<span class="hljs-number">101</span><br><span class="hljs-attribute">D</span>: Their Implementation Version Name: <span class="hljs-number">1</span>.<span class="hljs-number">5</span>.<span class="hljs-number">0</span>/WIN<span class="hljs-number">32</span><br><span class="hljs-attribute">D</span>: Application Context Name:    <span class="hljs-number">1.2.840.100</span><span class="hljs-number">08.3.1.1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">D</span>: Calling Application Name:    FINDSCU<br><span class="hljs-attribute">D</span>: Called Application Name:     ANY-SCP<br><span class="hljs-attribute">D</span>: Responding Application Name: ANY-SCP<br><span class="hljs-attribute">D</span>: Our Max PDU Receive Size:    <span class="hljs-number">16384</span><br><span class="hljs-attribute">D</span>: Their Max PDU Receive Size:  <span class="hljs-number">32768</span><br><span class="hljs-attribute">D</span>: Presentation Contexts:<br><span class="hljs-attribute">D</span>:   Context ID:        <span class="hljs-number">1</span> (Accepted)<br><span class="hljs-attribute">D</span>:     Abstract Syntax: =FINDStudyRootQueryRetrieveInformationModel<br><span class="hljs-attribute">D</span>:     Proposed SCP/SCU Role: Default<br><span class="hljs-attribute">D</span>:     Accepted SCP/SCU Role: Default<br><span class="hljs-attribute">D</span>:     Accepted Transfer Syntax: =LittleEndianImplicit<br><span class="hljs-attribute">D</span>: Requested Extended Negotiation: none<br><span class="hljs-attribute">D</span>: Accepted Extended Negotiation:  none<br><span class="hljs-attribute">D</span>: Requested User Identity Negotiation: none<br><span class="hljs-attribute">D</span>: User Identity Negotiation Response:  none<br><span class="hljs-attribute">D</span>: ======================= END A-ASSOCIATE-AC ======================<br></code></pre></td></tr></table></figure><p>对方发会响应，连接建立。</p><p>然后就是在P-DATA层发送DIMSE消息。可以看到DIMSE消息中主要含有这次的SOP，也就是StudyRoot查询的Information Model，同时也携带着两个Query。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Association</span> <span class="hljs-variable">Accepted</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">Max</span> <span class="hljs-variable">Send</span> <span class="hljs-variable">PDV</span><span class="hljs-operator">:</span> <span class="hljs-number">32756</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Sending</span> <span class="hljs-built_in">Find</span> <span class="hljs-variable">Request</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=====================</span> <span class="hljs-variable">OUTGOING</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">====================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">Type</span>                  <span class="hljs-operator">:</span> <span class="hljs-built_in">C</span><span class="hljs-operator">-</span><span class="hljs-variable">FIND</span> <span class="hljs-variable">RQ</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Presentation</span> <span class="hljs-built_in">Context</span> <span class="hljs-variable">ID</span>       <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">ID</span>                    <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Class</span> <span class="hljs-variable">UID</span>        <span class="hljs-operator">:</span> <span class="hljs-variable">FINDStudyRootQueryRetrieveInformationModel</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Data</span> <span class="hljs-built_in">Set</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">present</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Priority</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">medium</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=======================</span> <span class="hljs-variable">END</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">=======================</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Request</span> <span class="hljs-variable">Identifiers</span><span class="hljs-operator">:</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-type">#</span> <span class="hljs-variable">Dicom</span><span class="hljs-operator">-</span><span class="hljs-variable">Data</span><span class="hljs-operator">-</span><span class="hljs-built_in">Set</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-type">#</span> <span class="hljs-variable">Used</span> <span class="hljs-variable">TransferSyntax</span><span class="hljs-operator">:</span> <span class="hljs-variable">Little</span> <span class="hljs-variable">Endian</span> <span class="hljs-variable">Explicit</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-punctuation">(</span><span class="hljs-number">0008</span><span class="hljs-operator">,</span><span class="hljs-number">0052</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">CS</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">STUDY</span><span class="hljs-punctuation">]</span>                                  <span class="hljs-type">#</span>   <span class="hljs-number">6</span><span class="hljs-operator">,</span> <span class="hljs-number">1</span> <span class="hljs-variable">QueryRetrieveLevel</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-punctuation">(</span><span class="hljs-number">0010</span><span class="hljs-operator">,</span><span class="hljs-number">0020</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">LO</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">Case1</span><span class="hljs-punctuation">]</span>                                  <span class="hljs-type">#</span>   <span class="hljs-number">6</span><span class="hljs-operator">,</span> <span class="hljs-number">1</span> <span class="hljs-variable">PatientID</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DcmDataset</span><span class="hljs-string">::read</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">TransferSyntax</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DcmDataset</span><span class="hljs-string">::read</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">TransferSyntax</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br></code></pre></td></tr></table></figure><p>在服务端，我们可以通过查看日志，确定查询的操作方式：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">CONQUESTSRV1</span>] UPACS THREAD <span class="hljs-number">46</span>: STARTED AT: Wed Oct <span class="hljs-number">13</span> <span class="hljs-number">19</span>:<span class="hljs-number">36</span>:<span class="hljs-number">59</span> <span class="hljs-number">2021</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] A-ASSOCIATE-RQ Packet Dump<br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Calling Application Title : <span class="hljs-string">&quot;FINDSCU         &quot;</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Called Application Title : <span class="hljs-string">&quot;ANY-SCP         &quot;</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Application Context : <span class="hljs-string">&quot;1.2.840.10008.3.1.1.1&quot;</span>, PDU length: <span class="hljs-number">16384</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Number of Proposed Presentation Contexts: <span class="hljs-number">1</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Presentation Context <span class="hljs-number">0</span> <span class="hljs-string">&quot;1.2.840.10008.5.1.4.1.2.2.1&quot;</span> <span class="hljs-number">1</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] Server Command   := <span class="hljs-number">0020</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] Message ID       := <span class="hljs-number">0001</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] (StudyRootQuery) search level: STUDY <br>[<span class="hljs-meta">CONQUESTSRV1</span>] Query On Study<br>[<span class="hljs-meta">CONQUESTSRV1</span>] Issue Query <span class="hljs-keyword">on</span> Columns: DICOMStudies.PatientID<br>[<span class="hljs-meta">CONQUESTSRV1</span>] Values: DICOMStudies.PatientID = <span class="hljs-string">&#x27;Case1&#x27;</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] Tables: DICOMStudies<br>[<span class="hljs-meta">CONQUESTSRV1</span>] Sorting ((<span class="hljs-literal">null</span>)) DoSort := <span class="hljs-number">0</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] Records = <span class="hljs-number">1</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] C-Find (StudyRoot) located <span class="hljs-number">1</span> records<br>[<span class="hljs-meta">CONQUESTSRV1</span>] UPACS THREAD <span class="hljs-number">46</span>: ENDED AT: Wed Oct <span class="hljs-number">13</span> <span class="hljs-number">19</span>:<span class="hljs-number">36</span>:<span class="hljs-number">59</span> <span class="hljs-number">2021</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] UPACS THREAD <span class="hljs-number">46</span>: TOTAL RUNNING TIME: <span class="hljs-number">0</span> SECONDS<br></code></pre></td></tr></table></figure><p>可以看到，服务端先是确定从Study为根结点开始查询，然后在刚才指定的PatientID列开始查询，找到了一条记录，然后发送响应，下面是SCU解析的响应内容：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Received</span> <span class="hljs-built_in">Find</span> <span class="hljs-variable">Response</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=====================</span> <span class="hljs-variable">INCOMING</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">====================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">Type</span>                  <span class="hljs-operator">:</span> <span class="hljs-built_in">C</span><span class="hljs-operator">-</span><span class="hljs-variable">FIND</span> <span class="hljs-variable">RSP</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">ID</span> <span class="hljs-variable">Being</span> <span class="hljs-variable">Responded</span> <span class="hljs-variable">To</span> <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Class</span> <span class="hljs-variable">UID</span>        <span class="hljs-operator">:</span> <span class="hljs-variable">FINDStudyRootQueryRetrieveInformationModel</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Data</span> <span class="hljs-built_in">Set</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">present</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">Status</span>                  <span class="hljs-operator">:</span> <span class="hljs-number">0</span><span class="hljs-variable">xff00</span><span class="hljs-operator">:</span> <span class="hljs-variable">Pending</span><span class="hljs-operator">:</span> <span class="hljs-variable">Matches</span> <span class="hljs-variable">are</span> <span class="hljs-variable">continuing</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=======================</span> <span class="hljs-variable">END</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">=======================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Response</span> <span class="hljs-variable">Identifiers</span><span class="hljs-operator">:</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-type">#</span> <span class="hljs-variable">Dicom</span><span class="hljs-operator">-</span><span class="hljs-variable">Data</span><span class="hljs-operator">-</span><span class="hljs-built_in">Set</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-type">#</span> <span class="hljs-variable">Used</span> <span class="hljs-variable">TransferSyntax</span><span class="hljs-operator">:</span> <span class="hljs-variable">Little</span> <span class="hljs-variable">Endian</span> <span class="hljs-variable">Implicit</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-punctuation">(</span><span class="hljs-number">0008</span><span class="hljs-operator">,</span><span class="hljs-number">0052</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">CS</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">STUDY</span> <span class="hljs-punctuation">]</span>                                 <span class="hljs-type">#</span>   <span class="hljs-number">6</span><span class="hljs-operator">,</span> <span class="hljs-number">1</span> <span class="hljs-variable">QueryRetrieveLevel</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-punctuation">(</span><span class="hljs-number">0010</span><span class="hljs-operator">,</span><span class="hljs-number">0020</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">LO</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">Case1</span> <span class="hljs-punctuation">]</span>                                 <span class="hljs-type">#</span>   <span class="hljs-number">6</span><span class="hljs-operator">,</span> <span class="hljs-number">1</span> <span class="hljs-variable">PatientID</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DcmDataset</span><span class="hljs-string">::read</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">TransferSyntax</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Received</span> <span class="hljs-variable">Final</span> <span class="hljs-built_in">Find</span> <span class="hljs-variable">Response</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=====================</span> <span class="hljs-variable">INCOMING</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">====================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">Type</span>                  <span class="hljs-operator">:</span> <span class="hljs-built_in">C</span><span class="hljs-operator">-</span><span class="hljs-variable">FIND</span> <span class="hljs-variable">RSP</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">ID</span> <span class="hljs-variable">Being</span> <span class="hljs-variable">Responded</span> <span class="hljs-variable">To</span> <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Class</span> <span class="hljs-variable">UID</span>        <span class="hljs-operator">:</span> <span class="hljs-variable">FINDStudyRootQueryRetrieveInformationModel</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Data</span> <span class="hljs-built_in">Set</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">none</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">Status</span>                  <span class="hljs-operator">:</span> <span class="hljs-number">0</span><span class="hljs-variable">x0000</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Success</span><span class="hljs-operator">:</span> <span class="hljs-variable">Matching</span> <span class="hljs-variable">is</span> <span class="hljs-variable">complete</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=======================</span> <span class="hljs-variable">END</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">=======================</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Releasing</span> <span class="hljs-built_in">Association</span><br></code></pre></td></tr></table></figure><h3 id="C-MOVE"><a href="#C-MOVE" class="headerlink" title="C-MOVE"></a>C-MOVE</h3><p>C-MOVE可以理解为在C-FIND查询之后，由C-MOVE的SCP向SCU发起C-STORE请求，最终将图像传输到C-MOVE的SCU上。</p><p>从抓包软件分析可以看出，SCU先是向SCP传输C-MOVE DIMSE， 对方收到之后又会反过来发送连接请求，连接成功后就会发宋C-STORE DIMSE，进行C-STORE传输。</p><img src="image-20211013231631533.png" alt="image-20211013231631533" style="zoom:50%;" /><p>在C-STORE传输完成（PDU方发送C-STORE RSP）后，对方又会发来C-MOVE的响应，在所有子C-STORE操作完成后，会发送一个总的C-STORE响应，双方开始断开连接。</p><img src="image-20211013231904790.png" alt="image-20211013231904790" style="zoom:50%;" /><h4 id="日志分析-1"><a href="#日志分析-1" class="headerlink" title="日志分析"></a>日志分析</h4><p>首先是SCU向SCP请求建立连接：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  ~ movescu -v -d -aem &quot;DCMTK&quot; --port 7777 -k 0008,0052=STUDY -k 0010,0020=&quot;Case1&quot; 59.78.44.209 5678<br>D: DcmDataDictionary: Loading file: /usr/local/Cellar/dcmtk/3.6.6/share/dcmtk/dicom.dic<br>D: $dcmtk: movescu v3.6.6 2021-01-14 $<br>D: <br>D: Request Parameters:<br>D: ====================== BEGIN A-ASSOCIATE-RQ =====================<br>D: Our Implementation Class UID:      1.2.276.0.7230010.3.0.3.6.6<br>D: Our Implementation Version Name:   OFFIS_DCMTK_366<br>D: Their Implementation Class UID:    <br>D: Their Implementation Version Name: <br>D: Application Context Name:    1.2.840.10008.3.1.1.1<br>D: Calling Application Name:    MOVESCU<br>D: Called Application Name:     ANY-SCP<br>D: Responding Application Name: ANY-SCP<br>D: Our Max PDU Receive Size:    16384<br>D: Their Max PDU Receive Size:  0<br>D: Presentation Contexts:<br>D:   Context ID:        1 (Proposed)<br>D:     Abstract Syntax: =FINDPatientRootQueryRetrieveInformationModel<br>D:     Proposed SCP/SCU Role: Default<br>D:     Proposed Transfer Syntax(es):<br>D:       =LittleEndianExplicit<br>D:       =BigEndianExplicit<br>D:       =LittleEndianImplicit<br>D:   Context ID:        3 (Proposed)<br>D:     Abstract Syntax: =MOVEPatientRootQueryRetrieveInformationModel<br>D:     Proposed SCP/SCU Role: Default<br>D:     Proposed Transfer Syntax(es):<br>D:       =LittleEndianExplicit<br>D:       =BigEndianExplicit<br>D:       =LittleEndianImplicit<br>D: Requested Extended Negotiation: none<br>D: Accepted Extended Negotiation:  none<br>D: Requested User Identity Negotiation: none<br>D: User Identity Negotiation Response:  none<br>D: ======================= END A-ASSOCIATE-RQ ======================<br>I: Requesting Association<br>D: setting network send timeout to 60 seconds<br>D: setting network receive timeout to 60 seconds<br>D: Constructing Associate RQ PDU<br>D: PDU Type: Associate Accept, PDU Length: 216 + 6 bytes PDU header<br>D:   02  00  00  00  00  d8  00  01  00  00  41  4e  59  2d  53  43<br>D:   50  20  20  20  20  20  20  20  20  20  4d  4f  56  45  53  43<br>D:   55  20  20  20  20  20  20  20  20  20  00  00  00  00  00  00<br>D:   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00<br>D:   00  00  00  00  00  00  00  00  00  00  10  00  00  15  31  2e<br>D:   32  2e  38  34  30  2e  31  30  30  30  38  2e  33  2e  31  2e<br>D:   31  2e  31  21  00  00  19  01  00  00  00  40  00  00  11  31<br>D:   2e  32  2e  38  34  30  2e  31  30  30  30  38  2e  31  2e  32<br>D:   21  00  00  19  03  00  00  00  40  00  00  11  31  2e  32  2e<br>D:   38  34  30  2e  31  30  30  30  38  2e  31  2e  32  50  00  00<br>D:   3d  51  00  00  04  00  00  80  00  52  00  00  22  31  2e  32<br>D:   2e  38  32  36  2e  30  2e  31  2e  33  36  38  30  30  34  33<br>D:   2e  32  2e  31  33  35  2e  31  30  36  36  2e  31  30  31  55<br>D:   00  00  0b  31  2e  35  2e  30  2f  57  49  4e  33  32<br>D: Parsing an A-ASSOCIATE PDU<br>D: Association Parameters Negotiated:<br>D: ====================== BEGIN A-ASSOCIATE-AC =====================<br>D: Our Implementation Class UID:      1.2.276.0.7230010.3.0.3.6.6<br>D: Our Implementation Version Name:   OFFIS_DCMTK_366<br>D: Their Implementation Class UID:    1.2.826.0.1.3680043.2.135.1066.101<br>D: Their Implementation Version Name: 1.5.0/WIN32<br>D: Application Context Name:    1.2.840.10008.3.1.1.1<br>D: Calling Application Name:    MOVESCU<br>D: Called Application Name:     ANY-SCP<br>D: Responding Application Name: ANY-SCP<br>D: Our Max PDU Receive Size:    16384<br>D: Their Max PDU Receive Size:  32768<br>D: Presentation Contexts:<br>D:   Context ID:        1 (Accepted)<br>D:     Abstract Syntax: =FINDPatientRootQueryRetrieveInformationModel<br>D:     Proposed SCP/SCU Role: Default<br>D:     Accepted SCP/SCU Role: Default<br>D:     Accepted Transfer Syntax: =LittleEndianImplicit<br>D:   Context ID:        3 (Accepted)<br>D:     Abstract Syntax: =MOVEPatientRootQueryRetrieveInformationModel<br>D:     Proposed SCP/SCU Role: Default<br>D:     Accepted SCP/SCU Role: Default<br>D:     Accepted Transfer Syntax: =LittleEndianImplicit<br>D: Requested Extended Negotiation: none<br>D: Accepted Extended Negotiation:  none<br>D: Requested User Identity Negotiation: none<br>D: User Identity Negotiation Response:  none<br>D: ======================= END A-ASSOCIATE-AC ======================<br>I: Association Accepted (Max Send PDV: 32756)<br></code></pre></td></tr></table></figure><p>之后是利用P-DATA PDU发送C-MOVE请求。可以看到C-MOVE消息格式与C-FIND相似。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Sending</span> <span class="hljs-variable">Move</span> <span class="hljs-variable">Request</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=====================</span> <span class="hljs-variable">OUTGOING</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">====================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">Type</span>                  <span class="hljs-operator">:</span> <span class="hljs-built_in">C</span><span class="hljs-operator">-</span><span class="hljs-variable">MOVE</span> <span class="hljs-variable">RQ</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Presentation</span> <span class="hljs-built_in">Context</span> <span class="hljs-variable">ID</span>       <span class="hljs-operator">:</span> <span class="hljs-number">3</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">ID</span>                    <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Class</span> <span class="hljs-variable">UID</span>        <span class="hljs-operator">:</span> <span class="hljs-variable">MOVEPatientRootQueryRetrieveInformationModel</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Data</span> <span class="hljs-built_in">Set</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">present</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Priority</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">medium</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Move</span> <span class="hljs-variable">Destination</span>              <span class="hljs-operator">:</span> <span class="hljs-variable">DCMTK</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=======================</span> <span class="hljs-variable">END</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">=======================</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Request</span> <span class="hljs-variable">Identifiers</span><span class="hljs-operator">:</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-type">#</span> <span class="hljs-variable">Dicom</span><span class="hljs-operator">-</span><span class="hljs-variable">Data</span><span class="hljs-operator">-</span><span class="hljs-built_in">Set</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-type">#</span> <span class="hljs-variable">Used</span> <span class="hljs-variable">TransferSyntax</span><span class="hljs-operator">:</span> <span class="hljs-variable">Little</span> <span class="hljs-variable">Endian</span> <span class="hljs-variable">Explicit</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-punctuation">(</span><span class="hljs-number">0008</span><span class="hljs-operator">,</span><span class="hljs-number">0052</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">CS</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">STUDY</span><span class="hljs-punctuation">]</span>                                  <span class="hljs-type">#</span>   <span class="hljs-number">6</span><span class="hljs-operator">,</span> <span class="hljs-number">1</span> <span class="hljs-variable">QueryRetrieveLevel</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-punctuation">(</span><span class="hljs-number">0010</span><span class="hljs-operator">,</span><span class="hljs-number">0020</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">LO</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">Case1</span><span class="hljs-punctuation">]</span>                                  <span class="hljs-type">#</span>   <span class="hljs-number">6</span><span class="hljs-operator">,</span> <span class="hljs-number">1</span> <span class="hljs-variable">PatientID</span><br></code></pre></td></tr></table></figure><p>在SCP端经过处理C-MOVE请求，向SCU发起连接请求，这个请求中包含一个<code>SecondaryCaptureImageStorage</code> Presentation Context，这与之前讲到的C-MOVE连接请求也一致。可以看到对方发来的被叫应用名称就是之前在<code>-aem</code>参数中指定的名称。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">I</span>: <br><span class="hljs-attribute">D</span>: Association Received: <span class="hljs-number">59</span><br><span class="hljs-attribute">D</span>: setting network send timeout to <span class="hljs-number">60</span> seconds<br><span class="hljs-attribute">D</span>: setting network receive timeout to <span class="hljs-number">60</span> seconds<br><span class="hljs-attribute">D</span>: PDU Type: Associate Request, PDU Length: <span class="hljs-number">216</span> + <span class="hljs-number">6</span> bytes PDU header<br><span class="hljs-attribute">D</span>:   <span class="hljs-number">01</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  d<span class="hljs-number">8</span>  <span class="hljs-number">00</span>  <span class="hljs-number">01</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">44</span>  <span class="hljs-number">43</span>  <span class="hljs-number">4</span>d  <span class="hljs-number">54</span>  <span class="hljs-number">4</span>b  <span class="hljs-number">20</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">43</span>  <span class="hljs-number">4</span>f  <span class="hljs-number">4</span>e  <span class="hljs-number">51</span>  <span class="hljs-number">55</span>  <span class="hljs-number">45</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">53</span>  <span class="hljs-number">54</span>  <span class="hljs-number">53</span>  <span class="hljs-number">52</span>  <span class="hljs-number">56</span>  <span class="hljs-number">31</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">10</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">15</span>  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e<br><span class="hljs-attribute">D</span>:   <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">38</span>  <span class="hljs-number">34</span>  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">38</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">33</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e<br><span class="hljs-attribute">D</span>:   <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">20</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">36</span>  <span class="hljs-number">77</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">30</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">19</span>  <span class="hljs-number">31</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">2</span>e  <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">38</span>  <span class="hljs-number">34</span>  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">38</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">35</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">2</span>e  <span class="hljs-number">34</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">37</span>  <span class="hljs-number">40</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">11</span>  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e<br><span class="hljs-attribute">D</span>:   <span class="hljs-number">38</span>  <span class="hljs-number">34</span>  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">38</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">32</span>  <span class="hljs-number">50</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">3</span>d  <span class="hljs-number">51</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">04</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">80</span>  <span class="hljs-number">00</span>  <span class="hljs-number">52</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">22</span>  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">32</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">2</span>e  <span class="hljs-number">38</span>  <span class="hljs-number">32</span>  <span class="hljs-number">36</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">33</span>  <span class="hljs-number">36</span>  <span class="hljs-number">38</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">34</span>  <span class="hljs-number">33</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">2</span>e  <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">33</span>  <span class="hljs-number">35</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">36</span>  <span class="hljs-number">36</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">31</span>  <span class="hljs-number">55</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">0</span>b  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">35</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>f  <span class="hljs-number">57</span>  <span class="hljs-number">49</span>  <span class="hljs-number">4</span>e  <span class="hljs-number">33</span>  <span class="hljs-number">32</span><br><span class="hljs-attribute">D</span>: Parsing an A-ASSOCIATE PDU<br><span class="hljs-attribute">I</span>: Sub-Association Received<br><span class="hljs-attribute">D</span>: Parameters:<br><span class="hljs-attribute">D</span>: ====================== BEGIN A-ASSOCIATE-RQ =====================<br><span class="hljs-attribute">D</span>: Our Implementation Class UID:      <span class="hljs-number">1.2.276.0</span>.<span class="hljs-number">7230010</span>.<span class="hljs-number">3.0.3.6</span>.<span class="hljs-number">6</span><br><span class="hljs-attribute">D</span>: Our Implementation Version Name:   OFFIS_DCMTK_<span class="hljs-number">366</span><br><span class="hljs-attribute">D</span>: Their Implementation Class UID:    <span class="hljs-number">1.2.826.0</span>.<span class="hljs-number">1</span>.<span class="hljs-number">3680043</span>.<span class="hljs-number">2</span>.<span class="hljs-number">135</span>.<span class="hljs-number">1066</span>.<span class="hljs-number">101</span><br><span class="hljs-attribute">D</span>: Their Implementation Version Name: <span class="hljs-number">1</span>.<span class="hljs-number">5</span>.<span class="hljs-number">0</span>/WIN<span class="hljs-number">32</span><br><span class="hljs-attribute">D</span>: Application Context Name:    <span class="hljs-number">1.2.840.100</span><span class="hljs-number">08.3.1.1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">D</span>: Calling Application Name:    CONQUESTSRV<span class="hljs-number">1</span><br><span class="hljs-attribute">D</span>: Called Application Name:     DCMTK<br><span class="hljs-attribute">D</span>: Responding Application Name: <br><span class="hljs-attribute">D</span>: Our Max PDU Receive Size:    <span class="hljs-number">16384</span><br><span class="hljs-attribute">D</span>: Their Max PDU Receive Size:  <span class="hljs-number">32768</span><br><span class="hljs-attribute">D</span>: Presentation Contexts:<br><span class="hljs-attribute">D</span>:   Context ID:        <span class="hljs-number">119</span> (Proposed)<br><span class="hljs-attribute">D</span>:     Abstract Syntax: =SecondaryCaptureImageStorage<br><span class="hljs-attribute">D</span>:     Proposed SCP/SCU Role: Default<br><span class="hljs-attribute">D</span>:     Proposed Transfer Syntax(es):<br><span class="hljs-attribute">D</span>:       =LittleEndianImplicit<br><span class="hljs-attribute">D</span>: Requested Extended Negotiation: none<br><span class="hljs-attribute">D</span>: Accepted Extended Negotiation:  none<br><span class="hljs-attribute">D</span>: Requested User Identity Negotiation: none<br><span class="hljs-attribute">D</span>: User Identity Negotiation Response:  none<br><span class="hljs-attribute">D</span>: ======================= END A-ASSOCIATE-RQ ======================<br><span class="hljs-attribute">D</span>: Constructing Associate AC PDU<br><span class="hljs-attribute">I</span>: Sub-Association Acknowledged (Max Send PDV: <span class="hljs-number">32756</span>)<br><span class="hljs-attribute">D</span>: ====================== BEGIN A-ASSOCIATE-AC =====================<br><span class="hljs-attribute">D</span>: Our Implementation Class UID:      <span class="hljs-number">1.2.276.0</span>.<span class="hljs-number">7230010</span>.<span class="hljs-number">3.0.3.6</span>.<span class="hljs-number">6</span><br><span class="hljs-attribute">D</span>: Our Implementation Version Name:   OFFIS_DCMTK_<span class="hljs-number">366</span><br><span class="hljs-attribute">D</span>: Their Implementation Class UID:    <span class="hljs-number">1.2.826.0</span>.<span class="hljs-number">1</span>.<span class="hljs-number">3680043</span>.<span class="hljs-number">2</span>.<span class="hljs-number">135</span>.<span class="hljs-number">1066</span>.<span class="hljs-number">101</span><br><span class="hljs-attribute">D</span>: Their Implementation Version Name: <span class="hljs-number">1</span>.<span class="hljs-number">5</span>.<span class="hljs-number">0</span>/WIN<span class="hljs-number">32</span><br><span class="hljs-attribute">D</span>: Application Context Name:    <span class="hljs-number">1.2.840.100</span><span class="hljs-number">08.3.1.1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">D</span>: Calling Application Name:    CONQUESTSRV<span class="hljs-number">1</span><br><span class="hljs-attribute">D</span>: Called Application Name:     DCMTK<br><span class="hljs-attribute">D</span>: Responding Application Name: <br><span class="hljs-attribute">D</span>: Our Max PDU Receive Size:    <span class="hljs-number">16384</span><br><span class="hljs-attribute">D</span>: Their Max PDU Receive Size:  <span class="hljs-number">32768</span><br><span class="hljs-attribute">D</span>: Presentation Contexts:<br><span class="hljs-attribute">D</span>:   Context ID:        <span class="hljs-number">119</span> (Accepted)<br><span class="hljs-attribute">D</span>:     Abstract Syntax: =SecondaryCaptureImageStorage<br><span class="hljs-attribute">D</span>:     Proposed SCP/SCU Role: Default<br><span class="hljs-attribute">D</span>:     Accepted SCP/SCU Role: Default<br><span class="hljs-attribute">D</span>:     Accepted Transfer Syntax: =LittleEndianImplicit<br><span class="hljs-attribute">D</span>: Requested Extended Negotiation: none<br><span class="hljs-attribute">D</span>: Accepted Extended Negotiation:  none<br><span class="hljs-attribute">D</span>: Requested User Identity Negotiation: none<br><span class="hljs-attribute">D</span>: User Identity Negotiation Response:  none<br><span class="hljs-attribute">D</span>: ======================= END A-ASSOCIATE-AC ======================<br><span class="hljs-attribute">D</span>: DcmDataset::read() TransferSyntax=<span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br></code></pre></td></tr></table></figure><p>建立反向连接后，就可以接受对方的C-STORE请求，开始传输。</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">I:</span> Received Store Request<br><span class="hljs-symbol">D:</span> ===================== INCOMING DIMSE MESSAGE ====================<br><span class="hljs-symbol">D:</span> Message Type                  : C-STORE RQ<br><span class="hljs-symbol">D:</span> Presentation Context ID       : <span class="hljs-number">119</span><br><span class="hljs-symbol">D:</span> Message ID                    : <span class="hljs-number">3203</span><br><span class="hljs-symbol">D:</span> Affected SOP <span class="hljs-keyword">Class</span> UID        : SecondaryCaptureImageStorage<br><span class="hljs-symbol">D:</span> Affected SOP Instance UID     : <span class="hljs-number">1.3</span>.<span class="hljs-number">6.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">5962.99</span>.<span class="hljs-number">1.2280943358</span>.<span class="hljs-number">716200484.1363785608958</span>.<span class="hljs-number">60.0</span><br><span class="hljs-symbol">D:</span> Data <span class="hljs-keyword">Set</span>                      : present<br><span class="hljs-symbol">D:</span> Priority                      : medium<br><span class="hljs-symbol">D:</span> Move Originator AE Title      : MOVESCU<br><span class="hljs-symbol">D:</span> Move Originator ID            : <span class="hljs-number">1</span><br><span class="hljs-symbol">D:</span> ======================= <span class="hljs-keyword">END</span> DIMSE MESSAGE =======================<br><span class="hljs-symbol">D:</span> DcmDataset::read() TransferSyntax=<span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br><span class="hljs-symbol">D:</span> DcmItem::checkAndUpdateVR() setting undefined VR <span class="hljs-keyword">of</span> PixelPaddingValue (<span class="hljs-number">0028</span>,<span class="hljs-number">0120</span>) <span class="hljs-keyword">to</span> <span class="hljs-comment">&#x27;US&#x27; because PixelRepresentation (0028,0103) has a value that is different from 1</span><br><span class="hljs-symbol">D:</span> DcmItem::checkAndUpdateVR() setting undefined VR <span class="hljs-keyword">of</span> PixelPaddingRangeLimit (<span class="hljs-number">0028</span>,<span class="hljs-number">0121</span>) <span class="hljs-keyword">to</span> <span class="hljs-comment">&#x27;US&#x27; because PixelRepresentation (0028,0103) has a value that is different from 1</span><br><span class="hljs-symbol">W:</span> DICOM file already exists, overwriting: SC.<span class="hljs-number">1.3</span>.<span class="hljs-number">6.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">5962.99</span>.<span class="hljs-number">1.2280943358</span>.<span class="hljs-number">716200484.1363785608958</span>.<span class="hljs-number">60.0</span><br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() Version <span class="hljs-keyword">of</span> MetaHeader <span class="hljs-built_in">is</span> ok: <span class="hljs-number">0</span>x0001<br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() use SOPClassUID [<span class="hljs-number">1.2</span>.<span class="hljs-number">840.10008</span>.<span class="hljs-number">5.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">1.7</span>] <span class="hljs-keyword">from</span> Dataset<br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() use SOPInstanceUID [<span class="hljs-number">1.3</span>.<span class="hljs-number">6.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">5962.99</span>.<span class="hljs-number">1.2280943358</span>.<span class="hljs-number">716200484.1363785608958</span>.<span class="hljs-number">60.0</span>] <span class="hljs-keyword">from</span> Dataset<br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() use <span class="hljs-built_in">new</span> TransferSyntaxUID [Little Endian Implicit] <span class="hljs-keyword">on</span> writing following Dataset<br><span class="hljs-symbol">D:</span> DcmFileFormat::validateMetaInfo() found <span class="hljs-number">7</span> Elements <span class="hljs-keyword">in</span> DcmMetaInfo <span class="hljs-comment">&#x27;metinf&#x27;</span><br><span class="hljs-symbol">D:</span> DcmDataset::read() TransferSyntax=<span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br></code></pre></td></tr></table></figure><p>在一个C-STORE传输完成后，就会收到一个C-MOVE响应，但由于还有其他传输在进行，所以<code>DIMSE Status</code>为Pending。然后就是下一个C-STORE请求和对应的传输过程与响应。</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">I:</span> Received Move Response <span class="hljs-number">1</span><br><span class="hljs-symbol">D:</span> ===================== INCOMING DIMSE MESSAGE ====================<br><span class="hljs-symbol">D:</span> Message Type                  : C-MOVE RSP<br><span class="hljs-symbol">D:</span> Message ID Being Responded <span class="hljs-keyword">To</span> : <span class="hljs-number">1</span><br><span class="hljs-symbol">D:</span> Affected SOP <span class="hljs-keyword">Class</span> UID        : MOVEPatientRootQueryRetrieveInformationModel<br><span class="hljs-symbol">D:</span> Remaining Suboperations       : <span class="hljs-number">1</span><br><span class="hljs-symbol">D:</span> Completed Suboperations       : <span class="hljs-number">1</span><br><span class="hljs-symbol">D:</span> Failed Suboperations          : <span class="hljs-number">0</span><br><span class="hljs-symbol">D:</span> Warning Suboperations         : <span class="hljs-number">0</span><br><span class="hljs-symbol">D:</span> Data <span class="hljs-keyword">Set</span>                      : none<br><span class="hljs-symbol">D:</span> DIMSE Status                  : <span class="hljs-number">0</span>xff00: Pending: <span class="hljs-keyword">Sub</span>-operations are continuing<br><span class="hljs-symbol">D:</span> ======================= <span class="hljs-keyword">END</span> DIMSE MESSAGE =======================<br><span class="hljs-symbol">D:</span> DcmDataset::read() TransferSyntax=<span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br><span class="hljs-symbol">I:</span> Received Store Request<br><span class="hljs-symbol">D:</span> ===================== INCOMING DIMSE MESSAGE ====================<br><span class="hljs-symbol">D:</span> Message Type                  : C-STORE RQ<br><span class="hljs-symbol">D:</span> Presentation Context ID       : <span class="hljs-number">119</span><br><span class="hljs-symbol">D:</span> Message ID                    : <span class="hljs-number">3225</span><br><span class="hljs-symbol">D:</span> Affected SOP <span class="hljs-keyword">Class</span> UID        : SecondaryCaptureImageStorage<br><span class="hljs-symbol">D:</span> Affected SOP Instance UID     : <span class="hljs-number">1.3</span>.<span class="hljs-number">6.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">5962.99</span>.<span class="hljs-number">1.2280943358</span>.<span class="hljs-number">716200484.1363785608958</span>.<span class="hljs-number">67.0</span><br><span class="hljs-symbol">D:</span> Data <span class="hljs-keyword">Set</span>                      : present<br><span class="hljs-symbol">D:</span> Priority                      : medium<br><span class="hljs-symbol">D:</span> Move Originator AE Title      : MOVESCU<br><span class="hljs-symbol">D:</span> Move Originator ID            : <span class="hljs-number">1</span><br><span class="hljs-symbol">D:</span> ======================= <span class="hljs-keyword">END</span> DIMSE MESSAGE =======================<br><span class="hljs-symbol">D:</span> DcmDataset::read() TransferSyntax=<span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br><span class="hljs-symbol">D:</span> DcmItem::checkAndUpdateVR() setting undefined VR <span class="hljs-keyword">of</span> PixelPaddingValue (<span class="hljs-number">0028</span>,<span class="hljs-number">0120</span>) <span class="hljs-keyword">to</span> <span class="hljs-comment">&#x27;US&#x27; because PixelRepresentation (0028,0103) has a value that is different from 1</span><br><span class="hljs-symbol">D:</span> DcmItem::checkAndUpdateVR() setting undefined VR <span class="hljs-keyword">of</span> PixelPaddingRangeLimit (<span class="hljs-number">0028</span>,<span class="hljs-number">0121</span>) <span class="hljs-keyword">to</span> <span class="hljs-comment">&#x27;US&#x27; because PixelRepresentation (0028,0103) has a value that is different from 1</span><br><span class="hljs-symbol">W:</span> DICOM file already exists, overwriting: SC.<span class="hljs-number">1.3</span>.<span class="hljs-number">6.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">5962.99</span>.<span class="hljs-number">1.2280943358</span>.<span class="hljs-number">716200484.1363785608958</span>.<span class="hljs-number">67.0</span><br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() Version <span class="hljs-keyword">of</span> MetaHeader <span class="hljs-built_in">is</span> ok: <span class="hljs-number">0</span>x0001<br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() use SOPClassUID [<span class="hljs-number">1.2</span>.<span class="hljs-number">840.10008</span>.<span class="hljs-number">5.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">1.7</span>] <span class="hljs-keyword">from</span> Dataset<br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() use SOPInstanceUID [<span class="hljs-number">1.3</span>.<span class="hljs-number">6.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">5962.99</span>.<span class="hljs-number">1.2280943358</span>.<span class="hljs-number">716200484.1363785608958</span>.<span class="hljs-number">67.0</span>] <span class="hljs-keyword">from</span> Dataset<br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() use <span class="hljs-built_in">new</span> TransferSyntaxUID [Little Endian Implicit] <span class="hljs-keyword">on</span> writing following Dataset<br><span class="hljs-symbol">D:</span> DcmFileFormat::validateMetaInfo() found <span class="hljs-number">7</span> Elements <span class="hljs-keyword">in</span> DcmMetaInfo <span class="hljs-comment">&#x27;metinf&#x27;</span><br><span class="hljs-symbol">D:</span> DcmDataset::read() TransferSyntax=<span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br><span class="hljs-symbol">I:</span> Received Move Response <span class="hljs-number">2</span><br><span class="hljs-symbol">D:</span> ===================== INCOMING DIMSE MESSAGE ====================<br><span class="hljs-symbol">D:</span> Message Type                  : C-MOVE RSP<br><span class="hljs-symbol">D:</span> Message ID Being Responded <span class="hljs-keyword">To</span> : <span class="hljs-number">1</span><br><span class="hljs-symbol">D:</span> Affected SOP <span class="hljs-keyword">Class</span> UID        : MOVEPatientRootQueryRetrieveInformationModel<br><span class="hljs-symbol">D:</span> Remaining Suboperations       : <span class="hljs-number">0</span><br><span class="hljs-symbol">D:</span> Completed Suboperations       : <span class="hljs-number">2</span><br><span class="hljs-symbol">D:</span> Failed Suboperations          : <span class="hljs-number">0</span><br><span class="hljs-symbol">D:</span> Warning Suboperations         : <span class="hljs-number">0</span><br><span class="hljs-symbol">D:</span> Data <span class="hljs-keyword">Set</span>                      : none<br><span class="hljs-symbol">D:</span> DIMSE Status                  : <span class="hljs-number">0</span>xff00: Pending: <span class="hljs-keyword">Sub</span>-operations are continuing<br><span class="hljs-symbol">D:</span> ======================= <span class="hljs-keyword">END</span> DIMSE MESSAGE =======================<br><span class="hljs-symbol">D:</span> DcmDataset::read() TransferSyntax=<span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br></code></pre></td></tr></table></figure><p>在所有C-STORE请求完成后，服务端会发来一个表示成功的C-STORE响应：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Received</span> <span class="hljs-variable">Final</span> <span class="hljs-variable">Move</span> <span class="hljs-variable">Response</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=====================</span> <span class="hljs-variable">INCOMING</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">====================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">Type</span>                  <span class="hljs-operator">:</span> <span class="hljs-built_in">C</span><span class="hljs-operator">-</span><span class="hljs-variable">MOVE</span> <span class="hljs-variable">RSP</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">ID</span> <span class="hljs-variable">Being</span> <span class="hljs-variable">Responded</span> <span class="hljs-variable">To</span> <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Class</span> <span class="hljs-variable">UID</span>        <span class="hljs-operator">:</span> <span class="hljs-variable">MOVEPatientRootQueryRetrieveInformationModel</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Remaining</span> <span class="hljs-variable">Suboperations</span>       <span class="hljs-operator">:</span> <span class="hljs-number">0</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Completed</span> <span class="hljs-variable">Suboperations</span>       <span class="hljs-operator">:</span> <span class="hljs-number">2</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Failed</span> <span class="hljs-variable">Suboperations</span>          <span class="hljs-operator">:</span> <span class="hljs-number">0</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Warning</span> <span class="hljs-variable">Suboperations</span>         <span class="hljs-operator">:</span> <span class="hljs-number">0</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Data</span> <span class="hljs-built_in">Set</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">none</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">Status</span>                  <span class="hljs-operator">:</span> <span class="hljs-number">0</span><span class="hljs-variable">x0000</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Success</span><span class="hljs-operator">:</span> <span class="hljs-variable">Sub</span><span class="hljs-operator">-</span><span class="hljs-variable">operations</span> <span class="hljs-variable">complete</span> <span class="hljs-operator">-</span> <span class="hljs-variable">No</span> <span class="hljs-variable">failures</span> <span class="hljs-variable">or</span> <span class="hljs-variable">warnings</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=======================</span> <span class="hljs-variable">END</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">=======================</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Releasing</span> <span class="hljs-built_in">Association</span><br></code></pre></td></tr></table></figure><p>至此C-MOVE传输完成。</p><p>图像文件传输为PDV=4096Bytes的TCP传输：</p><img src="image-20211013195720471.png" alt="image-20211013195720471" style="zoom:50%;" /><p> 下载到本地的文件可以打开进行查看和处理，比如使用DCMTK中的工具包或者其他第三方软件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  ~ getscu -k 08,52=STUDY -k StudyInstanceUID=1.3.6.1.4.1.5962.99.1.2280943358.716200484.1363785608958.61.0  192.168.31.156 5678  <br>➜  ~ ls -lt<br>total 148576<br>-rw-r--r--    1 zzy   staff  31354908 10  8 22:46 SC.1.3.6.1.4.1.5962.99.1.2280943358.716200484.1363785608958.67.0<br>-rw-r--r--    1 zzy   staff   4367746 10  8 22:45 SC.1.3.6.1.4.1.5962.99.1.2280943358.716200484.1363785608958.60.0<br></code></pre></td></tr></table></figure><h3 id="C-GET"><a href="#C-GET" class="headerlink" title="C-GET"></a>C-GET</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  ~ sudo getscu -v -k 08,52=STUDY -k StudyInstanceUID=1.3.6.1.4.1.5962.99.1.2280943358.716200484.1363785608958.61.0  192.168.31.156 5678  <br>I: Requesting Association<br>I: Association Accepted (Max Send PDV: 32756)<br>I: Sending C-GET Request (MsgID 1)<br>I: Received C-STORE Request (MsgID 4261)<br>I: Sending C-STORE Response (Success)<br>I: Received C-GET Response (Pending)<br>I: Received C-STORE Request (MsgID 4281)<br>I: Sending C-STORE Response (Success)<br>I: Received C-GET Response (Pending)<br>I: Received C-GET Response (Success)<br>I: Final status report from last C-GET message:<br>I:   Number of Remaining Suboperations : 0<br>I:   Number of Completed Suboperations : 2<br>I:   Number of Failed Suboperations    : 0<br>I:   Number of Warning Suboperations   : 0<br>I: Releasing Association<br></code></pre></td></tr></table></figure><p>C-GET的过程相比C-MOVE要更简单，它在建立连接时会像C-STORE一样将所有的Presentation Context发送。</p><img src="image-20211013234755122.png" alt="image-20211013234755122" style="zoom:50%;" /><p>下面是C-GET的消息内容，与C-FIND结构相似：</p><img src="image-20211013195701896.png" alt="image-20211013195701896" style="zoom:50%;" /><p>在发送完C-GET消息后，对方会发来C-STORE消息，开始传输。</p><h3 id="三．结果与讨论"><a href="#三．结果与讨论" class="headerlink" title="三．结果与讨论"></a>三．结果与讨论</h3><p>在本项目中，我主要是以DICOM标准为依据，通过选用实现了DICOM标准的开源DCMTK工具包作为Modality和View Station，CONQUEST作为Server，完成了满足DICOM标准11种协议的mini-PACS系统。在过程中，通过对DICOM标准的阅读和抓包软件的分析，了解了DICOM图像传输协议的结构，了解了其TCP -&gt; ULP -&gt; PDU -&gt; DATA的设计。基于以上理解可以非常清晰地理解传输的详细过程，即通过Associate PDU和Release PDU控制连接，通过P-DATA传输数据，数据中包含依照DICOM3.0的格式严格定义的消息，这样在实现了相关接口的客户端和服务器之间就能实现DICOM规定的传输功能。</p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><ol><li>pydicom文档：<a href="https://pydicom.github.io/pynetdicom/stable/user/presentation.html">https://pydicom.github.io/pynetdicom/stable/user/presentation.html</a></li><li>DICOM标准3.0：<a href="http://dicom.nema.org/medical/dicom/current/output/chtml/">http://dicom.nema.org/medical/dicom/current/output/chtml/</a></li><li>DICOM通信流程：<a href="https://www.jianshu.com/p/6f178fc98a04">https://www.jianshu.com/p/6f178fc98a04</a></li><li>DCMTK文档：<a href="https://support.dcmtk.org/docs">https://support.dcmtk.org/docs</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>DICOM</tag>
      
      <tag>Biomedical Engineering</tag>
      
      <tag>Biomedical Imaging</tag>
      
      <tag>Network</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown文章自动翻译</title>
    <link href="/StaticBlog/2021/10/09/hexo-i18n-by-article-translator/"/>
    <url>/StaticBlog/2021/10/09/hexo-i18n-by-article-translator/</url>
    
    <content type="html"><![CDATA[<p>在构建个人博客时，我们经常有国际化的需求。技术上，各种博客框架都有完善的i18n解决方案，所以对博主而言最大的挑战在于内容翻译。在人工智能驱动下，机器翻译已经相当完善，满足其他语言读者阅读需求显然是没问题的，所以一个很现实的解决方案就是为自己的博客开发一个调用机器翻译API的自动翻译工具。</p><p>这个项目的地址：<a href="https://github.com/RandomNamer/MarkdownTranslator">https://github.com/RandomNamer/MarkdownTranslator</a></p><img src="image-20211012150904830.png" alt="image-20211012150904830" style="zoom:50%;" /><h1 id="开发过程"><a href="#开发过程" class="headerlink" title="开发过程"></a>开发过程</h1><p>为了保证翻译的准确性和可靠性，我这里选择了Google Translate API。当然，由于中国大陆特殊的网络环境，使用Google Translate的过程中还是出了不少麻烦的，虽然刚开始开发的我并不知道。</p><h2 id="试验Google-Translate会抹掉的Markdown格式"><a href="#试验Google-Translate会抹掉的Markdown格式" class="headerlink" title="试验Google Translate会抹掉的Markdown格式"></a>试验Google Translate会抹掉的Markdown格式</h2><p>这里我只试验了一些常用的markdown格式翻译，对其他特殊格式的支持会持续开发。</p><ul><li>列表项目：会把“-”和文字之间的空格去掉</li><li>代码块：会将代码块的”`”移除</li><li>行内代码：不会改动，但可能内容被更改</li><li>标题：‘#’与文字之间的空格会被去掉</li><li>数字列表项目: 不会破坏格式</li><li>斜体和粗体：不会被破坏</li><li>链接：不会被破坏</li></ul><h2 id="Google-Translate-API的获取"><a href="#Google-Translate-API的获取" class="headerlink" title="Google Translate API的获取"></a>Google Translate API的获取</h2><p>Google Translate是Google Cloud中的付费服务，虽然Google Translate在注册时自带300美元试用额度，足够个人翻译用途，但注册Google Cloud账号需要提供个人信息和国际信用卡，不够方便。这里给出一个Google翻译的客户端使用的API：<code>https://translate.google.cn/translate_a/single</code>，重要的query params主要有：</p><ul><li>sl: Source Language</li><li>tl: Destination Language</li><li>q: 要翻译的文字</li><li>tk: 翻译的Token，由原文字计算得出。<br>这里给出Token计算的一种实现：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">token</span>(<span class="hljs-params">a</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> k = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">var</span> b = <span class="hljs-number">406644</span>;<br>    <span class="hljs-keyword">var</span> b1 = <span class="hljs-number">3293161072</span>;<br> <br>    <span class="hljs-keyword">var</span> jd = <span class="hljs-string">&quot;.&quot;</span>;<br>    <span class="hljs-keyword">var</span> sb = <span class="hljs-string">&quot;+-a^+6&quot;</span>;<br>    <span class="hljs-keyword">var</span> Zb = <span class="hljs-string">&quot;+-3^+b+-f&quot;</span>;<br> <br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = [], f = <span class="hljs-number">0</span>, g = <span class="hljs-number">0</span>; g &lt; a.length; g++) &#123;<br>        <span class="hljs-keyword">var</span> m = a.charCodeAt(g);<br>        <span class="hljs-number">128</span> &gt; m ? e[f++] = m: (<span class="hljs-number">2048</span> &gt; m ? e[f++] = m &gt;&gt; <span class="hljs-number">6</span> | <span class="hljs-number">192</span> : (<span class="hljs-number">55296</span> == (m &amp; <span class="hljs-number">64512</span>) &amp;&amp; g + <span class="hljs-number">1</span> &lt; a.length &amp;&amp; <span class="hljs-number">56320</span> == (a.charCodeAt(g + <span class="hljs-number">1</span>) &amp; <span class="hljs-number">64512</span>) ? (m = <span class="hljs-number">65536</span> + ((m &amp; <span class="hljs-number">1023</span>) &lt;&lt; <span class="hljs-number">10</span>) + (a.charCodeAt(++g) &amp; <span class="hljs-number">1023</span>), e[f++] = m &gt;&gt; <span class="hljs-number">18</span> | <span class="hljs-number">240</span>, e[f++] = m &gt;&gt; <span class="hljs-number">12</span> &amp; <span class="hljs-number">63</span> | <span class="hljs-number">128</span>) : e[f++] = m &gt;&gt; <span class="hljs-number">12</span> | <span class="hljs-number">224</span>, e[f++] = m &gt;&gt; <span class="hljs-number">6</span> &amp; <span class="hljs-number">63</span> | <span class="hljs-number">128</span>), e[f++] = m &amp; <span class="hljs-number">63</span> | <span class="hljs-number">128</span>)<br>    &#125;<br>    a = b;<br>    <span class="hljs-keyword">for</span> (f = <span class="hljs-number">0</span>; f &lt; e.length; f++) a += e[f],<br>        a = RL(a, sb);<br>    a = RL(a, Zb);<br>    a ^= b1 || <span class="hljs-number">0</span>;<br>    <span class="hljs-number">0</span> &gt; a &amp;&amp; (a = (a &amp; <span class="hljs-number">2147483647</span>) + <span class="hljs-number">2147483648</span>);<br>    a %= <span class="hljs-number">1E6</span>;<br>    <span class="hljs-keyword">return</span> a.toString() + jd + (a ^ b)<br>&#125;;<br> <br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">RL</span>(<span class="hljs-params">a, b</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> t = <span class="hljs-string">&quot;a&quot;</span>;<br>    <span class="hljs-keyword">var</span> Yb = <span class="hljs-string">&quot;+&quot;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = <span class="hljs-number">0</span>; c &lt; b.length - <span class="hljs-number">2</span>; c += <span class="hljs-number">3</span>) &#123;<br>        <span class="hljs-keyword">var</span> d = b.charAt(c + <span class="hljs-number">2</span>),<br>            d = d &gt;= t ? d.charCodeAt(<span class="hljs-number">0</span>) - <span class="hljs-number">87</span> : <span class="hljs-built_in">Number</span>(d),<br>            d = b.charAt(c + <span class="hljs-number">1</span>) == Yb ? a &gt;&gt;&gt; d: a &lt;&lt; d;<br>        a = b.charAt(c) == Yb ? a + d &amp; <span class="hljs-number">4294967295</span> : a ^ d<br>    &#125;<br>    <span class="hljs-keyword">return</span> a<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="通过代理访问"><a href="#通过代理访问" class="headerlink" title="通过代理访问"></a>通过代理访问</h3><p><strong>注意！</strong>Node默认是不会走系统代理的，这会导致即使本机已经可以通过代理访问墙外网站，从Node发出的网络请求也还是会被阻挡在墙内。这时我们需要为Node配置代理后方可正常使用Google Translate API。但是对于很多人喜欢使用的网络请求库Axios而言，单纯使用内置的代理可能会对Google Translate这样的https站点不生效。解决方案基本有：</p><ul><li>使用ProxyAgent，如<a href="https://www.npmjs.com/package/tunnel">tunnel</a>, 而不是Axios的<code>proxy</code>。</li><li>使用修改版Axios，<code>axios-https-proxy-fix</code></li><li>使用<code>request</code></li></ul><p>一个现成的Google Translate API封装是<code>translate-google-api</code>， 可以直接通过<code>npm install translate-google-api</code>进行安装。我们可以看到其中的代码，基本上就是用axios使用刚才的API发起请求，但由于axios在https代理上存在的bug，这个模块在中国大陆基本不可用。</p><h3 id="访问限制"><a href="#访问限制" class="headerlink" title="访问限制"></a>访问限制</h3><p>这个API是为谷歌翻译的客户端提供的，因此自带反爬虫设置。一般而言，使用一个IP可以完整翻译一篇文章，但下一篇就需要切换下一个代理地址了，否则会返回错误429。</p><h3 id="集成到自己的博客"><a href="#集成到自己的博客" class="headerlink" title="集成到自己的博客"></a>集成到自己的博客</h3><p>最简单的做法就是复制一份英文站点，使用shell脚本构建和发布博客，如<code>cd en &amp;&amp; hexo g &amp;&amp; cd .. &amp;&amp; hexo clean &amp;&amp; hexo g  &amp;&amp; cp -R en/public public/en &amp;&amp; hexo d</code>， 即可同时构建两个站点并部署。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>JS</tag>
      
      <tag>i18n</tag>
      
      <tag>Node</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用Hexo和Github Pages搭建静态博客</title>
    <link href="/StaticBlog/2021/09/30/blog-with-hexo-and-gh-pages/"/>
    <url>/StaticBlog/2021/09/30/blog-with-hexo-and-gh-pages/</url>
    
    <content type="html"><![CDATA[<h1 id="用Hexo和Github-Pages搭建静态博客"><a href="#用Hexo和Github-Pages搭建静态博客" class="headerlink" title="用Hexo和Github Pages搭建静态博客"></a>用Hexo和Github Pages搭建静态博客</h1><p>个人博客曾经具有很高的门槛，因此在世纪之初时国内涌现了一大批在线博客平台。曾经搭建一个个人博客需要自己编写后端和前端，搞定域名解析服务，并付出不小数目的资金来维持它以合理的速度运行。在2021年，如果只是想体验属于自己的博客，则完全不需要这么做。对于纯静态展示用途（事实上这也是博客最基本、最重要的用途）而言，只需要一个（好看的）静态网页和一个托管平台即可。Github Pages就是这样一个托管平台，它依托于Github的Repository，使用简便，且完全不收费。我们可以直接编写静态前端，用Git推送到远端，就可以自动完成部署。Hexo就是这样一个静态博客生成工具，用它可以更简便地创建静态博客。两者结合就可以在数分钟内完成自己第一个博客的搭建。</p><h2 id="设置GitHub-Pages"><a href="#设置GitHub-Pages" class="headerlink" title="设置GitHub Pages"></a>设置GitHub Pages</h2><p>在GitHub中新建一个Repository，然后在设置中开启Github Pages托管。</p><img src="image-20210923153307744.png"  style="zoom:50%;" /><p>使用Theme-Chooser，可以生成一个缺省的页面，内容由一个Markdown文档填充。这个markdown文档也是支持嵌入HTML链接的。</p><img src="image-20210923153437095.png"  style="zoom:50%;" /><p>在简单调整之后，我们可以看到一个可以正常显示的静态网页，说明GitHub Pages已经创建成功。</p><img src="image-20210923153532574.png"  style="zoom:50%;" /><h2 id="使用Hexo生成静态博客"><a href="#使用Hexo生成静态博客" class="headerlink" title="使用Hexo生成静态博客"></a>使用Hexo生成静态博客</h2><p>Hexo是一个在Node.js上运行的工具，为了使用它，首先要确保已经安装Node.</p><img src="image-20210923153738209.png" style="zoom:50%;" /><p><code>npm</code>是Node的包管理工具，我们可以用它安装Hexo。（在macOS上，如果是第一次安装Node，npm可能缺乏文件写权限，可以使用<code>sudo chown -R $USER /usr/local/lib/node_modules</code> 为其添加权限解决。）</p><p>一切顺利的话，我们就可以使用<code>npm install -g hexo-cli</code>安装Hexo了。</p><p>安装完成后，我们就有了hexo的命令行工具，通过<code>hexo init</code>可以初始化一个博客模版：</p><img src="image-20210923160421280.png"  style="zoom:50%;" /><p>要将其编译为可用的html网页，执行<code>hexo generate </code>即可。要在浏览器预览，可以使用<code>hexo server</code>, 在本地开启一个服务器进行预览。</p><img src="image-20210923161332399.png"  style="zoom:50%;" /><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>一个简单的想法是，每次都在本地手动构建博客，然后推送到GitHub完成更新。但是我们需要将构建后的网页送往Github Pages所用的分支，而源码留在另一个分支。</p><p>这里有两种推荐的操作。</p><ul><li>得益于GitHub可以集成的CI功能，我们不必每次都手动构建，而是<strong>让CI系统帮助我们构建并发布到GitHub Pages绑定的分支</strong>。按照官网的教程：<a href="https://hexo.io/zh-cn/docs/github-pages%EF%BC%8C%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E9%85%8D%E7%BD%AE%E4%B8%80%E4%B8%AA%E7%9B%B8%E5%85%B3%E7%9A%84Travis">https://hexo.io/zh-cn/docs/github-pages，我们需要配置一个相关的Travis</a> CI服务。注意，Travis CI只对开源Repo有效。</li><li>所以如果想使用私有Repo托管的话，就只能使用<code>hexo-deployer-cli</code>进行部署。Hexo Deployer只需要在<code>_config.yml</code>里进行<a href="https://hexo.io/docs/one-command-deployment#Git">简单配置</a>后，每次只需要用<code>hexo clean &amp;&amp; hexo deploy</code> 即可完成部署。</li></ul><h2 id="工作流"><a href="#工作流" class="headerlink" title="工作流"></a>工作流</h2><p>这里简单介绍下如何配置Deployer和在本地撰写并发布的工作流程</p><h3 id="Deployer配置和使用"><a href="#Deployer配置和使用" class="headerlink" title="Deployer配置和使用"></a>Deployer配置和使用</h3><p>要使用Deployer，只需要在<code>_config.yml</code>中配置四个项目即可，下面是一个示例配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/RandomNamer/StaticBlogTest.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">Update</span> <span class="hljs-string">pages</span> <span class="hljs-string">with</span> <span class="hljs-string">local</span> <span class="hljs-string">changes</span> <span class="hljs-string">on</span> &#123;&#123; <span class="hljs-string">now(&#x27;YYYY-MM-DD&#x27;)</span>&#125;&#125;<br></code></pre></td></tr></table></figure><p>只需要填入正确的repo地址，Github Pages分支和commit message即可。</p><p>deployer的操作就是先进行一次生成，再将生成的文件提交到指定的分支，commit message就是之前配置的<code>message</code>。</p><p>在部署时，只需要执行<code>hexo clean &amp;&amp; hexo d</code>即可将本地的网站与远端同步</p><h3 id="正确加载资源"><a href="#正确加载资源" class="headerlink" title="正确加载资源"></a>正确加载资源</h3><p>要让网站能正确地工作，还需要最后一步，那就是在<code>_config.yml</code>中配置网站的URL。这个URL决定了生成页面中所有链接的具体指向和加载CSS、JS和其他资源文件的路径。如果加载不当，恐怕就会是这样：</p><img src="image-20210930125831154.png"  style="zoom:50%;" /><p>正确配置之后，再执行一次（生成和）部署，正确的网页就可以在GitHub Pages上查看了：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># URL</span><br><span class="hljs-comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">https://randomnamer.github.io/</span><br><span class="hljs-attr">root:</span> <span class="hljs-string">/StaticBlogTest/</span><br><span class="hljs-attr">permalink:</span> <span class="hljs-string">:year/:month/:day/:title/</span><br><span class="hljs-attr">permalink_defaults:</span><br><span class="hljs-attr">pretty_urls:</span><br>  <span class="hljs-attr">trailing_index:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br>  <span class="hljs-attr">trailing_html:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br></code></pre></td></tr></table></figure><img src="image-20210930130025608.png"  style="zoom:50%;" /><h3 id="撰写文章"><a href="#撰写文章" class="headerlink" title="撰写文章"></a>撰写文章</h3><h4 id="Front-Matters"><a href="#Front-Matters" class="headerlink" title="Front Matters"></a>Front Matters</h4><p>Hexo使用markdown写作，或者说，使用Markdown的语法进行写作。Hexo有一种被称为<a href="https://hexo.io/zh-cn/docs/front-matter">Front Matter</a>的语法，用于对每篇文章进行一定程度上的自定义，如指定网页名称，嵌入封面图，指定文章作者和tag等.</p><p>Front Matter可以使用yaml撰写，也可以使用JSON撰写：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hello</span> <span class="hljs-string">World</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2013</span><span class="hljs-string">/7/13</span> <span class="hljs-number">20</span><span class="hljs-string">:46:25</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json">;;;<br><span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;Hello World&quot;</span>,<br><span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2013/7/13 20:46:25&quot;</span><br>;;;<br></code></pre></td></tr></table></figure><h4 id="与HTML集成"><a href="#与HTML集成" class="headerlink" title="与HTML集成"></a>与HTML集成</h4><p>如果用过Typora的话，就会对其中嵌入HTML标签的功能印象深刻，他可以让Markdown文档呈现出不属于Markdown规范的丰富样式，甚至可以通过iframe嵌入其他网页的内容。</p><img src="image-20210930143453754.png" style="zoom:50%;" /><p>Hexo也完全支持内嵌HTML，这样文章不仅可以有着丰富的自定义能力，也可以与Typora完全兼容。</p><h4 id="本地撰写实践"><a href="#本地撰写实践" class="headerlink" title="本地撰写实践"></a>本地撰写实践</h4><p>Hexo-cli提供了创建新文章的方式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  StaticBlogTest git:(develop) ✗ hexo new ArticleTest<br>INFO  Validating config<br>INFO  Created: ~/Documents/GitHub/StaticBlogTest/source/_posts/ArticleTest.md<br></code></pre></td></tr></table></figure><p>默认状态下，它只会在指定文件夹下创建一个markdown文件。我们可以用任何markdown编辑器进行撰写，也可以将已经撰写的markdown文件拷贝到<code>source/_posts</code>路径下，形成一篇新的文章。</p><p>在撰写完成之后，可以用<code>hexo clean &amp;&amp; hexo s</code>进行预览</p><h2 id="使用主题"><a href="#使用主题" class="headerlink" title="使用主题"></a>使用主题</h2><p>前端的魅力在于更便捷更自由地设计自己想要的外观，Hexo也有着丰富的自定义主题，并且也可以自己开发定制主题。</p><p>在Github上和Hexo官网上都有大量的主题</p><img src="image-20210930130535951.png" style="zoom:33%;" /><p>只需要主题下载到<code>themes</code>文件夹下，在<code>_config.yml</code>中引用这个主题的名字（文件夹名）就可以使用这个主题。不同的主题提供了丰富的配置项目，可以对其进行进一步定制。同时，所有的主题也都是使用标准前端技术构建的，也可以自己对主题进行修改和定制。</p><p>比如我这里使用的主题<a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid</a>，其文章页的目录就只能居右，通过对它的模版进行修改，可以自定义布局，在左边显示目录，同时使正文不强制居中(space-evenly)。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>几个小时下来，Hexo这个静态博客生成框架还是给了我不少惊喜，首先就是文章撰写十分容易，可以直接在熟悉的Typora上完成，Front—Matter也让我可以实现对文章样式的控制。几年来全球各地开发者贡献的的模版和插件也数不胜数，很多都让人眼前一亮。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Blog</tag>
      
      <tag>Frontend</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/StaticBlog/2021/09/23/hello-world/"/>
    <url>/StaticBlog/2021/09/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
