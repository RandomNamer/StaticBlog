<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>C# Quick Start</title>
    <link href="/StaticBlog/en/2024/06/24/csharp-quick-start/"/>
    <url>/StaticBlog/en/2024/06/24/csharp-quick-start/</url>
    
    <content type="html"><![CDATA[<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><ul><li>Singed primitive types: <code>sbyte</code>, <code>ushort</code>, <code>uint</code>, <code>ulong</code>, built-in 128bit big number: <code>decimal</code>, plus every primitive Java has.</li><li><code>foreach</code> keyword: for interate through <code>IEnumerable</code>, just like <code>for in</code> in Java</li><li>Data class equiv: <code>record</code></li><li>Support vararg and default params</li><li><code>ref</code> and <code>out</code> : pass an argument by reference. <code>out</code> does not require it to be initialized first, so the method can initialize it and then after calling method the caller can access it, no return needed.</li><li><code>yeild return</code> : return  enumerable; <code>yeild break</code> : dont include in the enumerable</li><li>Named params: <code>Method(2, 3, &quot;some&quot;, other: 4)</code></li><li>Support extension methods</li><li>Nullable variable through <code>?</code> , however under the hood it’s a struct <code>Nullable&lt;T&gt;</code>, still it’s more efficient than Java’s boxed objects.</li><li><code>HasValue</code> and <code>??</code> :  same as  <code>!= null</code> and <code>?</code> in Kotlin</li><li>Lambda: <code>Func&lt;int, int&gt; f = (x) =&gt; x * x</code></li><li><code>using</code>:  automatically clean <code>IDisposable</code>  once executed out of the scope</li><li>Dynamic objects:  using <code>System.Dynamic.ExpandoObject</code> to dynamically create fields.</li><li><code>IQueryable</code>: query abilites for collection types: <code>Sort</code>, <code>Select</code>(map), <code>Where</code>(filter), reduce.</li><li>Type inference: <code>var</code> notice there is another keyword <code>readonly</code> to enforce immutablity</li><li>Implicit objects based on anonymous types: <code>bikes.Select(b=&gt;new &#123; Name = b.Name, IsAwesome = !b.IsBroken &amp;&amp; b.HasTassles &#125;);</code></li><li>Parallel LINQ: <code>bikes.AsParallel().Where(b =&gt; b.Wheels == 3).Select(b =&gt; b.Name);</code> The system will take care of all the threading and sync</li><li>LINQ execution is delayed: the operations only fire when data accessed</li><li><code>catch(...) when (..)</code></li><li>Static <code>using</code>: Direct access static members without the class name</li><li>Tuples (C#7 and later): can have multiple elements, can be destructured, can have property names.</li><li>Pattern Matching<ul><li>Extreme flexibility for if and switch expressions and many sugaring.</li></ul></li><li>Local Functions: Nest function in function</li></ul><h2 id="OOP"><a href="#OOP" class="headerlink" title="OOP"></a>OOP</h2><ul><li>Access modifiers: <code>public/private/protected/internal</code></li><li>get/set method sugaring: <code>public int i &#123;get &#123; ... &#125;; private set;&#125;</code></li><li>readonly properties that actcually return an expression of other properties: <code>public string LongName =&gt; Name + &quot; &quot; + _speed + &quot; speed&quot;;</code></li><li><code>base</code>: C#’s <code>super</code></li><li>Secondary constructors can “inherit” <code>base</code> or <code>this</code>  constructors, just like Kotlin</li><li>Indexer of a class: <code>public string this[int i] &#123; get &#123;..&#125;; set &#123;...&#125;; &#125;</code></li><li><code>override</code> is a KW: unlike in Java, like Kotlin.</li><li><code>virtual</code> : same as <code>open</code> in Kotlin, Java only uses <code>final</code></li><li><code>partial</code>: you can write a class in multiple files.</li><li>Attribute: C#’s annotation</li><li>Delegates and Events: Type-safe function pointers<ul><li>Delegate: <code>public delegate void MyDelegate(string message);</code> to decl a delegate type, then can be initialized with a function that matches signature.</li><li>Multicast/Compose: can use <code>+</code> operator to chain multiple function to a delegate.</li><li>Event: can be created using a delegate type: <code>public static event MyDelegate MyEvent;</code> and can use + or - to modify it’s observers. used in event handling in GUI frameworks.</li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>C#</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Toward Jellyfin Homeserver: Does CPU and GPU 3D performance matter?</title>
    <link href="/StaticBlog/en/2024/03/26/jellyfinTranscodeBench/"/>
    <url>/StaticBlog/en/2024/03/26/jellyfinTranscodeBench/</url>
    
    <content type="html"><![CDATA[<blockquote><ul><li>Updated: AMD RDNA3 iGPU system using the Z1 Extreme (7840U) and Apple Silicon system with M1 Pro (1st gen, one encoder).</li><li>Primarily using 4K 120Mbps (Unlimited) and “720p” (actually 1080p) 8Mbps presets</li><li>Use HDR tone mapping by default</li><li>Using Defualt CRF of 23 for AVC and 28 for HEVC.</li><li>I prefer subtitle burn-in since it eleminates any subtitle sync issue in browsers. For HDR contents I prefer direct streaming using 3rd party apps to deal with subtitles.</li></ul></blockquote><p>Intel’s latest iGPU’s transcoding performance is impressive, however there’s a myth that encoder and decoder alone determines transcoding efficiency. For me, with morden 4K HDR videos and styled/image subtitles transcoding is in many cases a synthetic workload for CPU, GPU and media engine, especailly for low powered NAS CPUs. Here I have multiple test footages on my NAS transcoded via Jellyfin installed on these machines:</p><ol><li>Low powered machine with a 4 E-core Intel N100 CPU, 8GB DDR4 memory and the powerful Intel Gen12 media encoders.</li><li>High powered machine with a 16-Core AMD Ryzen 9 7950X3D CPU, 64GB DDR5 memory and NVIDIA RTX 4090 graphics card, eliminating any possible bottleneck on CPU and GPU 3D engine.</li><li>ROG Ally with AMD Ryzen Z1 Extreme, 16GB LPDDR5 memory and Radeon 780M RDNA3 GPU to simulate 7840U/7840HS/7940HS/8845HS AMD mini PCs. I only did a quick test of JW4 and SW2 4Kto4K subtitle burn-in on this setup.</li><li>Apple MacBook Pro 2021 with M1 Pro, 32GB LPDDR5 memory and 14-core Apple GPU (single encoder). The performance should be on par with M1 Mac Minis – which is a popular mini PC / server choice when prices are right.</li></ol><h1 id="Takeaway"><a href="#Takeaway" class="headerlink" title="Takeaway"></a>Takeaway</h1><p> The result is somewhat unexpected, the intel N100 is constantly having its fast media engines underloaded when burning subtitles in Linux, and virtually everywhere in Windows. In Windows <code>ffmpeg</code> process can easily saturate the CPU just pulling files via SMB. On the other hand, the Intel media engine, even fully loaded, is 3-4x slower than the latest NVENC, and that’s only one of the total of 2.</p><p> While Intel’s low power iGPU is still my go for always-on home media servers, a beefier setup is certainly useful if you want to serve multiple users simultanously.</p><p> The AMD setup is somewhere in between. It has a powerful 8-core Zen 4 CPU and 12CU RDNA3 GPU to eliminate any other bottlenecks. It is nearly 2x as fast as the N100 setup, though the media codec of the latter is not fully utilized due to GPU bottleneck. </p><p> Apple silicon is a blackbox hardware and on my set up I can’t really see which hardware is bottlenecked, probably the famous media engine since both the CPU and GPU are far from full load. In all it’s slower than the AMD iGPU setup. Perhaps newer M-series chips could perform better but the M1 Mac Mini is the only cost-effective machine for a home server, and it’s already slower than AMD 7840HS mini PCs in terms of transcoding.</p> <!-- I did logged the start play and seek time on the AMD and Intel setups with footage JW4, 4Kto4K sub burn-in settings. The AMD 7840U family took about 9s to start playing and 5s to seek, while the N100 took about 10.5s and 6s. --><h2 id="For-N100"><a href="#For-N100" class="headerlink" title="For N100"></a>For N100</h2><ul><li>VAAPI makes no  difference</li><li>Low-power encoder is slightly faster</li><li>VPP tone-mapping is useless unless you want some power saving</li><li>Tone mapping and subtitle burning may cause GPU 3D engine bottleneck and impact performance badly.</li><li>Audio transcoding will also saturate CPU, capped at 5-6x.</li><li>Encoding in HEVC has 10%-20% performance hit compared to H.264, however, it’s only a pain point if your browser supports HEVC and you want to watch 4K HDR tone-mapped content in your home network. </li><li>For some videos FFMPEG have to probe through the entire video if one subtitle stream has no offset (common for ASS or SRT streams), better to turn on burn-in for small videos only. </li><li>Not able to handle 4K in Windows.</li></ul><h2 id="For-Nvidia-Cards"><a href="#For-Nvidia-Cards" class="headerlink" title="For Nvidia Cards"></a>For Nvidia Cards</h2><ul><li>RTX 4090 could pull over 150W power when transcoding and hit maximium frequency. </li><li>Since there is no 3D and CPU bottleneck, one NVENC should constantly hit full load. For certain GPUs with multiple NVENC, since it’s a single session and NVENC split frame encoding is for HEVC and AV1 only, one should not see full utilization.</li></ul><h2 id="For-AMD-7840U-like-SoCs"><a href="#For-AMD-7840U-like-SoCs" class="headerlink" title="For AMD 7840U-like SoCs:"></a>For AMD 7840U-like SoCs:</h2><ul><li>No bottleneck on CPU or GPU</li><li>Draws ~25w power with CPU at 3.2GHz (turbo boost off) and GPU at 0.8-1.6GHz.</li></ul><h2 id="For-Apple-M1-family"><a href="#For-Apple-M1-family" class="headerlink" title="For Apple M1 family"></a>For Apple M1 family</h2><ul><li>Faster than the N100 by a little bit with same level of low power consumption.<br>)</li><li>Not cost effective but certainlly power saving.</li></ul><h1 id="Intel-N100-with-Intel-UHD-Graphics-24EUs-750MHz-Linux"><a href="#Intel-N100-with-Intel-UHD-Graphics-24EUs-750MHz-Linux" class="headerlink" title="Intel N100 with Intel UHD Graphics, 24EUs@750MHz, Linux"></a>Intel N100 with Intel UHD Graphics, 24EUs@750MHz, Linux</h1><h2 id="JW4"><a href="#JW4" class="headerlink" title="JW4"></a>JW4</h2><ul><li><p>Bitrate: 67.4Mbps</p></li><li><p>Purpose: Remux 4K HDR10</p></li><li><p>4Kto4K, VPP tone mapping, no sub burn-in: ~50fps</p><img src="image-20240326004515287.png"/> </li><li><p>4Kto4K, non-VPP tone mapping, no burn-in: 57fps</p></li><li><p>4Kto4K, VPP tone mapping burin-in: 27fps </p><ul><li>Lower CPU and GPU (both 3D and codec) usage</li><li>~1W GPU, ~7w CPU power</li></ul></li><li><p>4Kto4K, non-VPP tone mapping burin-in: 43fps </p><ul><li>~1.8w GPU, ~10w CPU power</li></ul></li><li><p>4Kto1080p, subtitle burn-in: 82fps</p></li></ul><h2 id="GunBuster"><a href="#GunBuster" class="headerlink" title="GunBuster"></a>GunBuster</h2><ul><li><p>Bitrate: 11.7Mbps</p></li><li><p>Purpose: 1080 * 1440 video</p></li><li><p>Original: ~200fps</p><img src="image-20240326005327975.png"/></li><li><p>1080pto1080p 8Mbps: ~270fps</p></li></ul><h2 id="Mazouku"><a href="#Mazouku" class="headerlink" title="Mazouku"></a>Mazouku</h2><ul><li><p>Bitrate: 3.7Mbps</p></li><li><p>Purpose: 1080p SDR WEBDL anime, with pre-burnt-in subtitles</p></li><li><p>Original: ~230fps</p><img src="image-20240326011426188.png"/></li></ul><h2 id="Madoka"><a href="#Madoka" class="headerlink" title="Madoka"></a>Madoka</h2><ul><li><p>Bitrate: 11.7Mbps</p></li><li><p>Purpose: High bitrate Bluray Anime</p></li><li><p>Original: 117fps</p></li><li><p>to 8Mbps: 114fps</p><img src="image-20240326012141376.png"/></li></ul><h2 id="SW2"><a href="#SW2" class="headerlink" title="SW2"></a>SW2</h2><ul><li><p>Bitrate: 41.5Mbps</p></li><li><p>Purpose: High Bitrate Bluray 4K HDR10</p></li><li><p>4Kto4K, sub burn-in: ~50fps</p><img src="image-20240326012738767.png"/></li><li><p>4Kto4K, no subtitle: ~75fps</p></li><li><p>4Kto1080p 8Mbps, sub burn-in: 94fps</p></li></ul><h2 id="Euphoria"><a href="#Euphoria" class="headerlink" title="Euphoria"></a>Euphoria</h2><ul><li><p>Bitrate: 22.7Mbps</p></li><li><p>Purpose: High Bitrate HDR10 TV show</p></li><li><p>4Kto4K, sub burn-in: ~50fps</p></li><li><p>4Kto4K, no sub: ~70fps </p></li><li><p>to 1080p 8Mbps, with sub: ~110fps</p><img src="image-20240326013108836.png"/></li></ul><h2 id="LongSeason-No-subtitle"><a href="#LongSeason-No-subtitle" class="headerlink" title="LongSeason (No subtitle)"></a>LongSeason (No subtitle)</h2><ul><li><p>Bitrate: 7.1Mbps</p></li><li><p>Purpose: Low bitrate WEBDL 4K HDR (DV)</p></li><li><p>4Kto4K: ~55fps (3D engine bottleneck, video render at ~60%)</p><img src="image-20240326023051969.png"/></li><li><p>to 1080p 6Mbps: ~130fps</p></li></ul><h2 id="Cyberpunk"><a href="#Cyberpunk" class="headerlink" title="Cyberpunk"></a>Cyberpunk</h2><ul><li><p>Bitrate:  5.7Mbps</p></li><li><p>Purpose: 1080p HDR</p></li><li><p>Original, with sub burn-in: ~120fps</p><img src="image-20240326023625272.png"/></li><li><p>without sub burn-in: ~220fps </p></li></ul><h1 id="Intel-N100-with-Intel-UHD-Graphics-24EUs-750MHz-Windows"><a href="#Intel-N100-with-Intel-UHD-Graphics-24EUs-750MHz-Windows" class="headerlink" title="Intel N100 with Intel UHD Graphics, 24EUs@750MHz, Windows"></a>Intel N100 with Intel UHD Graphics, 24EUs@750MHz, Windows</h1><h2 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h2><ul><li>Windows 11 23H2 fresh install</li><li>New Intel drivers break tone mapping, using driver 5085.</li></ul><h2 id="JW4-1"><a href="#JW4-1" class="headerlink" title="JW4"></a>JW4</h2><ul><li><p>Bitrate: 67.4Mbps</p></li><li><p>Purpose: Remux 4K HDR10</p></li><li><p>4Kto4K, VPP tone mapping, no sub burn-in: ~30fps</p> <img src="image-20240326024747894.png"/></li><li><p>4Kto4K, burin-in: 17fps </p></li><li><p>4Kto1080p, subtitle burn-in: ~40fps</p></li></ul><h2 id="GunBuster-1"><a href="#GunBuster-1" class="headerlink" title="GunBuster"></a>GunBuster</h2><ul><li><p>Bitrate: 11.7Mbps</p></li><li><p>Purpose: 1080 * 1440 video</p></li><li><p>Original: ~200fps</p><img src="image-20240326025212560.png"/></li><li><p>1080pto1080p 8Mbps: ~210fps</p></li></ul><h2 id="Mazouku-1"><a href="#Mazouku-1" class="headerlink" title="Mazouku"></a>Mazouku</h2><ul><li>Bitrate: 3.7Mbps</li><li>Purpose: 1080p WEBDL anime, with pre-burnt-in subtitles</li><li>Original: ~160fps</li></ul><h2 id="Madoka-1"><a href="#Madoka-1" class="headerlink" title="Madoka"></a>Madoka</h2><ul><li><p>Bitrate: 11.7Mbps</p></li><li><p>Purpose: High bitrate Bluray Anime</p></li><li><p>Original, burn-in: 89fps</p><img src="image-20240326024248852.png"/></li><li><p>to 6Mbps: 92fps</p></li></ul><h2 id="SW2-1"><a href="#SW2-1" class="headerlink" title="SW2"></a>SW2</h2><ul><li><p>Bitrate: 41.5Mbps</p></li><li><p>Purpose: High Bitrate Bluray 4K HDR10</p></li><li><p>4Kto4K, sub burn-in: 24fps</p></li><li><p>4Kto4K, no subtitle: 36fps</p></li><li><p>4Kto1080p 8Mbps, sub burn-in: 52fps</p></li></ul><h2 id="Euphoria-1"><a href="#Euphoria-1" class="headerlink" title="Euphoria"></a>Euphoria</h2><ul><li><p>Bitrate: 22.7Mbps</p></li><li><p>Purpose: High Bitrate HDR10 TV show</p></li><li><p>4Kto4K, sub burn-in: ~20fps</p></li><li><p>4Kto4K, no sub: ~30fps </p></li><li><p>to 1080p 8Mbps, with sub: ~50fps</p></li></ul><h2 id="LongSeason-No-subtitle-1"><a href="#LongSeason-No-subtitle-1" class="headerlink" title="LongSeason (No subtitle)"></a>LongSeason (No subtitle)</h2><ul><li><p>Bitrate: 7.1Mbps</p></li><li><p>Purpose: Low bitrate WEBDL 4K HDR (DV)</p></li><li><p>4Kto4K: 11fps</p></li><li><p>to 1080p 6Mbps: 21fps</p><img src="image-20240326030527752.png"/></li></ul><h2 id="Cyberpunk-1"><a href="#Cyberpunk-1" class="headerlink" title="Cyberpunk"></a>Cyberpunk</h2><ul><li><p>Bitrate:  5.7Mbps</p></li><li><p>Purpose: 1080p HDR</p></li><li><p>Original, with sub burn-in: 53fps</p></li><li><p>without sub burn-in: ~100fps </p></li></ul><h1 id="NVIDIA-RTX-4090-16384CUDAs-2835MHz"><a href="#NVIDIA-RTX-4090-16384CUDAs-2835MHz" class="headerlink" title="NVIDIA RTX 4090, 16384CUDAs @2835MHz"></a>NVIDIA RTX 4090, 16384CUDAs @2835MHz</h1><h2 id="JW4-2"><a href="#JW4-2" class="headerlink" title="JW4"></a>JW4</h2><ul><li><p>Bitrate: 67.4Mbps</p></li><li><p>Purpose: Remux 4K HDR10</p></li><li><p>4Kto4K, tone mapping, no sub burn-in: ~200fps</p> <img src="image-20240326004908964.png"/></li><li><p>4Kto1080p, subtitle burn-in: ~240fps</p></li></ul><h2 id="GunBuster-2"><a href="#GunBuster-2" class="headerlink" title="GunBuster"></a>GunBuster</h2><ul><li><p>Bitrate: 11.7Mbps</p></li><li><p>Purpose: 1080 * 1440 video</p></li><li><p>1080pto1080p: ~800fps</p><img src="image-20240326005114050.png"/></li><li><p>1080pto1080p 8Mbps: ~900fps</p></li></ul><h2 id="Mazouku-2"><a href="#Mazouku-2" class="headerlink" title="Mazouku"></a>Mazouku</h2><ul><li>Bitrate: 3.7Mbps</li><li>Purpose: 1080p WEBDL anime, with pre-burnt-in subtitles</li><li>Original: 837fps</li></ul><h2 id="Madoka-2"><a href="#Madoka-2" class="headerlink" title="Madoka"></a>Madoka</h2><ul><li>Bitrate: 11.7Mbps</li><li>Purpose: High bitrate Bluray Anime</li><li>Original, burn-in: ~650fps</li><li>to 6Mbps: ~700fps</li></ul><h2 id="SW2-2"><a href="#SW2-2" class="headerlink" title="SW2"></a>SW2</h2><ul><li><p>Bitrate: 41.5Mbps</p></li><li><p>Purpose: High Bitrate Bluray 4K HDR10</p></li><li><p>4Kto4K, sub burn-in: ~250fps</p></li><li><p>4Kto4K, no subtitle: ~260fps</p></li><li><p>4Kto1080p 8Mbps, sub burn-in: ~400fps</p></li></ul><h2 id="Euphoria-2"><a href="#Euphoria-2" class="headerlink" title="Euphoria"></a>Euphoria</h2><ul><li><p>Bitrate: 22.7Mbps</p></li><li><p>Purpose: High Bitrate HDR10 TV show</p></li><li><p>4Kto4K, sub burn-in: ~250fps</p></li><li><p>4Kto4K, no sub: ~260fps </p></li><li><p>to 1080p 8Mbps, with sub: ~300fps</p></li></ul><h2 id="LongSeason-No-subtitle-2"><a href="#LongSeason-No-subtitle-2" class="headerlink" title="LongSeason (No subtitle)"></a>LongSeason (No subtitle)</h2><ul><li><p>Bitrate: 7.1Mbps</p></li><li><p>Purpose: Low bitrate WEBDL 4K HDR (DV)</p></li><li><p>4Kto4K: 370fps</p></li><li><p>to 1080p 6Mbps: 710fps</p></li></ul><h2 id="Cyberpunk-2"><a href="#Cyberpunk-2" class="headerlink" title="Cyberpunk"></a>Cyberpunk</h2><ul><li><p>Bitrate:  5.7Mbps</p></li><li><p>Purpose: 1080p HDR</p></li><li><p>Original, with sub burn-in: 860fps</p></li><li><p>without sub burn-in: 910fps </p></li></ul><h1 id="AMD-Ryzen-Z1-Extreme-12CU-82-68-x4e-65-x33-64-48-x2e-56-45-50-46-55-71-72-122"><a href="#AMD-Ryzen-Z1-Extreme-12CU-82-68-x4e-65-x33-64-48-x2e-56-45-50-46-55-71-72-122" class="headerlink" title="AMD Ryzen Z1 Extreme, 12CU &#82;&#68;&#x4e;&#65;&#x33;&#64;&#48;&#x2e;&#56;&#45;&#50;&#46;&#55;&#71;&#72;&#122;"></a>AMD Ryzen Z1 Extreme, 12CU <a href="mailto:&#82;&#68;&#x4e;&#65;&#x33;&#64;&#48;&#x2e;&#56;&#45;&#50;&#46;&#55;&#71;&#72;&#122;">&#82;&#68;&#x4e;&#65;&#x33;&#64;&#48;&#x2e;&#56;&#45;&#50;&#46;&#55;&#71;&#72;&#122;</a></h1><h2 id="JW4-3"><a href="#JW4-3" class="headerlink" title="JW4"></a>JW4</h2><ul><li><p>Bitrate: 67.4Mbps</p></li><li><p>Purpose: Remux 4K HDR10</p></li><li><p>4Kto4K, tone mapping, sub burn-in: 76fps</p></li></ul><h2 id="SW2-3"><a href="#SW2-3" class="headerlink" title="SW2"></a>SW2</h2><ul><li>Bitrate: 41.5Mbps</li><li>Purpose: High Bitrate Bluray 4K HDR10</li><li>4Kto4K, sub burn-in: ~110fps</li></ul><h1 id="Apple-M1-Pro-14-core-Apple-GPU"><a href="#Apple-M1-Pro-14-core-Apple-GPU" class="headerlink" title="Apple M1 Pro, 14-core Apple GPU"></a>Apple M1 Pro, 14-core Apple GPU</h1><h2 id="JW4-4"><a href="#JW4-4" class="headerlink" title="JW4"></a>JW4</h2><ul><li><p>Bitrate: 67.4Mbps</p></li><li><p>Purpose: Remux 4K HDR10</p></li><li><p>4Kto4K, tone mapping, sub burn-in: 48fps (to AVC), 70fps (to HEVC)</p></li></ul><h2 id="SW2-4"><a href="#SW2-4" class="headerlink" title="SW2"></a>SW2</h2><ul><li>Bitrate: 41.5Mbps</li><li>Purpose: High Bitrate Bluray 4K HDR10</li><li>4Kto4K, sub burn-in: ~70fps (to AVC), ~90fps (to HEVC)</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>NAS</tag>
      
      <tag>Jellyfin</tag>
      
      <tag>Hardware</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Save My Kindle: Make EPUBs with JS</title>
    <link href="/StaticBlog/en/2022/04/24/dmzjReader/"/>
    <url>/StaticBlog/en/2022/04/24/dmzjReader/</url>
    
    <content type="html"><![CDATA[<h1 id="data-source"><a href="#data-source" class="headerlink" title="data source"></a>data source</h1><p>Looking at the client of DMZJ (a Chinese website for manga &amp; novel) has long been unhappy, it is better to bully this APK while is not confuscated enough, and use their API to play with myself. With the idea of ​​resurrecting my seven-year-old Kindle, this time I will catch an anime one. Home light novel source, make it an e-book for it to read (why don’t you catch comics? Don’t ask is today’s World Book Day). Although Anime Home has a lot of Chinese light novel resources, its mobile reading experience is not flattering, and the full-screen advertisements on the web basically cut off the possibility of reading with the slow and stuck browser of Kindle. The original idea is to host a web page locally and make a static reading page suitable for the Kindle browser through the DMZJ API (for performance reasons, it is best to directly disable the JavaScript of the Kindle browser). So I quickly thought that since the API is already available, wouldn’t it be beautiful to just pick it up and make an e-book and send it over? Anyway, everything is difficult at the beginning, as long as you get the API, the rest of the client, the web or the local storage can be easily at your fingertips. Of course, judging from the demise history of several versions of DMZJ clients that I have witnessed on the Windows UWP side, their APIs still change frequently, so it is better to store them locally.</p><p>As mentioned earlier, DMZJ’s API has been crawled at least a few years ago, so there have been numerous third-party API-based clients, and there are still APIs available on GitHub in 2021. But unfortunately, the results of the packet capture now show that the previous API is outdated, at least in the comic/novel chapter section, DMZJ’s API has introduced new encryption. <img src="image-20220424174404514.png" alt="image-20220424174404514" style="zoom:50%;" /></p><img src="image-20220424161305785.png" alt="image-20220424161305785" style="zoom: 50%;" /><p>So sacrificed <code>jadx</code>, directly decompiled to see its novel details page <code>NovelInstructionActivity</code> source code. We can see that the basic information interface of the novel is encrypted.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">refresh</span><span class="hljs-params">(<span class="hljs-keyword">boolean</span> z)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.mNovelProtocol.setPathParam(<span class="hljs-keyword">this</span>.intent_extra_nid);<br>        AppBeanFunctionUtils.setCommentRequestException(getActivity(), <span class="hljs-keyword">this</span>.mNovelProtocol);<br>        MyNetClient.getInstance().getNovel(<span class="hljs-keyword">this</span>.intent_extra_nid, <span class="hljs-keyword">new</span> MyCallBack1(getActivity(), <span class="hljs-keyword">new</span> MyCallBack1.B() &#123;<br>            <span class="hljs-comment">/* class com.dmzj.manhua.ui.NovelInstructionActivity.AnonymousClass1 */</span><br><br>            <span class="hljs-meta">@Override</span> <span class="hljs-comment">// com.dmzj.manhua.net.MyCallBack1.B</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onReceiveData</span><span class="hljs-params">(String str)</span> </span>&#123;<br>                NovelInstructionActivity.<span class="hljs-keyword">this</span>.scrollview.onRefreshComplete();<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">byte</span>[] decryptWithPrivateKeyBlock = RSAUtil.decryptWithPrivateKeyBlock(str);<br>                    JsonFormat jsonFormat = <span class="hljs-keyword">new</span> JsonFormat();<br>                    Novel.NovelInfoResponse parseFrom = Novel.NovelInfoResponse.parseFrom(decryptWithPrivateKeyBlock);<br>                    <span class="hljs-keyword">if</span> (parseFrom.getErrno() == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">final</span> String printToString = jsonFormat.printToString((Message) parseFrom.getDataOrBuilder());<br>                        NovelInstructionActivity.<span class="hljs-keyword">this</span>.getDefaultHandler().postDelayed(<span class="hljs-keyword">new</span> Runnable() &#123;<br>                            <span class="hljs-comment">/* class com.dmzj.manhua.ui.NovelInstructionActivity.AnonymousClass1.AnonymousClass1 */</span><br><br>                            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">()</span> </span>&#123;<br>                                NovelInstructionActivity.<span class="hljs-keyword">this</span>.refreshBasicInfos(printToString);<br>                            &#125;<br>                        &#125;, <span class="hljs-number">500</span>);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        UIUtils.show(NovelInstructionActivity.<span class="hljs-keyword">this</span>.getActivity(), parseFrom.getErrmsg());<br>                    &#125;<br>                    NovelInstructionActivity.<span class="hljs-keyword">this</span>.ltUnionADPlatform = BrowseAdHelper.setAd(NovelInstructionActivity.<span class="hljs-keyword">this</span>.getActivity(), NovelInstructionActivity.<span class="hljs-keyword">this</span>.layout_ad_layout, <span class="hljs-number">2</span>);<br>                &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                    e.printStackTrace();<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-meta">@Override</span> <span class="hljs-comment">// com.dmzj.manhua.net.MyCallBack1.B</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onReceiveError</span><span class="hljs-params">(String str, <span class="hljs-keyword">int</span> i)</span> </span>&#123;<br>                NovelInstructionActivity.<span class="hljs-keyword">this</span>.scrollview.onRefreshComplete();<br>            &#125;<br>        &#125;));<br></code></pre></td></tr></table></figure><p>Then we look at its <code>RSAUtil</code>, the private key is in plaintext, you know.</p><p>Simply call it and find that the previously captured request can be decoded normally, and the content should be protobuf.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">object</span> DMZJDecrypter &#123;<br>    <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">run</span><span class="hljs-params">(ciphertext: <span class="hljs-type">String</span>)</span></span>&#123;<br>        println(<br>            String(RSAUtils.decryptWithPrivateKeyBlock(ciphertext))<br>        )<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="image-20220424174218724.png" alt="image-20220424174218724"></p><p>Use <code>protoc --decode_raw &lt; ~/Downloads/dmzj_resp.bin &gt; ~/Downloads/dmzj_resp.txt</code> to decode, you can see the following structure:</p><img src="image-20220424185604656.png" alt="image-20220424185604656" style="zoom:50%;" /><p>But we also need to find the meaning of these fields. In the apk, we can see three ProtoBuf entity classes generated by <code>protoc</code>:</p><img src="image-20220424185144983.png" alt="image-20220424185144983" style="zoom:50%;" /><p>For example, the Novel type corresponds to three objects NovelChapter, NovelInfo, NovelVolume, and their definitions are similar:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">NovelInfo</span><span class="hljs-params">()</span> </span>&#123;<br>            <span class="hljs-keyword">this</span>.memoizedIsInitialized = -<span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">this</span>.novelId_ = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">this</span>.name_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.zone_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.status_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.lastUpdateVolumeName_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.lastUpdateChapterName_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.lastUpdateVolumeId_ = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">this</span>.lastUpdateChapterId_ = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">this</span>.lastUpdateTime_ = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">this</span>.cover_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.hotHits_ = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">this</span>.introduction_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.types_ = LazyStringArrayList.EMPTY;<br>            <span class="hljs-keyword">this</span>.authors_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.firstLetter_ = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">this</span>.subscribeNum_ = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">this</span>.redisUpdateTime_ = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">this</span>.volume_ = Collections.emptyList();<br>        &#125;<br></code></pre></td></tr></table></figure><p>Apparently this corresponds to the structure of protobuf. At this point we can finally use the new version of the DMZJ API.</p><p>The following is the Protobuf IDL example of the DMZJ light novel I summarized:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs idl">syntax = &quot;proto2&quot;;<br><br>package novel;<br><br>message NovelChapterDetail &#123;<br>    required int32 chapterId = 1;<br>    required string chapterName = 2;<br>    required int32 chapterOrder = 3; <br>&#125;<br><br>message NovelVolumeDetail &#123;<br>    required int32 volumeId = 1;<br>    required string volumeName = 2;<br>    required int32 volumeOrder = 3;<br>    repeated NovelChapterDetail chapters = 4;<br>&#125;<br><br>message NovelChapterResponse &#123;<br>    optional int32 errno = 1;<br>    optional string errmsg = 2;<br>    repeated NovelVolumeDetail data = 3;<br>&#125;<br><br>message NovelInfoResponse &#123;<br>    optional int32 errno = 1;<br>    optional string errmsg = 2;<br>    repeated NovelInfo data = 3;<br>&#125;<br><br><br>message NovelVolume &#123;<br>    required int32 volumeId = 1;<br>    required int32 novelId = 2;<br>    required string volumeName = 3;<br>    required int32 volumeOrder = 4;<br>    required uint64 addtime = 5;<br>    required uint32 sumChapters = 6;<br>&#125;<br><br>message NovelInfo &#123;<br>    required int32 novelId = 1;<br>    required string name = 2;<br>    required string zone = 3;<br>    required string status = 4;<br>    required string lastUpdateVolumeName = 5 ;<br>    required string lastUpdateChapterName = 6;<br>    required int32 lastUpdateVolumeId = 7;<br>    required int32 lastUpdateChapterId = 8;<br>    required uint64 lastUpdateTime = 9;<br>    required string cover = 10;<br>    required int32 hotHits = 11;<br>    required string introduction = 12;<br>    repeated string types = 13;<br>    required string authors = 14;<br>    required string firstLetter = 15;<br>    required int32 subscribeNum = 16;<br>    optional uint64 redisUpdateTime = 17; <br>    repeated NovelVolume volume = 18;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>Simply decode it with <code>protobuf.js</code> to get the directory we want:</p><p><img src="image-20220425000148505.png" alt="image-20220425000148505"></p><p>Of course, there is the last step to get the text of the corresponding chapter. This interface needs to be accessed with the <code>volumeId</code> and <code>chapterId</code> obtained in the previous step and the two queries <code>t</code> and <code>k</code>: <code>http://jurisdiction.muwai .com/lnovel/$&#123;volumeId&#125;_$&#123;chapterId&#125;.txt</code>.</p><img src="image-20220425120102467.png" alt="image-20220425120102467" style="zoom:50%;" /><p>As the name suggests, <code>t</code> is the current timestamp, and <code>k</code> should be a random ID generated based on the timestamp, changing any of them, or not uploading will result in a 403.</p><img src="image-20220425120229409.png" alt="image-20220425120229409" style="zoom:50%;" /><p>Decompile <code>NovelBrowsActivity</code>, you can see the logic of chapter refresh:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">final</span> NovelDescription.Chapter chapter = <span class="hljs-keyword">this</span>.novelChapters.get(z ? i - <span class="hljs-number">1</span> : i + <span class="hljs-number">1</span>);<br>        loadChapterNovel(<span class="hljs-keyword">null</span>, chapter.getChapter_name(), <span class="hljs-keyword">this</span>.intent_extra_nid, chapter.getVolume_id(), chapter.getChapter_id(), <span class="hljs-keyword">new</span> OnCommenCompleteListener() &#123;<br>            <span class="hljs-comment">/* class com.dmzj.manhua.ui.NovelBrowseActivity.AnonymousClass8 */</span><br><br>            <span class="hljs-meta">@Override</span> <span class="hljs-comment">// com.dmzj.manhua.ui.NovelBrowseActivity.OnCommenCompleteListener</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onComplete</span><span class="hljs-params">(Bundle bundle)</span> </span>&#123;<br>                ...<br>            &#125;<br>        &#125;, <span class="hljs-keyword">false</span>, z);<br></code></pre></td></tr></table></figure><p>In the <code>loadChapterNovel</code> method, we can see the method <code>MyspUtils</code> that splices out the final URL, this is just a tool for taking SahredPreference, it will take the cache address of the corresponding URL from SahredPreference, and then load it locally:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">loadChapterNovel</span><span class="hljs-params">(<span class="hljs-keyword">final</span> ReadHistory4Novel readHistory4Novel, String str, String str2, String str3, String str4, <span class="hljs-keyword">final</span> OnCommenCompleteListener onCommenCompleteListener, <span class="hljs-keyword">final</span> <span class="hljs-keyword">boolean</span> z, <span class="hljs-keyword">final</span> <span class="hljs-keyword">boolean</span> z2)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>        String str5 = <span class="hljs-keyword">new</span> URLPathMaker(<span class="hljs-keyword">this</span>.ctx, URLPathMaker.URL_ENUM.HttpUrlTypeNovelDownLoad).get_url(URLPathMaker.URL_ENUM.HttpUrlTypeNovelDownLoad, str3 + <span class="hljs-string">&quot;_&quot;</span> + str4);<br>        KLog.log(<span class="hljs-string">&quot;小说地址&quot;</span>, str5);<br>        String str6 = MyspUtils.getStr(<span class="hljs-keyword">this</span>.ctx, str5);<br>        KLog.log(<span class="hljs-string">&quot;str&quot;</span>, str6);<br>        <span class="hljs-keyword">if</span> (ZzTool.isNoEmpty(str6) &amp;&amp; onCommenCompleteListener != <span class="hljs-keyword">null</span>) &#123;...&#125;<br>   <span class="hljs-keyword">this</span>.mNovelHelper.getLocalLocalFile(getActivity(), str2, str3, str4, <span class="hljs-keyword">new</span> NovelHelper.OnLoadCompleteListener() &#123;<br>            <span class="hljs-meta">@Override</span> <span class="hljs-comment">// com.dmzj.manhua.novel.NovelHelper.OnLoadCompleteListener</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onComplete</span><span class="hljs-params">(String str, String str2)</span> </span>&#123;...&#125;<br>         &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>After the cache is not hit, the <code>NovelHelper.getLocalLocalFile()</code> method is called (this method will actually perform the download, but the name is… good coding practice). Therefore, the URL made earlier is only used to query the cache, and does not trigger the download behavior in this method.</p><p>In <code>NovelHelper</code>, we finally see the part of calculating two queries, the key is an MD5 encoding mixed with timestamps.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">goWebDownLoad</span><span class="hljs-params">(<span class="hljs-keyword">final</span> StepActivity stepActivity, String str, <span class="hljs-keyword">final</span> String str2, <span class="hljs-keyword">final</span> OnLoadCompleteListener onLoadCompleteListener)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (!AppUtils.RELEASE) &#123;<br>            Log.d(<span class="hljs-string">&quot;novel_goWebDownLoad&quot;</span>, <span class="hljs-string">&quot;webpath = &quot;</span> + str);<br>        &#125;<br>        <span class="hljs-keyword">long</span> currentTimeMillis = System.currentTimeMillis() / <span class="hljs-number">1000</span>;<br>        String replace = str.replace(Api.NOVEL_URL, <span class="hljs-string">&quot;&quot;</span>);<br>        StringBuilder sb = <span class="hljs-keyword">new</span> StringBuilder();<br>        sb.append(str);<br>        sb.append(<span class="hljs-string">&quot;?t=&quot;</span>);<br>        sb.append(currentTimeMillis);<br>        sb.append(<span class="hljs-string">&quot;&amp;k=&quot;</span>);<br>        sb.append(MD5.MD5Encode(Api.NOVEL_KEY + replace + currentTimeMillis).toLowerCase());<br>        String sb2 = sb.toString();<br>        KLog.log(<span class="hljs-string">&quot;小说地址====&quot;</span>, sb2);<br>  ...<br>&#125;<br></code></pre></td></tr></table></figure><p>Now we have a usable query.</p><img src="image-20220425134554616.png" alt="image-20220425134554616" style="zoom:50%;" /><h1 id="Make-an-eBook"><a href="#Make-an-eBook" class="headerlink" title="Make an eBook"></a>Make an eBook</h1><p>I have to admit that the recent API revision of DMZJ has indeed brought a lot of trouble to obtaining data. Fortunately, the obfuscation intensity of the client APK is very low, and its encryption logic and interface details can be obtained through decompilation. Now we have a complete data source, including book information (author, cover, region, tag, etc.), bibliographic information (volume, chapter), and the corresponding text for each chapter.</p><p>Here I used the npm module <code>epub-gen</code> to generate Epub eBooks. Since Epub also applies HTML and CSS typesetting, you only need to provide HTML chapter text and external CSS to generate Epub. The use of <a href="https://www.npmjs.com/package/epub-gen">epub-gen</a> is quite simple. You only need to specify some options and construct an Epub object from the list of objects in the chapters as the content to complete the e-book. generation. The module can also automatically download the picture in the url as the cover.</p><p>The code to generate the Epub eBook from the data structure obtained earlier is as follows:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> volume <span class="hljs-keyword">of</span> volumes) &#123;<br>       <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> chapter <span class="hljs-keyword">of</span> volume.chapters) &#123;<br>           <span class="hljs-keyword">let</span> text = <span class="hljs-keyword">await</span> getChapterText(volume.volumeId, chapter.chapterId)<br>           chapter.text = text<br>       &#125;<br>       volume.chapters = volume.chapters.sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a.chapterOrder - b.chapterOrder)<br>   &#125;<br>   <span class="hljs-comment">// volumes = volumes.sort((a, b) =&gt; a.volumeOrder - b.volumeOrder)</span><br>   <span class="hljs-keyword">let</span> volumesStr = <span class="hljs-built_in">JSON</span>.stringify(volumes)<br>   <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Successfully get raw text&quot;</span>, volumesStr)<br>   <span class="hljs-keyword">const</span> workingDir = path.join(outputDir, info.novelId.toString())<br>   <span class="hljs-keyword">if</span> (!fs.existsSync(workingDir)) &#123;<br>       fs.mkdirSync(workingDir);<br>   &#125;<br>   <span class="hljs-comment">// fs.writeFileSync(path.join(workingDir, &#x27;volumes.json&#x27;), volumesStr, err =&gt; &#123;</span><br>   <span class="hljs-comment">//     console.error(err)</span><br>   <span class="hljs-comment">// &#125;)</span><br><br>   <span class="hljs-keyword">var</span> content = []<br>   volumes.forEach(<span class="hljs-function"><span class="hljs-params">vol</span> =&gt;</span> &#123;<br>       content.push(&#123;<br>           <span class="hljs-attr">title</span>: vol.volumeName,<br>           <span class="hljs-attr">data</span>: <span class="hljs-string">&quot;&quot;</span><br>       &#125;)<br>       <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> chap <span class="hljs-keyword">of</span> vol.chapters) &#123;<br>           content.push(&#123;<br>               <span class="hljs-attr">title</span>: chap.chapterName,<br>               <span class="hljs-attr">data</span>: <span class="hljs-string">`&lt;div&gt;<span class="hljs-subst">$&#123;chap.text&#125;</span>&lt;/div&gt;`</span><br>           &#125;)<br>       &#125;<br>   &#125;)<br><br>   <span class="hljs-keyword">const</span> options = &#123;<br>       <span class="hljs-attr">title</span>: info.name,<br>       <span class="hljs-attr">author</span>: info.authors,<br>       <span class="hljs-attr">cover</span>: info.cover,<br>       <span class="hljs-attr">lang</span>: <span class="hljs-string">&quot;zh&quot;</span>,<br>       <span class="hljs-attr">tocTitle</span>: <span class="hljs-string">&quot;目录&quot;</span>,<br>       <span class="hljs-attr">content</span>: content,<br>       <span class="hljs-attr">verbose</span>: <span class="hljs-literal">true</span><br>   &#125;<br><br>   <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Epub(options, path.join(workingDir, <span class="hljs-string">`<span class="hljs-subst">$&#123;info.name&#125;</span>.epub`</span>))<br></code></pre></td></tr></table></figure><img src="image-20220425162559469.png" alt="image-20220425162559469" style="zoom:50%;" /><p>Everything works perfectly…but <code>epub-gen</code> doesn’t actually support multi-level directories, which means, we get a volume-chapter two-level structure that cannot be generated into an epub….. . But it’s not a big problem. First of all, there are some workarounds, such as inserting empty pages in the <code>data</code> of the volume, and then adding other chapters; secondly, you can directly modify the <code>epub-gen</code>, which is beyond the scope of this article.</p>]]></content>
    
    
    
    <tags>
      
      <tag>JS</tag>
      
      <tag>Web</tag>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Analysis of DICOM Transfer Protocols</title>
    <link href="/StaticBlog/en/2021/11/11/DICOM-protocol-internals/"/>
    <url>/StaticBlog/en/2021/11/11/DICOM-protocol-internals/</url>
    
    <content type="html"><![CDATA[<h2 align='center' style="font-family: serif; font-size: 40px;">DICOM Transfer Protocols Analysis</h2><blockquote><p>This blog is an excerpt from one of my <a href="https://github.com/RandomNamer/BMECourseDesign">course design</a> reports.</p></blockquote><h2 id="1-Overview"><a href="#1-Overview" class="headerlink" title="1. Overview"></a>1. Overview</h2><h3 id="Introduction-to-PACS"><a href="#Introduction-to-PACS" class="headerlink" title="Introduction to PACS"></a>Introduction to PACS</h3><p>Image Archiving and Communication System (PACS) is a medical imaging technology that provides functions such as storage, access, and search of images of multiple modalities. The common format for PACS image storage and transmission is DICOM, and PACS itself is part of the DICOM standard. The PACS system consists of Modality, Server and View Station, which can be considered as an implementation of the client/service model. The modal and the viewer belong to the user (Service Class User, SCU), and the server is called the Service Class Provider, abbreviated as SCP.</p><p>In implementation, modalities are typically digital imaging devices such as computed tomography (CT), ultrasound, nuclear medicine, positron emission tomography (PET), and magnetic resonance imaging (MRI). The modality can be sent to a quality assurance (QA) workstation first, and if the information is correct, the image will be passed to the server for storage. This step comes from the C-STORE protocol in the DICOM standard. View Station is a place where radiologists review patient research and formulate diagnoses. Its basic function is to perform addition, deletion, and modification operations on the data in the server, which is implemented by C-FIND, C-MOVE, and C-GET in the DICOM standard. In View Station, peripheral facilities such as reporting systems can also be inherited, and integrated with other information systems in the hospital, such as the electronic medical record system EMR, to form an end-to-end workflow.</p><h4 id="DCMTK"><a href="#DCMTK" class="headerlink" title="DCMTK"></a>DCMTK</h4><p>Here we use the DCMTK toolkit as Modality and View Station. DCMTK is a set of open source packages and libraries that implement the DCM standard. It is developed using C++ and is cross-platform. Most of the DICOM standard is implemented in DCMTK, including image opening, conversion and verification functions, and the transmission of DICOM files over the Internet.</p><p>This time, DCMTK is built on the macOS system, and the builds on other UNIX-like systems should also have the same steps. The <code>CMakelist</code> corresponding to various systems has been written in the DCMTK source code, and you only need to execute <code>cmake</code> to complete the configuration. Then <code>make</code> in the source file path can build the entire project. After the build is successful, the corresponding static library files and binary executable files will be output:</p><img src="image-20210930193320612.png" alt="image-20210930193320612" style="zoom:33%;" /><img src="image-20210930193338568.png" alt="image-20210930193338568" style="zoom:33%;" /><p>The output has a set of command line tools and the corresponding static link library, which meets the needs of users to call through system commands and direct link calls, which is very convenient for secondary development. At the same time, we can also directly use the generated command line tools to perform various DICOM operations. For example, we can use the <code>storescu</code> as modality to send DICOM files to the server. The format sent is</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">storescu [options] peer port dcmfile-in...<br></code></pre></td></tr></table></figure><h4 id="CONQEST-SERVER"><a href="#CONQEST-SERVER" class="headerlink" title="CONQEST SERVER"></a>CONQEST SERVER</h4><p>CONQUEST is a lightweight DICOM SERVER that implements the DIMSE message mechanism and supports multiple databases.</p><h2 id="2-Image-communication-and-its-parameter-analysis"><a href="#2-Image-communication-and-its-parameter-analysis" class="headerlink" title="2. Image communication and its parameter analysis"></a>2. Image communication and its parameter analysis</h2><h3 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h3><p>DICOM is a high-level protocol built on top of TCP/IP. The bottom layer of the DICOM protocol is ULP (Upper Layer Protocol). It is mainly responsible for connecting with TCP. After the DICOM application entity completes the message exchange through DIMSE, the DICOM upper protocol layer ULP is required to provide transmission support.</p><p>ULP provides 5 connection control services: A-ASSOCIATE, A-RELEASE, A-ABORT, P-DATA, A-P-ABORT.</p><ul><li>A-ASSOCIATE:</li><li>A-RELEASE:</li><li>A-ABORT:</li><li>P-DATA:</li><li>A-P-ABORT:</li></ul><p>ULP provides 7 protocol data units (Protocol Data Unit, PDU) to realize the above-mentioned 5 kinds of services.</p><ul><li>A-ASSOCIATE-RQ:</li><li>A-ASSOCIATE-AC:</li><li>A-ASSOCIATE-RJ:</li><li>P-DATA-TF:</li><li>A-RELEASE-RQ:</li><li>A-RELEASE-RP:</li><li>A-ABORT:</li></ul><p>The process of DICOM image transmission can also be inferred from the foregoing: the connection is established through the Association PDU, the actual transmission is performed through the P-DATA-TF PDU, and the connection is released through the Release PDU after the transmission is completed, or A-ABORT is used to terminate the connection during transmission.</p><p>The details of the communication will be described below.</p><h3 id="C-STORE"><a href="#C-STORE" class="headerlink" title="C-STORE"></a>C-STORE</h3><p>The <code>-v -d</code> parameter is used here to enable the command line tool of DCMTK to output detailed logs in Debug mode, and a network packet capture tool can also be used for auxiliary analysis.</p><img src="image-20210930194603984.png" alt="image-20210930194603984" style="zoom:50%;" /><p>The log includes the detailed process of connection establishment, transmission, and completion of the transmission between the two parties, including the request and response information <code>A-ASSOCIATE-RQ</code>, <code>A-ASSOCIATE-AC</code>, the DIMSE information of the store request and the received information when the connection is established. DIMSE information that the store responds to.</p><h4 id="connection-establishment"><a href="#connection-establishment" class="headerlink" title="connection establishment"></a>connection establishment</h4><p>In the DICOM standard, the connection request A-ASSOCIATE-RQ is described as follows:</p><ul><li><p>**PDU</p></li><li><p>:————:</p></li><li><p>1</p></li><li><p>02</p></li><li><p>3-6</p></li><li><p>7-8</p></li><li><p>9-10</p></li><li><p>11-26</p></li><li><p>27-42</p></li><li><p>43-74</p></li><li><p>75-xxx</p></li><li><p>6</p></li></ul><p>After the server receives the request, the server will start to parse the information carried in the request, mainly to check the carried Presentation Context, and will respond when the conditions are met, and then return the ASSOCIATE-AC message, whose structure is defined as follows:</p><ul><li>**PDU</li><li>:————:</li><li>1</li><li>2</li><li>3-6</li><li>7-8</li><li>9-10</li><li>11-26</li><li>27-42</li><li>43-74</li><li>75-xxx</li></ul><h4 id="Presentation-Context"><a href="#Presentation-Context" class="headerlink" title="Presentation Context"></a>Presentation Context</h4><p>Presentation Context is a representation in the DICOM protocol that specifies the form of transport supported by the client. It describes in detail the structure and encoding format of the content of this type of fragment. It consists of 3 parts: a Context ID, an Abstract Syntax and multiple Transfer Syntax.</p><ul><li>Positive odd numbers between 255</li></ul><ol start="2"><li><strong>Abstract Syntax</strong> is the meaning of data representation, usually represented by DICOM SOP Class UID, such as the following two IDs; at the same time, it can also be represented by private ID to realize the transmission of custom image types.</li></ol><ul><li><code>1.2.840.10008.1.1</code></li><li><code>1.2.840.10008.5.1.4.1.1</code></li></ul><ol start="3"><li><strong>Transfer Syntax</strong> is the data encoding format. Usually represented by DICOM Transfer Syntax Class UID, such as the following two IDs; at the same time, it can also be represented by private ID to realize the transfer of custom image types.</li></ol><ul><li><code>1.2.840.10008.1.2</code></li><li><code>1.2.840.10008.1.2.4.50</code></li></ul><p>The logs of dcmtk can help us to parse the Presentation Context as follows:</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Context</span> <span class="hljs-variable">ID</span><span class="hljs-operator">:</span>        <span class="hljs-number">45</span> <span class="hljs-punctuation">(</span><span class="hljs-variable">Proposed</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span>     <span class="hljs-variable">Abstract</span> <span class="hljs-built_in">Syntax</span><span class="hljs-operator">:</span> <span class="hljs-operator">=</span><span class="hljs-variable">DigitalIntraOralXRayImageStorageForPresentation</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span>     <span class="hljs-variable">Proposed</span> <span class="hljs-variable">SCP</span><span class="hljs-operator">/</span><span class="hljs-variable">SCU</span> <span class="hljs-variable">Role</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Default</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span>     <span class="hljs-variable">Proposed</span> <span class="hljs-variable">Transfer</span> <span class="hljs-built_in">Syntax</span><span class="hljs-punctuation">(</span><span class="hljs-variable">es</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span>       <span class="hljs-operator">=</span><span class="hljs-variable">LittleEndianExplicit</span><br></code></pre></td></tr></table></figure><p>In the Server, open the Debug mode log, and also print the Presentation Context carried in ASSOCIATE-RQ:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">CONQUESTSRV1</span>] UPACS THREAD <span class="hljs-number">45</span>: STARTED AT: Wed Oct <span class="hljs-number">13</span> <span class="hljs-number">18</span>:<span class="hljs-number">25</span>:<span class="hljs-number">41</span> <span class="hljs-number">2021</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] A-ASSOCIATE-RQ Packet Dump<br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Calling Application Title : <span class="hljs-string">&quot;STORESCU        &quot;</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Called Application Title : <span class="hljs-string">&quot;ANY-SCP         &quot;</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Application Context : <span class="hljs-string">&quot;1.2.840.10008.3.1.1.1&quot;</span>, PDU length: <span class="hljs-number">16384</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Number of Proposed Presentation Contexts: <span class="hljs-number">128</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Presentation Context <span class="hljs-number">0</span> <span class="hljs-string">&quot;1.2.840.10008.5.1.4.1.1.9.1.3&quot;</span> <span class="hljs-number">1</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Presentation Context <span class="hljs-number">1</span> <span class="hljs-string">&quot;1.2.840.10008.5.1.4.1.1.9.1.3&quot;</span> <span class="hljs-number">1</span><br>...<br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Presentation Context <span class="hljs-number">127</span> <span class="hljs-string">&quot;1.2.840.10008.5.1.4.1.1.12.2&quot;</span> <span class="hljs-number">1</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] Server Command   := <span class="hljs-number">0001</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] Message ID       := <span class="hljs-number">0001</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] FreeStore Left <span class="hljs-number">17269</span> <span class="hljs-keyword">on</span> c:\<br>[<span class="hljs-meta">CONQUESTSRV1</span>] Written file: c:\users\admi\desktop\dicomserver150b\data\MF<span class="hljs-number">-0000012</span>\<span class="hljs-number">1.3</span><span class="hljs-number">.6</span><span class="hljs-number">.1</span><span class="hljs-number">.4</span><span class="hljs-number">.1</span><span class="hljs-number">.5962</span><span class="hljs-number">.1</span><span class="hljs-number">.3</span><span class="hljs-number">.5012</span><span class="hljs-number">.1</span><span class="hljs-number">.1166546115</span><span class="hljs-number">.14677</span>_0001_000001_16341207560000.dcm<br>[<span class="hljs-meta">CONQUESTSRV1</span>] UPACS THREAD <span class="hljs-number">45</span>: ENDED AT: Wed Oct <span class="hljs-number">13</span> <span class="hljs-number">18</span>:<span class="hljs-number">25</span>:<span class="hljs-number">56</span> <span class="hljs-number">2021</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] UPACS THREAD <span class="hljs-number">45</span>: TOTAL RUNNING TIME: <span class="hljs-number">15</span> SECONDS<br></code></pre></td></tr></table></figure><h4 id="DIMSE"><a href="#DIMSE" class="headerlink" title="DIMSE"></a>DIMSE</h4><p>DIMSE (DICOM Message Service Element) is a message format transmitted under P-DATA PDU. There are 11 DIMSE services in the DICOM3.0 protocol:</p><ul><li><strong>Name</strong></li></ul><hr><p>| C-STORE        | DIMSE-C   | operation    |<br>| C-GET          | DIMSE-C   | operation    |<br>| C-MOVE         | DIMSE-C   | operation    |<br>| C-FIND         | DIMSE-C   | operation    |<br>| C-ECHO         | DIMSE-C   | operation    |<br>| N-EVENT-REPORT | DIMSE-N   | notification |<br>| N-GET          | DIMSE-N   | operation    |<br>| N-SET          | DIMSE-N   | operation    |<br>| N-ACTION       | DIMSE-N   | operation    |<br>| N-CREATE       | DIMSE-N   | operation    |<br>| N-DELETE       | DIMSE-N   | operation    |</p><p>这里还是以C-STORE为例进行分析。在收到服务端返回的ASSOCIATE-AC报文后，就正式发起store请求，进行传输。日志种会输出本次传输的DIMSE信息。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=====================</span> <span class="hljs-variable">OUTGOING</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">====================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">Type</span>                  <span class="hljs-operator">:</span> <span class="hljs-built_in">C</span><span class="hljs-operator">-</span><span class="hljs-variable">STORE</span> <span class="hljs-variable">RQ</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">ID</span>                    <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Class</span> <span class="hljs-variable">UID</span>        <span class="hljs-operator">:</span> <span class="hljs-variable">SecondaryCaptureImageStorage</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Instance</span> <span class="hljs-variable">UID</span>     <span class="hljs-operator">:</span> <span class="hljs-number">1.3</span><span class="hljs-number">.6</span><span class="hljs-number">.1</span><span class="hljs-number">.4</span><span class="hljs-number">.1</span><span class="hljs-number">.5962</span><span class="hljs-number">.99</span><span class="hljs-number">.1</span><span class="hljs-number">.2280943358</span><span class="hljs-number">.716200484</span><span class="hljs-number">.1363785608958</span><span class="hljs-number">.60</span><span class="hljs-number">.0</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Data</span> <span class="hljs-built_in">Set</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">present</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Priority</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">medium</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=======================</span> <span class="hljs-variable">END</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">=======================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DcmDataset</span><span class="hljs-string">::read</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">TransferSyntax</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Received</span> <span class="hljs-variable">Store</span> <span class="hljs-variable">Response</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=====================</span> <span class="hljs-variable">INCOMING</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">====================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">Type</span>                  <span class="hljs-operator">:</span> <span class="hljs-built_in">C</span><span class="hljs-operator">-</span><span class="hljs-variable">STORE</span> <span class="hljs-variable">RSP</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Presentation</span> <span class="hljs-built_in">Context</span> <span class="hljs-variable">ID</span>       <span class="hljs-operator">:</span> <span class="hljs-number">203</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">ID</span> <span class="hljs-variable">Being</span> <span class="hljs-variable">Responded</span> <span class="hljs-variable">To</span> <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Class</span> <span class="hljs-variable">UID</span>        <span class="hljs-operator">:</span> <span class="hljs-variable">SecondaryCaptureImageStorage</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Instance</span> <span class="hljs-variable">UID</span>     <span class="hljs-operator">:</span> <span class="hljs-number">1.3</span><span class="hljs-number">.6</span><span class="hljs-number">.1</span><span class="hljs-number">.4</span><span class="hljs-number">.1</span><span class="hljs-number">.5962</span><span class="hljs-number">.99</span><span class="hljs-number">.1</span><span class="hljs-number">.2280943358</span><span class="hljs-number">.716200484</span><span class="hljs-number">.1363785608958</span><span class="hljs-number">.60</span><span class="hljs-number">.0</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Data</span> <span class="hljs-built_in">Set</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">none</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">Status</span>                  <span class="hljs-operator">:</span> <span class="hljs-number">0</span><span class="hljs-variable">x0000</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Success</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=======================</span> <span class="hljs-variable">END</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">=======================</span><br></code></pre></td></tr></table></figure><p>在传输完成后，即可在服务端数据库看到这个图像，说明传输已经成功。</p><img src="image-20211013183425277.png" alt="image-20211013183425277" style="zoom:50%;" /><h4 id="传输"><a href="#传输" class="headerlink" title="传输"></a>传输</h4><p>DIMSE传输与DICOM图像传输都是用P-DATA PDU，这里通过抓包软件对它们进行分析。</p><p>在A-ASSOCIATE AC消息之后，两者开始通过P-DATA PDU进行传输。首先我们可以看到C-STORE RQ这一DIMSE消息的报文。其信息内容与之前日志输出的完全一致。</p><img src="image-20211013183453881.png" alt="image-20211013183453881" style="zoom:50%;" /><p>然后我们可以看到DCM文件被实际传输。PDV长度为32768B（32KB），实际上由24个长度为1514字节的TCP帧构成。传输的内容是小端序，未压缩，无加密。</p><img src="image-20211013183507932.png" alt="image-20211013183507932" style="zoom:50%;" /><h3 id="C-FIND"><a href="#C-FIND" class="headerlink" title="C-FIND"></a>C-FIND</h3><h4 id="Information-Model"><a href="#Information-Model" class="headerlink" title="Information Model"></a>Information Model</h4><p>在DICOM标准中，查询/取回的信息模型有以下三种：</p><ul><li>Patient Root</li><li>Study Root</li><li>Patient/Study Only</li></ul><p>例如，在患者根模型中，有四种层级的分类：</p><ul><li>Patient：对应Patient Information Entity (IE)</li><li>Study：对应一个患者和Study IE</li><li>Series：Series依赖具体的modality，在一个study中。它对应着Series, Frame of Reference 和Equipment IE。</li><li>Composite Object Instance：对应Composite Object IE。</li></ul><h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><p>C-FIND查询使用Key- Value进行，查询在SCP中会被转换为对应的SQL语句，向数据库发起查询。</p><table><thead><tr><th align="center"><strong>描述/模块</strong></th><th align="center"><strong>标签</strong></th><th align="center"><strong>匹配密钥类型</strong></th><th align="center"><strong>返回密钥类型</strong></th><th align="center"><strong>备注/匹配类型</strong></th></tr></thead><tbody><tr><td align="center">病人姓名</td><td align="center">（0010,0010）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">患者ID</td><td align="center">（0010,0020）</td><td align="center">R</td><td align="center">1</td><td align="center">请求标识符中应显示。应使用单值匹配检索。注意由于预计只有一个响应，这是一个唯一的密钥。</td></tr><tr><td align="center">患者ID的发行人</td><td align="center">（0010,0021）</td><td align="center">R</td><td align="center">2</td><td align="center">应使用单值匹配检索。在有多个发行商的情况下，此密钥限制将患者ID（0010,0020）与患者ID（0010,0020）唯一域匹配。</td></tr><tr><td align="center">患者的出生日期</td><td align="center">（0010,0030）</td><td align="center">—</td><td align="center">2</td><td align="center"></td></tr><tr><td align="center">患者的性别</td><td align="center">（0010,0040）</td><td align="center">—</td><td align="center">2</td><td align="center"></td></tr><tr><td align="center">患者识别模块的所有其他属性</td><td align="center"></td><td align="center">—</td><td align="center">3</td><td align="center"></td></tr><tr><td align="center">患者人口统计模块的所有其他属性</td><td align="center"></td><td align="center">—</td><td align="center">3</td><td align="center"></td></tr><tr><td align="center">观察日期时间</td><td align="center">（0040，A032）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">值类型</td><td align="center">（0040，A040）</td><td align="center">—</td><td align="center">1</td><td align="center">应与（0040，A043）的第一行相同</td></tr><tr><td align="center">概念名称代码序列</td><td align="center">（0040，A043）</td><td align="center">—</td><td align="center">1</td><td align="center">请求中不应存在，响应中用应与标识符中内容模板序列（0040，A504）中标识的模板相同。</td></tr><tr><td align="center">&gt;代码值</td><td align="center">（0008,0100）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;编码方案指示</td><td align="center">（0008,0102）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;编码方案版本</td><td align="center">（0008,0103）</td><td align="center">—</td><td align="center">1C</td><td align="center">如果编码方案指示（0008,0102）的值不足以明确识别代码值（0008,0100），则为必填项。</td></tr><tr><td align="center">&gt;代码含义</td><td align="center">（0008,0104）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;概念名称代码序列的所有其他属性</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">内容序列</td><td align="center">（0040，A730）</td><td align="center">—</td><td align="center">2</td><td align="center">内容序列（0040，A730）是一个潜在的递归嵌套项目序列。内容序列应始终在请求标识符中发送零长度。响应数据集中的内容序列应包含所请求模板的内容项。</td></tr><tr><td align="center">&gt;内容序列的所有属性</td><td align="center"></td><td align="center">—</td><td align="center">—</td><td align="center">SCP提供的内容项目。对内容项属性类型的要求应符合SR文档内容模块中的定义。</td></tr><tr><td align="center">HL7结构化文档参考序列</td><td align="center">（0040，A390）</td><td align="center">—</td><td align="center">1C</td><td align="center"></td></tr><tr><td align="center">&gt;参考的SOP类UID</td><td align="center">（0008,1150）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;引用的SOP实例UID</td><td align="center">（0008,1155）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;HL7实例标识符</td><td align="center">（0040，E001）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;检索URI</td><td align="center">（0040，E010）</td><td align="center">—</td><td align="center">3</td><td align="center"></td></tr><tr><td align="center">包含其他参考实例序列的研究</td><td align="center">（0008,1200）</td><td align="center">—</td><td align="center">1C</td><td align="center">如果内容序列（0040，A390）包含引用使用患者/研究/系列/实例信息模型的SOP实例的内容项，则为必填项。</td></tr><tr><td align="center">&gt;引用系列序列</td><td align="center">（0008,1115）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;&gt;系列实例UID</td><td align="center">（0020,000E）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;&gt;引用实例序列</td><td align="center">（0008,114A）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;&gt;&gt;参考SOP类UID</td><td align="center">（0008,1150）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">&gt;&gt;&gt;引用的SOP实例UID</td><td align="center">（0008,1155）</td><td align="center">—</td><td align="center">1</td><td align="center"></td></tr></tbody></table><h4 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h4><p>C-FIND也同样遵循上述的流程，即先通过Association PDU建立连接，通过P-DATA-TF PDU进行实际传输，传输完成后通过Release PDU进行连接释放。我们试验查询上一次写入的DCM文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  ~ findscu -v -d -S -k &quot;(0008, 0052)=STUDY&quot; -k &quot;(0010,0020)=Case1&quot; 59.78.44.209 5678<br>D: $dcmtk: findscu v3.6.6 2021-01-14 $<br>D: <br>D: DcmDataDictionary: Loading file: /usr/local/Cellar/dcmtk/3.6.6/share/dcmtk/dicom.dic<br>D: Request Parameters:<br>D: ====================== BEGIN A-ASSOCIATE-RQ =====================<br>D: Our Implementation Class UID:      1.2.276.0.7230010.3.0.3.6.6<br>D: Our Implementation Version Name:   OFFIS_DCMTK_366<br>D: Their Implementation Class UID:    <br>D: Their Implementation Version Name: <br>D: Application Context Name:    1.2.840.10008.3.1.1.1<br>D: Calling Application Name:    FINDSCU<br>D: Called Application Name:     ANY-SCP<br>D: Responding Application Name: ANY-SCP<br>D: Our Max PDU Receive Size:    16384<br>D: Their Max PDU Receive Size:  0<br>D: Presentation Contexts:<br>D:   Context ID:        1 (Proposed)<br>D:     Abstract Syntax: =FINDStudyRootQueryRetrieveInformationModel<br>D:     Proposed SCP/SCU Role: Default<br>D:     Proposed Transfer Syntax(es):<br>D:       =LittleEndianExplicit<br>D:       =BigEndianExplicit<br>D:       =LittleEndianImplicit<br>D: Requested Extended Negotiation: none<br>D: Accepted Extended Negotiation:  none<br>D: Requested User Identity Negotiation: none<br>D: User Identity Negotiation Response:  none<br>D: ======================= END A-ASSOCIATE-RQ ======================<br></code></pre></td></tr></table></figure><p>在ASSOCIATE-RQ中，我们可以看到它携带了一个Presentation Context，表示这个是一个StudyRoot的Information Model。对方只要支持这一种Infromation Model即可完成连接。</p><p>在DICOM 3.0中，C-FIND-RQ协议规定如下：</p><table><thead><tr><th align="center"><strong>Message Field</strong></th><th align="center"><strong>Description of Field</strong></th></tr></thead></table><ul><li>Command</li><li>Affected</li><li>Command</li><li>Message</li><li>Priority</li><li>Command</li><li>Identifier</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">I</span>: Requesting Association<br><span class="hljs-attribute">D</span>: setting network send timeout to <span class="hljs-number">60</span> seconds<br><span class="hljs-attribute">D</span>: setting network receive timeout to <span class="hljs-number">60</span> seconds<br><span class="hljs-attribute">D</span>: Constructing Associate RQ PDU<br><span class="hljs-attribute">D</span>: PDU Type: Associate Accept, PDU Length: <span class="hljs-number">187</span> + <span class="hljs-number">6</span> bytes PDU header<br><span class="hljs-attribute">D</span>:   <span class="hljs-number">02</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  bb  <span class="hljs-number">00</span>  <span class="hljs-number">01</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">41</span>  <span class="hljs-number">4</span>e  <span class="hljs-number">59</span>  <span class="hljs-number">2</span>d  <span class="hljs-number">53</span>  <span class="hljs-number">43</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">50</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">46</span>  <span class="hljs-number">49</span>  <span class="hljs-number">4</span>e  <span class="hljs-number">44</span>  <span class="hljs-number">53</span>  <span class="hljs-number">43</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">55</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">10</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">15</span>  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e<br><span class="hljs-attribute">D</span>:   <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">38</span>  <span class="hljs-number">34</span>  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">38</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">33</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e<br><span class="hljs-attribute">D</span>:   <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">21</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">19</span>  <span class="hljs-number">01</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">40</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">11</span>  <span class="hljs-number">31</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">2</span>e  <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">38</span>  <span class="hljs-number">34</span>  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">38</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">32</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">50</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">3</span>d  <span class="hljs-number">51</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">04</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">80</span>  <span class="hljs-number">00</span>  <span class="hljs-number">52</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">22</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">38</span>  <span class="hljs-number">32</span>  <span class="hljs-number">36</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">33</span>  <span class="hljs-number">36</span>  <span class="hljs-number">38</span>  <span class="hljs-number">30</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">30</span>  <span class="hljs-number">34</span>  <span class="hljs-number">33</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">33</span>  <span class="hljs-number">35</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">36</span>  <span class="hljs-number">36</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">30</span>  <span class="hljs-number">31</span>  <span class="hljs-number">55</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">0</span>b  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">35</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>f  <span class="hljs-number">57</span>  <span class="hljs-number">49</span>  <span class="hljs-number">4</span>e  <span class="hljs-number">33</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">32</span><br><span class="hljs-attribute">D</span>: Parsing an A-ASSOCIATE PDU<br><span class="hljs-attribute">D</span>: Association Parameters Negotiated:<br><span class="hljs-attribute">D</span>: ====================== BEGIN A-ASSOCIATE-AC =====================<br><span class="hljs-attribute">D</span>: Our Implementation Class UID:      <span class="hljs-number">1.2.276.0</span>.<span class="hljs-number">7230010</span>.<span class="hljs-number">3.0.3.6</span>.<span class="hljs-number">6</span><br><span class="hljs-attribute">D</span>: Our Implementation Version Name:   OFFIS_DCMTK_<span class="hljs-number">366</span><br><span class="hljs-attribute">D</span>: Their Implementation Class UID:    <span class="hljs-number">1.2.826.0</span>.<span class="hljs-number">1</span>.<span class="hljs-number">3680043</span>.<span class="hljs-number">2</span>.<span class="hljs-number">135</span>.<span class="hljs-number">1066</span>.<span class="hljs-number">101</span><br><span class="hljs-attribute">D</span>: Their Implementation Version Name: <span class="hljs-number">1</span>.<span class="hljs-number">5</span>.<span class="hljs-number">0</span>/WIN<span class="hljs-number">32</span><br><span class="hljs-attribute">D</span>: Application Context Name:    <span class="hljs-number">1.2.840.100</span><span class="hljs-number">08.3.1.1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">D</span>: Calling Application Name:    FINDSCU<br><span class="hljs-attribute">D</span>: Called Application Name:     ANY-SCP<br><span class="hljs-attribute">D</span>: Responding Application Name: ANY-SCP<br><span class="hljs-attribute">D</span>: Our Max PDU Receive Size:    <span class="hljs-number">16384</span><br><span class="hljs-attribute">D</span>: Their Max PDU Receive Size:  <span class="hljs-number">32768</span><br><span class="hljs-attribute">D</span>: Presentation Contexts:<br><span class="hljs-attribute">D</span>:   Context ID:        <span class="hljs-number">1</span> (Accepted)<br><span class="hljs-attribute">D</span>:     Abstract Syntax: =FINDStudyRootQueryRetrieveInformationModel<br><span class="hljs-attribute">D</span>:     Proposed SCP/SCU Role: Default<br><span class="hljs-attribute">D</span>:     Accepted SCP/SCU Role: Default<br><span class="hljs-attribute">D</span>:     Accepted Transfer Syntax: =LittleEndianImplicit<br><span class="hljs-attribute">D</span>: Requested Extended Negotiation: none<br><span class="hljs-attribute">D</span>: Accepted Extended Negotiation:  none<br><span class="hljs-attribute">D</span>: Requested User Identity Negotiation: none<br><span class="hljs-attribute">D</span>: User Identity Negotiation Response:  none<br><span class="hljs-attribute">D</span>: ======================= END A-ASSOCIATE-AC ======================<br></code></pre></td></tr></table></figure><p>The other party will respond and the connection will be established.</p><p>Then the DIMSE message is sent at the P-DATA layer. It can be seen that the DIMSE message mainly contains this SOP, which is the Information Model of the StudyRoot query, and also carries two Query.</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Association</span> <span class="hljs-variable">Accepted</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">Max</span> <span class="hljs-variable">Send</span> <span class="hljs-variable">PDV</span><span class="hljs-operator">:</span> <span class="hljs-number">32756</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Sending</span> <span class="hljs-built_in">Find</span> <span class="hljs-variable">Request</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=====================</span> <span class="hljs-variable">OUTGOING</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">====================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">Type</span>                  <span class="hljs-operator">:</span> <span class="hljs-built_in">C</span><span class="hljs-operator">-</span><span class="hljs-variable">FIND</span> <span class="hljs-variable">RQ</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Presentation</span> <span class="hljs-built_in">Context</span> <span class="hljs-variable">ID</span>       <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">ID</span>                    <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Class</span> <span class="hljs-variable">UID</span>        <span class="hljs-operator">:</span> <span class="hljs-variable">FINDStudyRootQueryRetrieveInformationModel</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Data</span> <span class="hljs-built_in">Set</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">present</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Priority</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">medium</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=======================</span> <span class="hljs-variable">END</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">=======================</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Request</span> <span class="hljs-variable">Identifiers</span><span class="hljs-operator">:</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-type">#</span> <span class="hljs-variable">Dicom</span><span class="hljs-operator">-</span><span class="hljs-variable">Data</span><span class="hljs-operator">-</span><span class="hljs-built_in">Set</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-type">#</span> <span class="hljs-variable">Used</span> <span class="hljs-variable">TransferSyntax</span><span class="hljs-operator">:</span> <span class="hljs-variable">Little</span> <span class="hljs-variable">Endian</span> <span class="hljs-variable">Explicit</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-punctuation">(</span><span class="hljs-number">0008</span><span class="hljs-operator">,</span><span class="hljs-number">0052</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">CS</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">STUDY</span><span class="hljs-punctuation">]</span>                                  <span class="hljs-type">#</span>   <span class="hljs-number">6</span><span class="hljs-operator">,</span> <span class="hljs-number">1</span> <span class="hljs-variable">QueryRetrieveLevel</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-punctuation">(</span><span class="hljs-number">0010</span><span class="hljs-operator">,</span><span class="hljs-number">0020</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">LO</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">Case1</span><span class="hljs-punctuation">]</span>                                  <span class="hljs-type">#</span>   <span class="hljs-number">6</span><span class="hljs-operator">,</span> <span class="hljs-number">1</span> <span class="hljs-variable">PatientID</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DcmDataset</span><span class="hljs-string">::read</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">TransferSyntax</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DcmDataset</span><span class="hljs-string">::read</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">TransferSyntax</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br></code></pre></td></tr></table></figure><p>On the server side, we can check the log to determine the operation mode of the query:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">CONQUESTSRV1</span>] UPACS THREAD <span class="hljs-number">46</span>: STARTED AT: Wed Oct <span class="hljs-number">13</span> <span class="hljs-number">19</span>:<span class="hljs-number">36</span>:<span class="hljs-number">59</span> <span class="hljs-number">2021</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] A-ASSOCIATE-RQ Packet Dump<br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Calling Application Title : <span class="hljs-string">&quot;FINDSCU         &quot;</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Called Application Title : <span class="hljs-string">&quot;ANY-SCP         &quot;</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Application Context : <span class="hljs-string">&quot;1.2.840.10008.3.1.1.1&quot;</span>, PDU length: <span class="hljs-number">16384</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Number of Proposed Presentation Contexts: <span class="hljs-number">1</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>]  Presentation Context <span class="hljs-number">0</span> <span class="hljs-string">&quot;1.2.840.10008.5.1.4.1.2.2.1&quot;</span> <span class="hljs-number">1</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] Server Command   := <span class="hljs-number">0020</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] Message ID       := <span class="hljs-number">0001</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] (StudyRootQuery) search level: STUDY <br>[<span class="hljs-meta">CONQUESTSRV1</span>] Query On Study<br>[<span class="hljs-meta">CONQUESTSRV1</span>] Issue Query <span class="hljs-keyword">on</span> Columns: DICOMStudies.PatientID<br>[<span class="hljs-meta">CONQUESTSRV1</span>] Values: DICOMStudies.PatientID = <span class="hljs-string">&#x27;Case1&#x27;</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] Tables: DICOMStudies<br>[<span class="hljs-meta">CONQUESTSRV1</span>] Sorting ((<span class="hljs-literal">null</span>)) DoSort := <span class="hljs-number">0</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] Records = <span class="hljs-number">1</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] C-Find (StudyRoot) located <span class="hljs-number">1</span> records<br>[<span class="hljs-meta">CONQUESTSRV1</span>] UPACS THREAD <span class="hljs-number">46</span>: ENDED AT: Wed Oct <span class="hljs-number">13</span> <span class="hljs-number">19</span>:<span class="hljs-number">36</span>:<span class="hljs-number">59</span> <span class="hljs-number">2021</span><br>[<span class="hljs-meta">CONQUESTSRV1</span>] UPACS THREAD <span class="hljs-number">46</span>: TOTAL RUNNING TIME: <span class="hljs-number">0</span> SECONDS<br></code></pre></td></tr></table></figure><p>It can be seen that the server first determines to start the query from Study as the root node, and then starts the query in the PatientID column just specified, finds a record, and then sends a response. The following is the response content parsed by SCU:</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Received</span> <span class="hljs-built_in">Find</span> <span class="hljs-variable">Response</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=====================</span> <span class="hljs-variable">INCOMING</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">====================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">Type</span>                  <span class="hljs-operator">:</span> <span class="hljs-built_in">C</span><span class="hljs-operator">-</span><span class="hljs-variable">FIND</span> <span class="hljs-variable">RSP</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">ID</span> <span class="hljs-variable">Being</span> <span class="hljs-variable">Responded</span> <span class="hljs-variable">To</span> <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Class</span> <span class="hljs-variable">UID</span>        <span class="hljs-operator">:</span> <span class="hljs-variable">FINDStudyRootQueryRetrieveInformationModel</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Data</span> <span class="hljs-built_in">Set</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">present</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">Status</span>                  <span class="hljs-operator">:</span> <span class="hljs-number">0</span><span class="hljs-variable">xff00</span><span class="hljs-operator">:</span> <span class="hljs-variable">Pending</span><span class="hljs-operator">:</span> <span class="hljs-variable">Matches</span> <span class="hljs-variable">are</span> <span class="hljs-variable">continuing</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=======================</span> <span class="hljs-variable">END</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">=======================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Response</span> <span class="hljs-variable">Identifiers</span><span class="hljs-operator">:</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-type">#</span> <span class="hljs-variable">Dicom</span><span class="hljs-operator">-</span><span class="hljs-variable">Data</span><span class="hljs-operator">-</span><span class="hljs-built_in">Set</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-type">#</span> <span class="hljs-variable">Used</span> <span class="hljs-variable">TransferSyntax</span><span class="hljs-operator">:</span> <span class="hljs-variable">Little</span> <span class="hljs-variable">Endian</span> <span class="hljs-variable">Implicit</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-punctuation">(</span><span class="hljs-number">0008</span><span class="hljs-operator">,</span><span class="hljs-number">0052</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">CS</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">STUDY</span> <span class="hljs-punctuation">]</span>                                 <span class="hljs-type">#</span>   <span class="hljs-number">6</span><span class="hljs-operator">,</span> <span class="hljs-number">1</span> <span class="hljs-variable">QueryRetrieveLevel</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-punctuation">(</span><span class="hljs-number">0010</span><span class="hljs-operator">,</span><span class="hljs-number">0020</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">LO</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">Case1</span> <span class="hljs-punctuation">]</span>                                 <span class="hljs-type">#</span>   <span class="hljs-number">6</span><span class="hljs-operator">,</span> <span class="hljs-number">1</span> <span class="hljs-variable">PatientID</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DcmDataset</span><span class="hljs-string">::read</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">TransferSyntax</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Received</span> <span class="hljs-variable">Final</span> <span class="hljs-built_in">Find</span> <span class="hljs-variable">Response</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=====================</span> <span class="hljs-variable">INCOMING</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">====================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">Type</span>                  <span class="hljs-operator">:</span> <span class="hljs-built_in">C</span><span class="hljs-operator">-</span><span class="hljs-variable">FIND</span> <span class="hljs-variable">RSP</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">ID</span> <span class="hljs-variable">Being</span> <span class="hljs-variable">Responded</span> <span class="hljs-variable">To</span> <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Class</span> <span class="hljs-variable">UID</span>        <span class="hljs-operator">:</span> <span class="hljs-variable">FINDStudyRootQueryRetrieveInformationModel</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Data</span> <span class="hljs-built_in">Set</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">none</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">Status</span>                  <span class="hljs-operator">:</span> <span class="hljs-number">0</span><span class="hljs-variable">x0000</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Success</span><span class="hljs-operator">:</span> <span class="hljs-variable">Matching</span> <span class="hljs-variable">is</span> <span class="hljs-variable">complete</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=======================</span> <span class="hljs-variable">END</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">=======================</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Releasing</span> <span class="hljs-built_in">Association</span><br></code></pre></td></tr></table></figure><h3 id="C-MOVE"><a href="#C-MOVE" class="headerlink" title="C-MOVE"></a>C-MOVE</h3><p>C-MOVE can be understood that after C-FIND query, the SCP of C-MOVE initiates a C-STORE request to the SCU, and finally transmits the image to the SCU of C-MOVE.</p><p>From the analysis of the packet capture software, it can be seen that the SCU first transmits C-MOVE DIMSE to the SCP, and the other party sends a connection request in turn after receiving it.</p><img src="image-20211013231631533.png" alt="image-20211013231631533" style="zoom:50%;" /><p>After the C-STORE transmission is completed (the PDU side sends a C-STORE RSP), the other party will send a C-MOVE response. After all sub-C-STORE operations are completed, a total C-STORE response will be sent, and both parties will start Disconnect.</p><img src="image-20211013231904790.png" alt="image-20211013231904790" style="zoom:50%;" /><h4 id="log-analysis"><a href="#log-analysis" class="headerlink" title="log analysis"></a>log analysis</h4><p>The first is that the SCU requests the SCP to establish a connection:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  ~ movescu -v -d -aem &quot;DCMTK&quot; --port 7777 -k 0008,0052=STUDY -k 0010,0020=&quot;Case1&quot; 59.78.44.209 5678<br>D: DcmDataDictionary: Loading file: /usr/local/Cellar/dcmtk/3.6.6/share/dcmtk/dicom.dic<br>D: $dcmtk: movescu v3.6.6 2021-01-14 $<br>D: <br>D: Request Parameters:<br>D: ====================== BEGIN A-ASSOCIATE-RQ =====================<br>D: Our Implementation Class UID:      1.2.276.0.7230010.3.0.3.6.6<br>D: Our Implementation Version Name:   OFFIS_DCMTK_366<br>D: Their Implementation Class UID:    <br>D: Their Implementation Version Name: <br>D: Application Context Name:    1.2.840.10008.3.1.1.1<br>D: Calling Application Name:    MOVESCU<br>D: Called Application Name:     ANY-SCP<br>D: Responding Application Name: ANY-SCP<br>D: Our Max PDU Receive Size:    16384<br>D: Their Max PDU Receive Size:  0<br>D: Presentation Contexts:<br>D:   Context ID:        1 (Proposed)<br>D:     Abstract Syntax: =FINDPatientRootQueryRetrieveInformationModel<br>D:     Proposed SCP/SCU Role: Default<br>D:     Proposed Transfer Syntax(es):<br>D:       =LittleEndianExplicit<br>D:       =BigEndianExplicit<br>D:       =LittleEndianImplicit<br>D:   Context ID:        3 (Proposed)<br>D:     Abstract Syntax: =MOVEPatientRootQueryRetrieveInformationModel<br>D:     Proposed SCP/SCU Role: Default<br>D:     Proposed Transfer Syntax(es):<br>D:       =LittleEndianExplicit<br>D:       =BigEndianExplicit<br>D:       =LittleEndianImplicit<br>D: Requested Extended Negotiation: none<br>D: Accepted Extended Negotiation:  none<br>D: Requested User Identity Negotiation: none<br>D: User Identity Negotiation Response:  none<br>D: ======================= END A-ASSOCIATE-RQ ======================<br>I: Requesting Association<br>D: setting network send timeout to 60 seconds<br>D: setting network receive timeout to 60 seconds<br>D: Constructing Associate RQ PDU<br>D: PDU Type: Associate Accept, PDU Length: 216 + 6 bytes PDU header<br>D:   02  00  00  00  00  d8  00  01  00  00  41  4e  59  2d  53  43<br>D:   50  20  20  20  20  20  20  20  20  20  4d  4f  56  45  53  43<br>D:   55  20  20  20  20  20  20  20  20  20  00  00  00  00  00  00<br>D:   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00<br>D:   00  00  00  00  00  00  00  00  00  00  10  00  00  15  31  2e<br>D:   32  2e  38  34  30  2e  31  30  30  30  38  2e  33  2e  31  2e<br>D:   31  2e  31  21  00  00  19  01  00  00  00  40  00  00  11  31<br>D:   2e  32  2e  38  34  30  2e  31  30  30  30  38  2e  31  2e  32<br>D:   21  00  00  19  03  00  00  00  40  00  00  11  31  2e  32  2e<br>D:   38  34  30  2e  31  30  30  30  38  2e  31  2e  32  50  00  00<br>D:   3d  51  00  00  04  00  00  80  00  52  00  00  22  31  2e  32<br>D:   2e  38  32  36  2e  30  2e  31  2e  33  36  38  30  30  34  33<br>D:   2e  32  2e  31  33  35  2e  31  30  36  36  2e  31  30  31  55<br>D:   00  00  0b  31  2e  35  2e  30  2f  57  49  4e  33  32<br>D: Parsing an A-ASSOCIATE PDU<br>D: Association Parameters Negotiated:<br>D: ====================== BEGIN A-ASSOCIATE-AC =====================<br>D: Our Implementation Class UID:      1.2.276.0.7230010.3.0.3.6.6<br>D: Our Implementation Version Name:   OFFIS_DCMTK_366<br>D: Their Implementation Class UID:    1.2.826.0.1.3680043.2.135.1066.101<br>D: Their Implementation Version Name: 1.5.0/WIN32<br>D: Application Context Name:    1.2.840.10008.3.1.1.1<br>D: Calling Application Name:    MOVESCU<br>D: Called Application Name:     ANY-SCP<br>D: Responding Application Name: ANY-SCP<br>D: Our Max PDU Receive Size:    16384<br>D: Their Max PDU Receive Size:  32768<br>D: Presentation Contexts:<br>D:   Context ID:        1 (Accepted)<br>D:     Abstract Syntax: =FINDPatientRootQueryRetrieveInformationModel<br>D:     Proposed SCP/SCU Role: Default<br>D:     Accepted SCP/SCU Role: Default<br>D:     Accepted Transfer Syntax: =LittleEndianImplicit<br>D:   Context ID:        3 (Accepted)<br>D:     Abstract Syntax: =MOVEPatientRootQueryRetrieveInformationModel<br>D:     Proposed SCP/SCU Role: Default<br>D:     Accepted SCP/SCU Role: Default<br>D:     Accepted Transfer Syntax: =LittleEndianImplicit<br>D: Requested Extended Negotiation: none<br>D: Accepted Extended Negotiation:  none<br>D: Requested User Identity Negotiation: none<br>D: User Identity Negotiation Response:  none<br>D: ======================= END A-ASSOCIATE-AC ======================<br>I: Association Accepted (Max Send PDV: 32756)<br></code></pre></td></tr></table></figure><p>After that, the C-MOVE request is sent using the P-DATA PDU. It can be seen that the C-MOVE message format is similar to C-FIND.</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Sending</span> <span class="hljs-variable">Move</span> <span class="hljs-variable">Request</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=====================</span> <span class="hljs-variable">OUTGOING</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">====================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">Type</span>                  <span class="hljs-operator">:</span> <span class="hljs-built_in">C</span><span class="hljs-operator">-</span><span class="hljs-variable">MOVE</span> <span class="hljs-variable">RQ</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Presentation</span> <span class="hljs-built_in">Context</span> <span class="hljs-variable">ID</span>       <span class="hljs-operator">:</span> <span class="hljs-number">3</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">ID</span>                    <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Class</span> <span class="hljs-variable">UID</span>        <span class="hljs-operator">:</span> <span class="hljs-variable">MOVEPatientRootQueryRetrieveInformationModel</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Data</span> <span class="hljs-built_in">Set</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">present</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Priority</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">medium</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Move</span> <span class="hljs-variable">Destination</span>              <span class="hljs-operator">:</span> <span class="hljs-variable">DCMTK</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=======================</span> <span class="hljs-variable">END</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">=======================</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Request</span> <span class="hljs-variable">Identifiers</span><span class="hljs-operator">:</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-type">#</span> <span class="hljs-variable">Dicom</span><span class="hljs-operator">-</span><span class="hljs-variable">Data</span><span class="hljs-operator">-</span><span class="hljs-built_in">Set</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-type">#</span> <span class="hljs-variable">Used</span> <span class="hljs-variable">TransferSyntax</span><span class="hljs-operator">:</span> <span class="hljs-variable">Little</span> <span class="hljs-variable">Endian</span> <span class="hljs-variable">Explicit</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-punctuation">(</span><span class="hljs-number">0008</span><span class="hljs-operator">,</span><span class="hljs-number">0052</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">CS</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">STUDY</span><span class="hljs-punctuation">]</span>                                  <span class="hljs-type">#</span>   <span class="hljs-number">6</span><span class="hljs-operator">,</span> <span class="hljs-number">1</span> <span class="hljs-variable">QueryRetrieveLevel</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-punctuation">(</span><span class="hljs-number">0010</span><span class="hljs-operator">,</span><span class="hljs-number">0020</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">LO</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">Case1</span><span class="hljs-punctuation">]</span>                                  <span class="hljs-type">#</span>   <span class="hljs-number">6</span><span class="hljs-operator">,</span> <span class="hljs-number">1</span> <span class="hljs-variable">PatientID</span><br></code></pre></td></tr></table></figure><p>After processing the C-MOVE request on the SCP side, a connection request is initiated to the SCU. This request contains a <code>SecondaryCaptureImageStorage</code> Presentation Context, which is also consistent with the C-MOVE connection request mentioned earlier. You can see that the called application name sent by the other party is the name specified in the <code>-aem</code> parameter.</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">I</span>: <br><span class="hljs-attribute">D</span>: Association Received: <span class="hljs-number">59</span><br><span class="hljs-attribute">D</span>: setting network send timeout to <span class="hljs-number">60</span> seconds<br><span class="hljs-attribute">D</span>: setting network receive timeout to <span class="hljs-number">60</span> seconds<br><span class="hljs-attribute">D</span>: PDU Type: Associate Request, PDU Length: <span class="hljs-number">216</span> + <span class="hljs-number">6</span> bytes PDU header<br><span class="hljs-attribute">D</span>:   <span class="hljs-number">01</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  d<span class="hljs-number">8</span>  <span class="hljs-number">00</span>  <span class="hljs-number">01</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">44</span>  <span class="hljs-number">43</span>  <span class="hljs-number">4</span>d  <span class="hljs-number">54</span>  <span class="hljs-number">4</span>b  <span class="hljs-number">20</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">43</span>  <span class="hljs-number">4</span>f  <span class="hljs-number">4</span>e  <span class="hljs-number">51</span>  <span class="hljs-number">55</span>  <span class="hljs-number">45</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">53</span>  <span class="hljs-number">54</span>  <span class="hljs-number">53</span>  <span class="hljs-number">52</span>  <span class="hljs-number">56</span>  <span class="hljs-number">31</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">20</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">10</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">15</span>  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e<br><span class="hljs-attribute">D</span>:   <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">38</span>  <span class="hljs-number">34</span>  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">38</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">33</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e<br><span class="hljs-attribute">D</span>:   <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">20</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">36</span>  <span class="hljs-number">77</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">30</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">19</span>  <span class="hljs-number">31</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">2</span>e  <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">38</span>  <span class="hljs-number">34</span>  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">38</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">35</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">2</span>e  <span class="hljs-number">34</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">37</span>  <span class="hljs-number">40</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">11</span>  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e<br><span class="hljs-attribute">D</span>:   <span class="hljs-number">38</span>  <span class="hljs-number">34</span>  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">38</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">32</span>  <span class="hljs-number">50</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">3</span>d  <span class="hljs-number">51</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">04</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">80</span>  <span class="hljs-number">00</span>  <span class="hljs-number">52</span>  <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">22</span>  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">32</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">2</span>e  <span class="hljs-number">38</span>  <span class="hljs-number">32</span>  <span class="hljs-number">36</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">33</span>  <span class="hljs-number">36</span>  <span class="hljs-number">38</span>  <span class="hljs-number">30</span>  <span class="hljs-number">30</span>  <span class="hljs-number">34</span>  <span class="hljs-number">33</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">2</span>e  <span class="hljs-number">32</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">33</span>  <span class="hljs-number">35</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">36</span>  <span class="hljs-number">36</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">31</span>  <span class="hljs-number">30</span>  <span class="hljs-number">31</span>  <span class="hljs-number">55</span><br><span class="hljs-attribute">D</span>:   <span class="hljs-number">00</span>  <span class="hljs-number">00</span>  <span class="hljs-number">0</span>b  <span class="hljs-number">31</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">35</span>  <span class="hljs-number">2</span>e  <span class="hljs-number">30</span>  <span class="hljs-number">2</span>f  <span class="hljs-number">57</span>  <span class="hljs-number">49</span>  <span class="hljs-number">4</span>e  <span class="hljs-number">33</span>  <span class="hljs-number">32</span><br><span class="hljs-attribute">D</span>: Parsing an A-ASSOCIATE PDU<br><span class="hljs-attribute">I</span>: Sub-Association Received<br><span class="hljs-attribute">D</span>: Parameters:<br><span class="hljs-attribute">D</span>: ====================== BEGIN A-ASSOCIATE-RQ =====================<br><span class="hljs-attribute">D</span>: Our Implementation Class UID:      <span class="hljs-number">1.2.276.0</span>.<span class="hljs-number">7230010</span>.<span class="hljs-number">3.0.3.6</span>.<span class="hljs-number">6</span><br><span class="hljs-attribute">D</span>: Our Implementation Version Name:   OFFIS_DCMTK_<span class="hljs-number">366</span><br><span class="hljs-attribute">D</span>: Their Implementation Class UID:    <span class="hljs-number">1.2.826.0</span>.<span class="hljs-number">1</span>.<span class="hljs-number">3680043</span>.<span class="hljs-number">2</span>.<span class="hljs-number">135</span>.<span class="hljs-number">1066</span>.<span class="hljs-number">101</span><br><span class="hljs-attribute">D</span>: Their Implementation Version Name: <span class="hljs-number">1</span>.<span class="hljs-number">5</span>.<span class="hljs-number">0</span>/WIN<span class="hljs-number">32</span><br><span class="hljs-attribute">D</span>: Application Context Name:    <span class="hljs-number">1.2.840.100</span><span class="hljs-number">08.3.1.1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">D</span>: Calling Application Name:    CONQUESTSRV<span class="hljs-number">1</span><br><span class="hljs-attribute">D</span>: Called Application Name:     DCMTK<br><span class="hljs-attribute">D</span>: Responding Application Name: <br><span class="hljs-attribute">D</span>: Our Max PDU Receive Size:    <span class="hljs-number">16384</span><br><span class="hljs-attribute">D</span>: Their Max PDU Receive Size:  <span class="hljs-number">32768</span><br><span class="hljs-attribute">D</span>: Presentation Contexts:<br><span class="hljs-attribute">D</span>:   Context ID:        <span class="hljs-number">119</span> (Proposed)<br><span class="hljs-attribute">D</span>:     Abstract Syntax: =SecondaryCaptureImageStorage<br><span class="hljs-attribute">D</span>:     Proposed SCP/SCU Role: Default<br><span class="hljs-attribute">D</span>:     Proposed Transfer Syntax(es):<br><span class="hljs-attribute">D</span>:       =LittleEndianImplicit<br><span class="hljs-attribute">D</span>: Requested Extended Negotiation: none<br><span class="hljs-attribute">D</span>: Accepted Extended Negotiation:  none<br><span class="hljs-attribute">D</span>: Requested User Identity Negotiation: none<br><span class="hljs-attribute">D</span>: User Identity Negotiation Response:  none<br><span class="hljs-attribute">D</span>: ======================= END A-ASSOCIATE-RQ ======================<br><span class="hljs-attribute">D</span>: Constructing Associate AC PDU<br><span class="hljs-attribute">I</span>: Sub-Association Acknowledged (Max Send PDV: <span class="hljs-number">32756</span>)<br><span class="hljs-attribute">D</span>: ====================== BEGIN A-ASSOCIATE-AC =====================<br><span class="hljs-attribute">D</span>: Our Implementation Class UID:      <span class="hljs-number">1.2.276.0</span>.<span class="hljs-number">7230010</span>.<span class="hljs-number">3.0.3.6</span>.<span class="hljs-number">6</span><br><span class="hljs-attribute">D</span>: Our Implementation Version Name:   OFFIS_DCMTK_<span class="hljs-number">366</span><br><span class="hljs-attribute">D</span>: Their Implementation Class UID:    <span class="hljs-number">1.2.826.0</span>.<span class="hljs-number">1</span>.<span class="hljs-number">3680043</span>.<span class="hljs-number">2</span>.<span class="hljs-number">135</span>.<span class="hljs-number">1066</span>.<span class="hljs-number">101</span><br><span class="hljs-attribute">D</span>: Their Implementation Version Name: <span class="hljs-number">1</span>.<span class="hljs-number">5</span>.<span class="hljs-number">0</span>/WIN<span class="hljs-number">32</span><br><span class="hljs-attribute">D</span>: Application Context Name:    <span class="hljs-number">1.2.840.100</span><span class="hljs-number">08.3.1.1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">D</span>: Calling Application Name:    CONQUESTSRV<span class="hljs-number">1</span><br><span class="hljs-attribute">D</span>: Called Application Name:     DCMTK<br><span class="hljs-attribute">D</span>: Responding Application Name: <br><span class="hljs-attribute">D</span>: Our Max PDU Receive Size:    <span class="hljs-number">16384</span><br><span class="hljs-attribute">D</span>: Their Max PDU Receive Size:  <span class="hljs-number">32768</span><br><span class="hljs-attribute">D</span>: Presentation Contexts:<br><span class="hljs-attribute">D</span>:   Context ID:        <span class="hljs-number">119</span> (Accepted)<br><span class="hljs-attribute">D</span>:     Abstract Syntax: =SecondaryCaptureImageStorage<br><span class="hljs-attribute">D</span>:     Proposed SCP/SCU Role: Default<br><span class="hljs-attribute">D</span>:     Accepted SCP/SCU Role: Default<br><span class="hljs-attribute">D</span>:     Accepted Transfer Syntax: =LittleEndianImplicit<br><span class="hljs-attribute">D</span>: Requested Extended Negotiation: none<br><span class="hljs-attribute">D</span>: Accepted Extended Negotiation:  none<br><span class="hljs-attribute">D</span>: Requested User Identity Negotiation: none<br><span class="hljs-attribute">D</span>: User Identity Negotiation Response:  none<br><span class="hljs-attribute">D</span>: ======================= END A-ASSOCIATE-AC ======================<br><span class="hljs-attribute">D</span>: DcmDataset::read() TransferSyntax=<span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br></code></pre></td></tr></table></figure><p>After the reverse connection is established, the C-STORE request from the other party can be accepted and the transmission can begin.</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">I:</span> Received Store Request<br><span class="hljs-symbol">D:</span> ===================== INCOMING DIMSE MESSAGE ====================<br><span class="hljs-symbol">D:</span> Message Type                  : C-STORE RQ<br><span class="hljs-symbol">D:</span> Presentation Context ID       : <span class="hljs-number">119</span><br><span class="hljs-symbol">D:</span> Message ID                    : <span class="hljs-number">3203</span><br><span class="hljs-symbol">D:</span> Affected SOP <span class="hljs-keyword">Class</span> UID        : SecondaryCaptureImageStorage<br><span class="hljs-symbol">D:</span> Affected SOP Instance UID     : <span class="hljs-number">1.3</span>.<span class="hljs-number">6.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">5962.99</span>.<span class="hljs-number">1.2280943358</span>.<span class="hljs-number">716200484.1363785608958</span>.<span class="hljs-number">60.0</span><br><span class="hljs-symbol">D:</span> Data <span class="hljs-keyword">Set</span>                      : present<br><span class="hljs-symbol">D:</span> Priority                      : medium<br><span class="hljs-symbol">D:</span> Move Originator AE Title      : MOVESCU<br><span class="hljs-symbol">D:</span> Move Originator ID            : <span class="hljs-number">1</span><br><span class="hljs-symbol">D:</span> ======================= <span class="hljs-keyword">END</span> DIMSE MESSAGE =======================<br><span class="hljs-symbol">D:</span> DcmDataset::read() TransferSyntax=<span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br><span class="hljs-symbol">D:</span> DcmItem::checkAndUpdateVR() setting undefined VR <span class="hljs-keyword">of</span> PixelPaddingValue (<span class="hljs-number">0028</span>,<span class="hljs-number">0120</span>) <span class="hljs-keyword">to</span> <span class="hljs-comment">&#x27;US&#x27; because PixelRepresentation (0028,0103) has a value that is different from 1</span><br><span class="hljs-symbol">D:</span> DcmItem::checkAndUpdateVR() setting undefined VR <span class="hljs-keyword">of</span> PixelPaddingRangeLimit (<span class="hljs-number">0028</span>,<span class="hljs-number">0121</span>) <span class="hljs-keyword">to</span> <span class="hljs-comment">&#x27;US&#x27; because PixelRepresentation (0028,0103) has a value that is different from 1</span><br><span class="hljs-symbol">W:</span> DICOM file already exists, overwriting: SC.<span class="hljs-number">1.3</span>.<span class="hljs-number">6.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">5962.99</span>.<span class="hljs-number">1.2280943358</span>.<span class="hljs-number">716200484.1363785608958</span>.<span class="hljs-number">60.0</span><br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() Version <span class="hljs-keyword">of</span> MetaHeader <span class="hljs-built_in">is</span> ok: <span class="hljs-number">0</span>x0001<br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() use SOPClassUID [<span class="hljs-number">1.2</span>.<span class="hljs-number">840.10008</span>.<span class="hljs-number">5.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">1.7</span>] <span class="hljs-keyword">from</span> Dataset<br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() use SOPInstanceUID [<span class="hljs-number">1.3</span>.<span class="hljs-number">6.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">5962.99</span>.<span class="hljs-number">1.2280943358</span>.<span class="hljs-number">716200484.1363785608958</span>.<span class="hljs-number">60.0</span>] <span class="hljs-keyword">from</span> Dataset<br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() use <span class="hljs-built_in">new</span> TransferSyntaxUID [Little Endian Implicit] <span class="hljs-keyword">on</span> writing following Dataset<br><span class="hljs-symbol">D:</span> DcmFileFormat::validateMetaInfo() found <span class="hljs-number">7</span> Elements <span class="hljs-keyword">in</span> DcmMetaInfo <span class="hljs-comment">&#x27;metinf&#x27;</span><br><span class="hljs-symbol">D:</span> DcmDataset::read() TransferSyntax=<span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br></code></pre></td></tr></table></figure><p>After a C-STORE transfer is complete, a C-MOVE response is received, but since there are other transfers in progress, the <code>DIMSE Status</code> is Pending. Then there is the next C-STORE request and the corresponding transmission process and response.</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">I:</span> Received Move Response <span class="hljs-number">1</span><br><span class="hljs-symbol">D:</span> ===================== INCOMING DIMSE MESSAGE ====================<br><span class="hljs-symbol">D:</span> Message Type                  : C-MOVE RSP<br><span class="hljs-symbol">D:</span> Message ID Being Responded <span class="hljs-keyword">To</span> : <span class="hljs-number">1</span><br><span class="hljs-symbol">D:</span> Affected SOP <span class="hljs-keyword">Class</span> UID        : MOVEPatientRootQueryRetrieveInformationModel<br><span class="hljs-symbol">D:</span> Remaining Suboperations       : <span class="hljs-number">1</span><br><span class="hljs-symbol">D:</span> Completed Suboperations       : <span class="hljs-number">1</span><br><span class="hljs-symbol">D:</span> Failed Suboperations          : <span class="hljs-number">0</span><br><span class="hljs-symbol">D:</span> Warning Suboperations         : <span class="hljs-number">0</span><br><span class="hljs-symbol">D:</span> Data <span class="hljs-keyword">Set</span>                      : none<br><span class="hljs-symbol">D:</span> DIMSE Status                  : <span class="hljs-number">0</span>xff00: Pending: <span class="hljs-keyword">Sub</span>-operations are continuing<br><span class="hljs-symbol">D:</span> ======================= <span class="hljs-keyword">END</span> DIMSE MESSAGE =======================<br><span class="hljs-symbol">D:</span> DcmDataset::read() TransferSyntax=<span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br><span class="hljs-symbol">I:</span> Received Store Request<br><span class="hljs-symbol">D:</span> ===================== INCOMING DIMSE MESSAGE ====================<br><span class="hljs-symbol">D:</span> Message Type                  : C-STORE RQ<br><span class="hljs-symbol">D:</span> Presentation Context ID       : <span class="hljs-number">119</span><br><span class="hljs-symbol">D:</span> Message ID                    : <span class="hljs-number">3225</span><br><span class="hljs-symbol">D:</span> Affected SOP <span class="hljs-keyword">Class</span> UID        : SecondaryCaptureImageStorage<br><span class="hljs-symbol">D:</span> Affected SOP Instance UID     : <span class="hljs-number">1.3</span>.<span class="hljs-number">6.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">5962.99</span>.<span class="hljs-number">1.2280943358</span>.<span class="hljs-number">716200484.1363785608958</span>.<span class="hljs-number">67.0</span><br><span class="hljs-symbol">D:</span> Data <span class="hljs-keyword">Set</span>                      : present<br><span class="hljs-symbol">D:</span> Priority                      : medium<br><span class="hljs-symbol">D:</span> Move Originator AE Title      : MOVESCU<br><span class="hljs-symbol">D:</span> Move Originator ID            : <span class="hljs-number">1</span><br><span class="hljs-symbol">D:</span> ======================= <span class="hljs-keyword">END</span> DIMSE MESSAGE =======================<br><span class="hljs-symbol">D:</span> DcmDataset::read() TransferSyntax=<span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br><span class="hljs-symbol">D:</span> DcmItem::checkAndUpdateVR() setting undefined VR <span class="hljs-keyword">of</span> PixelPaddingValue (<span class="hljs-number">0028</span>,<span class="hljs-number">0120</span>) <span class="hljs-keyword">to</span> <span class="hljs-comment">&#x27;US&#x27; because PixelRepresentation (0028,0103) has a value that is different from 1</span><br><span class="hljs-symbol">D:</span> DcmItem::checkAndUpdateVR() setting undefined VR <span class="hljs-keyword">of</span> PixelPaddingRangeLimit (<span class="hljs-number">0028</span>,<span class="hljs-number">0121</span>) <span class="hljs-keyword">to</span> <span class="hljs-comment">&#x27;US&#x27; because PixelRepresentation (0028,0103) has a value that is different from 1</span><br><span class="hljs-symbol">W:</span> DICOM file already exists, overwriting: SC.<span class="hljs-number">1.3</span>.<span class="hljs-number">6.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">5962.99</span>.<span class="hljs-number">1.2280943358</span>.<span class="hljs-number">716200484.1363785608958</span>.<span class="hljs-number">67.0</span><br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() Version <span class="hljs-keyword">of</span> MetaHeader <span class="hljs-built_in">is</span> ok: <span class="hljs-number">0</span>x0001<br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() use SOPClassUID [<span class="hljs-number">1.2</span>.<span class="hljs-number">840.10008</span>.<span class="hljs-number">5.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">1.7</span>] <span class="hljs-keyword">from</span> Dataset<br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() use SOPInstanceUID [<span class="hljs-number">1.3</span>.<span class="hljs-number">6.1</span>.<span class="hljs-number">4.1</span>.<span class="hljs-number">5962.99</span>.<span class="hljs-number">1.2280943358</span>.<span class="hljs-number">716200484.1363785608958</span>.<span class="hljs-number">67.0</span>] <span class="hljs-keyword">from</span> Dataset<br><span class="hljs-symbol">D:</span> DcmFileFormat::checkMetaHeaderValue() use <span class="hljs-built_in">new</span> TransferSyntaxUID [Little Endian Implicit] <span class="hljs-keyword">on</span> writing following Dataset<br><span class="hljs-symbol">D:</span> DcmFileFormat::validateMetaInfo() found <span class="hljs-number">7</span> Elements <span class="hljs-keyword">in</span> DcmMetaInfo <span class="hljs-comment">&#x27;metinf&#x27;</span><br><span class="hljs-symbol">D:</span> DcmDataset::read() TransferSyntax=<span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br><span class="hljs-symbol">I:</span> Received Move Response <span class="hljs-number">2</span><br><span class="hljs-symbol">D:</span> ===================== INCOMING DIMSE MESSAGE ====================<br><span class="hljs-symbol">D:</span> Message Type                  : C-MOVE RSP<br><span class="hljs-symbol">D:</span> Message ID Being Responded <span class="hljs-keyword">To</span> : <span class="hljs-number">1</span><br><span class="hljs-symbol">D:</span> Affected SOP <span class="hljs-keyword">Class</span> UID        : MOVEPatientRootQueryRetrieveInformationModel<br><span class="hljs-symbol">D:</span> Remaining Suboperations       : <span class="hljs-number">0</span><br><span class="hljs-symbol">D:</span> Completed Suboperations       : <span class="hljs-number">2</span><br><span class="hljs-symbol">D:</span> Failed Suboperations          : <span class="hljs-number">0</span><br><span class="hljs-symbol">D:</span> Warning Suboperations         : <span class="hljs-number">0</span><br><span class="hljs-symbol">D:</span> Data <span class="hljs-keyword">Set</span>                      : none<br><span class="hljs-symbol">D:</span> DIMSE Status                  : <span class="hljs-number">0</span>xff00: Pending: <span class="hljs-keyword">Sub</span>-operations are continuing<br><span class="hljs-symbol">D:</span> ======================= <span class="hljs-keyword">END</span> DIMSE MESSAGE =======================<br><span class="hljs-symbol">D:</span> DcmDataset::read() TransferSyntax=<span class="hljs-string">&quot;Little Endian Implicit&quot;</span><br></code></pre></td></tr></table></figure><p>After all C-STORE requests are completed, the server will send a successful C-STORE response:</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Received</span> <span class="hljs-variable">Final</span> <span class="hljs-variable">Move</span> <span class="hljs-variable">Response</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=====================</span> <span class="hljs-variable">INCOMING</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">====================</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">Type</span>                  <span class="hljs-operator">:</span> <span class="hljs-built_in">C</span><span class="hljs-operator">-</span><span class="hljs-variable">MOVE</span> <span class="hljs-variable">RSP</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Message</span> <span class="hljs-variable">ID</span> <span class="hljs-variable">Being</span> <span class="hljs-variable">Responded</span> <span class="hljs-variable">To</span> <span class="hljs-operator">:</span> <span class="hljs-number">1</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Affected</span> <span class="hljs-variable">SOP</span> <span class="hljs-variable">Class</span> <span class="hljs-variable">UID</span>        <span class="hljs-operator">:</span> <span class="hljs-variable">MOVEPatientRootQueryRetrieveInformationModel</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Remaining</span> <span class="hljs-variable">Suboperations</span>       <span class="hljs-operator">:</span> <span class="hljs-number">0</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Completed</span> <span class="hljs-variable">Suboperations</span>       <span class="hljs-operator">:</span> <span class="hljs-number">2</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Failed</span> <span class="hljs-variable">Suboperations</span>          <span class="hljs-operator">:</span> <span class="hljs-number">0</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Warning</span> <span class="hljs-variable">Suboperations</span>         <span class="hljs-operator">:</span> <span class="hljs-number">0</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">Data</span> <span class="hljs-built_in">Set</span>                      <span class="hljs-operator">:</span> <span class="hljs-variable">none</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">Status</span>                  <span class="hljs-operator">:</span> <span class="hljs-number">0</span><span class="hljs-variable">x0000</span><span class="hljs-operator">:</span> <span class="hljs-built_in">Success</span><span class="hljs-operator">:</span> <span class="hljs-variable">Sub</span><span class="hljs-operator">-</span><span class="hljs-variable">operations</span> <span class="hljs-variable">complete</span> <span class="hljs-operator">-</span> <span class="hljs-variable">No</span> <span class="hljs-variable">failures</span> <span class="hljs-variable">or</span> <span class="hljs-variable">warnings</span><br><span class="hljs-built_in">D</span><span class="hljs-operator">:</span> <span class="hljs-operator">=======================</span> <span class="hljs-variable">END</span> <span class="hljs-variable">DIMSE</span> <span class="hljs-variable">MESSAGE</span> <span class="hljs-operator">=======================</span><br><span class="hljs-built_in">I</span><span class="hljs-operator">:</span> <span class="hljs-variable">Releasing</span> <span class="hljs-built_in">Association</span><br></code></pre></td></tr></table></figure><p>At this point, the C-MOVE transfer is completed.</p><p>Image file transmission is TCP transmission with PDV=4096Bytes:</p><img src="image-20211013195720471.png" alt="image-20211013195720471" style="zoom:50%;" /><p>The files downloaded to the local can be opened for viewing and processing, such as using the toolkit in DCMTK or other third-party software</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  ~ getscu -k 08,52=STUDY -k StudyInstanceUID=1.3.6.1.4.1.5962.99.1.2280943358.716200484.1363785608958.61.0  192.168.31.156 5678  <br>➜  ~ ls -lt<br>total 148576<br>-rw-r--r--    1 zzy   staff  31354908 10  8 22:46 SC.1.3.6.1.4.1.5962.99.1.2280943358.716200484.1363785608958.67.0<br>-rw-r--r--    1 zzy   staff   4367746 10  8 22:45 SC.1.3.6.1.4.1.5962.99.1.2280943358.716200484.1363785608958.60.0<br></code></pre></td></tr></table></figure><h3 id="C-GET"><a href="#C-GET" class="headerlink" title="C-GET"></a>C-GET</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  ~ sudo getscu -v -k 08,52=STUDY -k StudyInstanceUID=1.3.6.1.4.1.5962.99.1.2280943358.716200484.1363785608958.61.0  192.168.31.156 5678  <br>I: Requesting Association<br>I: Association Accepted (Max Send PDV: 32756)<br>I: Sending C-GET Request (MsgID 1)<br>I: Received C-STORE Request (MsgID 4261)<br>I: Sending C-STORE Response (Success)<br>I: Received C-GET Response (Pending)<br>I: Received C-STORE Request (MsgID 4281)<br>I: Sending C-STORE Response (Success)<br>I: Received C-GET Response (Pending)<br>I: Received C-GET Response (Success)<br>I: Final status report from last C-GET message:<br>I:   Number of Remaining Suboperations : 0<br>I:   Number of Completed Suboperations : 2<br>I:   Number of Failed Suboperations    : 0<br>I:   Number of Warning Suboperations   : 0<br>I: Releasing Association<br></code></pre></td></tr></table></figure><p>The process of C-GET is simpler than C-MOVE. It sends all Presentation Contexts like C-STORE when establishing a connection.</p><img src="image-20211013234755122.png" alt="image-20211013234755122" style="zoom:50%;" /><p>The following is the message content of C-GET, which is similar to the structure of C-FIND:</p><img src="image-20211013195701896.png" alt="image-20211013195701896" style="zoom:50%;" /><p>After sending the C-GET message, the other party will send a C-STORE message to start the transmission.</p><h3 id="three-Results-and-discussion"><a href="#three-Results-and-discussion" class="headerlink" title="three. Results and discussion"></a>three. Results and discussion</h3><p>In this project, based on the DICOM standard, I have completed a mini-PACS system that meets 11 protocols of the DICOM standard by selecting the open source DCMTK toolkit that implements the DICOM standard as Modality and View Station, and CONQUEST as the Server. In the process, through the analysis of the DICOM standard reading and the packet capture software, the structure of the DICOM image transmission protocol is understood, and the design of its TCP -&gt; ULP -&gt; PDU -&gt; DATA is understood. Based on the above understanding, the detailed process of transmission can be clearly understood, that is, the connection is controlled through Associate PDU and Release PDU, and data is transmitted through P-DATA. The data contains messages that are strictly defined in the format of DICOM3.0, so that the relevant interfaces are implemented. The transmission function specified by DICOM can be realized between the client and the server.</p><h3 id="quote"><a href="#quote" class="headerlink" title="quote"></a>quote</h3><ol><li>pydicom documentation: <a href="https://pydicom.github.io/pynetdicom/stable/user/presentation.html">https://pydicom.github.io/pynetdicom/stable/user/presentation.html</a></li><li>DICOM Standard 3.0: <a href="http://dicom.nema.org/medical/dicom/current/output/chtml/">http://dicom.nema.org/medical/dicom/current/output/chtml/</a></li><li>DICOM communication process: <a href="https://www.jianshu.com/p/6f178fc98a04">https://www.jianshu.com/p/6f178fc98a04</a></li><li>DCMTK：<a href="https://support.dcmtk.org/docs">https://support.dcmtk.org/docs</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>DICOM</tag>
      
      <tag>Biomedical Engineering</tag>
      
      <tag>Biomedical Imaging</tag>
      
      <tag>Network</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown Auto Translation</title>
    <link href="/StaticBlog/en/2021/10/09/hexo-i18n-by-article-translator/"/>
    <url>/StaticBlog/en/2021/10/09/hexo-i18n-by-article-translator/</url>
    
    <content type="html"><![CDATA[<p>When building a personal blog, we often have international needs. Technically, various blog frameworks have complete i18n solutions, so the biggest challenge for bloggers is content translation. Driven by artificial intelligence, machine translation has been quite perfect, and it is obviously no problem to meet the reading needs of readers in other languages, so a very realistic solution is to develop an automatic translation tool for your blog that calls machine translation API.</p><p>The address of this project: <a href="https://github.com/RandomNamer/MarkdownTranslator">https://github.com/RandomNamer/MarkdownTranslator</a></p><img src="image-20211012150904830.png" alt="image-20211012150904830" style="zoom:50%;" /><h1 id="development-process"><a href="#development-process" class="headerlink" title="development process"></a>development process</h1><p>In order to ensure the accuracy and reliability of the translation, I chose the Google Translate API here. Of course, due to the special network environment in mainland China, there are still a lot of troubles in the process of using Google Translate, although I don’t know when I just started developing it.</p><h2 id="Experiment-with-the-Markdown-format-that-Google-Translate-will-erase"><a href="#Experiment-with-the-Markdown-format-that-Google-Translate-will-erase" class="headerlink" title="Experiment with the Markdown format that Google Translate will erase"></a>Experiment with the Markdown format that Google Translate will erase</h2><p>Here I only tested some commonly used markdown format translations, and support for other special formats will continue to be developed.</p><ul><li>List item: the space between “-“ and the text will be removed</li><li>Code block: “`” will be removed from the code block</li><li>Inline code: will not change, but the content may be changed</li><li>The space between “#” and the text will be removed</li><li>Numbered list items: won’t be changed</li><li>Italic and bold: will not be destroyed</li><li>Link: Will not be broken</li></ul><h2 id="Get-Google-Translate-API"><a href="#Get-Google-Translate-API" class="headerlink" title="Get Google Translate API"></a>Get Google Translate API</h2><p>Google Translate is a paid service in Google Cloud. Although Google Translate comes with a $300 trial quota when registering, which is sufficient for personal translation purposes, it is not convenient to register a Google Cloud account with personal information and an international credit card. Here is an API used by the client of Google Translate: <code>https://translate.google.cn/translate_a/single</code>, the important query params mainly include:</p><ul><li>sl:</li><li>tl:</li><li>q:</li><li>tk:<br>Here is an implementation of Token calculation:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">token</span>(<span class="hljs-params">a</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> k = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">var</span> b = <span class="hljs-number">406644</span>;<br>    <span class="hljs-keyword">var</span> b1 = <span class="hljs-number">3293161072</span>;<br> <br>    <span class="hljs-keyword">var</span> jd = <span class="hljs-string">&quot;.&quot;</span>;<br>    <span class="hljs-keyword">var</span> sb = <span class="hljs-string">&quot;+-a^+6&quot;</span>;<br>    <span class="hljs-keyword">var</span> Zb = <span class="hljs-string">&quot;+-3^+b+-f&quot;</span>;<br> <br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = [], f = <span class="hljs-number">0</span>, g = <span class="hljs-number">0</span>; g &lt; a.length; g++) &#123;<br>        <span class="hljs-keyword">var</span> m = a.charCodeAt(g);<br>        <span class="hljs-number">128</span> &gt; m ? e[f++] = m: (<span class="hljs-number">2048</span> &gt; m ? e[f++] = m &gt;&gt; <span class="hljs-number">6</span> | <span class="hljs-number">192</span> : (<span class="hljs-number">55296</span> == (m &amp; <span class="hljs-number">64512</span>) &amp;&amp; g + <span class="hljs-number">1</span> &lt; a.length &amp;&amp; <span class="hljs-number">56320</span> == (a.charCodeAt(g + <span class="hljs-number">1</span>) &amp; <span class="hljs-number">64512</span>) ? (m = <span class="hljs-number">65536</span> + ((m &amp; <span class="hljs-number">1023</span>) &lt;&lt; <span class="hljs-number">10</span>) + (a.charCodeAt(++g) &amp; <span class="hljs-number">1023</span>), e[f++] = m &gt;&gt; <span class="hljs-number">18</span> | <span class="hljs-number">240</span>, e[f++] = m &gt;&gt; <span class="hljs-number">12</span> &amp; <span class="hljs-number">63</span> | <span class="hljs-number">128</span>) : e[f++] = m &gt;&gt; <span class="hljs-number">12</span> | <span class="hljs-number">224</span>, e[f++] = m &gt;&gt; <span class="hljs-number">6</span> &amp; <span class="hljs-number">63</span> | <span class="hljs-number">128</span>), e[f++] = m &amp; <span class="hljs-number">63</span> | <span class="hljs-number">128</span>)<br>    &#125;<br>    a = b;<br>    <span class="hljs-keyword">for</span> (f = <span class="hljs-number">0</span>; f &lt; e.length; f++) a += e[f],<br>        a = RL(a, sb);<br>    a = RL(a, Zb);<br>    a ^= b1 || <span class="hljs-number">0</span>;<br>    <span class="hljs-number">0</span> &gt; a &amp;&amp; (a = (a &amp; <span class="hljs-number">2147483647</span>) + <span class="hljs-number">2147483648</span>);<br>    a %= <span class="hljs-number">1E6</span>;<br>    <span class="hljs-keyword">return</span> a.toString() + jd + (a ^ b)<br>&#125;;<br> <br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">RL</span>(<span class="hljs-params">a, b</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> t = <span class="hljs-string">&quot;a&quot;</span>;<br>    <span class="hljs-keyword">var</span> Yb = <span class="hljs-string">&quot;+&quot;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = <span class="hljs-number">0</span>; c &lt; b.length - <span class="hljs-number">2</span>; c += <span class="hljs-number">3</span>) &#123;<br>        <span class="hljs-keyword">var</span> d = b.charAt(c + <span class="hljs-number">2</span>),<br>            d = d &gt;= t ? d.charCodeAt(<span class="hljs-number">0</span>) - <span class="hljs-number">87</span> : <span class="hljs-built_in">Number</span>(d),<br>            d = b.charAt(c + <span class="hljs-number">1</span>) == Yb ? a &gt;&gt;&gt; d: a &lt;&lt; d;<br>        a = b.charAt(c) == Yb ? a + d &amp; <span class="hljs-number">4294967295</span> : a ^ d<br>    &#125;<br>    <span class="hljs-keyword">return</span> a<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="Access-through-proxy"><a href="#Access-through-proxy" class="headerlink" title="Access through proxy"></a>Access through proxy</h3><p><strong>Notice!</strong> Node will not use the system proxy by default, which will cause network requests from Node to be blocked inside the wall even if the machine can already access the off-wall website through the proxy. At this time, we need to configure a proxy for Node before we can use Google Translate API normally. But for the network request library Axios that many people like to use, simply using the built-in proxy may not work for https sites like Google Translate. The basic solutions are:</p><ul><li>Use ProxyAgent, such as <a href="https://www.npmjs.com/package/tunnel">tunnel</a>,</li><li>Use modified version of Axios, <code>axios-https-proxy-fix</code></li><li>Use <code>request</code></li></ul><p>A ready-made Google Translate API package is <code>translate-google-api</code>, which can be installed directly via <code>npm install translate-google-api</code>. We can see the code in it, basically using axios to initiate a request using the API just now, but due to the bug that axios has on the https proxy, this module is basically unavailable in mainland China.</p><h3 id="Restrictions"><a href="#Restrictions" class="headerlink" title="Restrictions"></a>Restrictions</h3><p>This API is provided for the client of Google Translate, so it comes with anti-crawler settings. Generally speaking, one IP can completely translate an article, but the next one needs to switch to the next proxy address, otherwise error 429 will be returned.</p>]]></content>
    
    
    
    <tags>
      
      <tag>JS</tag>
      
      <tag>Hexo</tag>
      
      <tag>i18n</tag>
      
      <tag>Node.js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Build a static blog with Hexo and Github Pages</title>
    <link href="/StaticBlog/en/2021/09/30/blog-with-hexo-and-gh-pages/"/>
    <url>/StaticBlog/en/2021/09/30/blog-with-hexo-and-gh-pages/</url>
    
    <content type="html"><![CDATA[<h1 id="Build-a-static-blog-with-Hexo-and-Github-Pages"><a href="#Build-a-static-blog-with-Hexo-and-Github-Pages" class="headerlink" title="Build a static blog with Hexo and Github Pages"></a>Build a static blog with Hexo and Github Pages</h1><p>Personal blogs once had a high threshold, so a large number of online blog platforms emerged in the country at the beginning of the century. Once building a personal blog, you need to write your own back-end and front-end, get the domain name resolution service, and pay a lot of money to keep it running at a reasonable speed. In 2021, if you just want to experience your own blog, you don’t need to do this at all. For purely static display purposes (in fact, this is also the most basic and important use of blogs), only a (good-looking) static web page and a hosting platform are required. Github Pages is such a hosting platform. It relies on Github’s Repository, which is easy to use and free of charge. We can write a static front-end directly, push it to the remote end with Git, and then automatically complete the deployment. Hexo is such a static blog generation tool, which can be used to create static blogs more easily. Combine the two to complete your first blog in a few minutes.</p><h2 id="Set-up-GitHub-Pages"><a href="#Set-up-GitHub-Pages" class="headerlink" title="Set up GitHub Pages"></a>Set up GitHub Pages</h2><p>Create a new Repository in GitHub, and then enable Github Pages hosting in the settings.</p><img src="image-20210923153307744.png"  style="zoom:50%;" /><p>Using Theme-Chooser, you can generate a default page with the content filled in by a Markdown document. This markdown document also supports embedding HTML links.</p><img src="image-20210923153437095.png"  style="zoom:50%;" /><p>After simple adjustments, we can see a static web page that can be displayed normally, indicating that GitHub Pages has been created successfully.</p><img src="image-20210923153532574.png"  style="zoom:50%;" /><h2 id="Use-Hexo-to-generate-static-blogs"><a href="#Use-Hexo-to-generate-static-blogs" class="headerlink" title="Use Hexo to generate static blogs"></a>Use Hexo to generate static blogs</h2><p>Hexo is a tool that runs on Node.js. In order to use it, you must first make sure that Node has been installed.</p><img src="image-20210923153738209.png" style="zoom:50%;" /><p><code>npm</code> is Node’s package management tool, we can use it to install Hexo. (On macOS, if it is the first time to install Node, npm may lack file write permissions. You can use <code>sudo chown -R $USER /usr/local/lib/node_modules</code> to add permissions to solve it.)</p><p>If everything goes well, we can install Hexo using <code>npm install -g hexo-cli</code>.</p><p>After the installation is complete, we have the hexo command line tool, and a blog template can be initialized through <code>hexo init</code>:</p><img src="image-20210923160421280.png"  style="zoom:50%;" /><p>To compile it into a usable html page, execute <code>hexo generate</code>. To preview in the browser, you can use <code>hexo server</code> to open a server locally for preview.</p><img src="image-20210923161332399.png"  style="zoom:50%;" /><h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><p>A simple idea is to manually build the blog locally every time, and then push to GitHub to complete the update. But we need to send the constructed web page to the branch used by Github Pages, while the source code stays in another branch.</p><p>There are two recommended actions.</p><ul><li>Thanks to the CI function that GitHub can integrate, we don’t have to build manually every time, but ** let the CI system help us build and publish to GitHub<h1 id="After-Git-you-only-need-to-use-hexo-clean-amp-amp-hexo-deploy-to-complete-the-deployment-each-time"><a href="#After-Git-you-only-need-to-use-hexo-clean-amp-amp-hexo-deploy-to-complete-the-deployment-each-time" class="headerlink" title="After Git), you only need to use hexo clean &amp;&amp; hexo deploy to complete the deployment each time."></a>After Git), you only need to use <code>hexo clean &amp;&amp; hexo deploy</code> to complete the deployment each time.</h1></li></ul><h2 id="Workflow"><a href="#Workflow" class="headerlink" title="Workflow"></a>Workflow</h2><p>Here is a brief introduction on how to configure Deployer and the workflow of writing and publishing locally</p><h3 id="Deployer-configuration-and-use"><a href="#Deployer-configuration-and-use" class="headerlink" title="Deployer configuration and use"></a>Deployer configuration and use</h3><p>To use Deployer, you only need to configure four items in <code>_config.yml</code>, the following is an example configuration:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/RandomNamer/StaticBlogTest.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">Update</span> <span class="hljs-string">pages</span> <span class="hljs-string">with</span> <span class="hljs-string">local</span> <span class="hljs-string">changes</span> <span class="hljs-string">on</span> &#123;&#123; <span class="hljs-string">now(&#x27;YYYY-MM-DD&#x27;)</span>&#125;&#125;<br></code></pre></td></tr></table></figure><p>Just fill in the correct repo address, Github Pages branch and commit message.</p><p>The operation of the deployer is to generate it once, and then submit the generated file to the specified branch. The commit message is the previously configured <code>message</code>.</p><p>During deployment, you only need to execute <code>hexo clean &amp;&amp; hexo d</code> to synchronize the local website with the remote</p><h3 id="Load-resources-correctly"><a href="#Load-resources-correctly" class="headerlink" title="Load resources correctly"></a>Load resources correctly</h3><p>For the website to work correctly, the last step is needed, which is to configure the website URL in <code>_config.yml</code>. This URL determines the specific path for all links in the generated page to point to and load CSS, JS and other resource files. If it is not loaded properly, I am afraid it will be like this:</p><img src="image-20210930125831154.png"  style="zoom:50%;" /><p>After the correct configuration, perform another (generation and) deployment, and the correct web page can be viewed on GitHub Pages:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># URL</span><br><span class="hljs-comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">https://randomnamer.github.io/</span><br><span class="hljs-attr">root:</span> <span class="hljs-string">/StaticBlogTest/</span><br><span class="hljs-attr">permalink:</span> <span class="hljs-string">:year/:month/:day/:title/</span><br><span class="hljs-attr">permalink_defaults:</span><br><span class="hljs-attr">pretty_urls:</span><br>  <span class="hljs-attr">trailing_index:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br>  <span class="hljs-attr">trailing_html:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br></code></pre></td></tr></table></figure><img src="image-20210930130025608.png"  style="zoom:50%;" /><h3 id="Write-an-article"><a href="#Write-an-article" class="headerlink" title="Write an article"></a>Write an article</h3><h4 id="Front-Matters"><a href="#Front-Matters" class="headerlink" title="Front Matters"></a>Front Matters</h4><p>Hexo uses markdown to write, or in other words, uses Markdown’s grammar to write. Hexo has a syntax called <a href="https://hexo.io/zh-cn/docs/front-matter">Front Matter</a>, which is used to customize each article to a certain extent, such as specifying the name of the page , Embed the cover image, specify the author and tag of the article, etc.</p><p>Front Matter can be written in yaml or JSON:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hello</span> <span class="hljs-string">World</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2013</span><span class="hljs-string">/7/13</span> <span class="hljs-number">20</span><span class="hljs-string">:46:25</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json">;;;<br><span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;Hello World&quot;</span>,<br><span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2013/7/13 20:46:25&quot;</span><br>;;;<br></code></pre></td></tr></table></figure><h4 id="Integration-with-HTML"><a href="#Integration-with-HTML" class="headerlink" title="Integration with HTML"></a>Integration with HTML</h4><p>If you have used Typora, you will be impressed by the function of embedding HTML tags. It can make Markdown documents show rich styles that are not part of the Markdown specification, and can even embed the content of other web pages through iframes.</p><img src="image-20210930143453754.png" style="zoom:50%;" /><p>Hexo also fully supports embedded HTML, so that the article can not only have rich customization capabilities, but also be fully compatible with Typora.</p><h4 id="Local-writing-practice"><a href="#Local-writing-practice" class="headerlink" title="Local writing practice"></a>Local writing practice</h4><p>Hexo-cli provides a way to create new articles:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  StaticBlogTest git:(develop) ✗ hexo new ArticleTest<br>INFO  Validating config<br>INFO  Created: ~/Documents/GitHub/StaticBlogTest/source/_posts/ArticleTest.md<br></code></pre></td></tr></table></figure><p>By default, it will only create a markdown file in the specified folder. We can use any markdown editor to write, or copy the markdown file that has been written to the <code>source/_posts</code> path to form a new post.</p><p>After writing, you can use <code>hexo clean &amp;&amp; hexo s</code> to preview</p><h2 id="Use-theme"><a href="#Use-theme" class="headerlink" title="Use theme"></a>Use theme</h2><p>The charm of the front-end is that it is more convenient and free to design the appearance you want. Hexo also has a wealth of custom themes, and you can also develop your own custom themes.</p><p>There are a large number of topics on Github and Hexo official website</p><img src="image-20210930130535951.png" style="zoom:33%;" /><p>You only need to download the theme to the <code>themes</code> folder and quote the name of the theme (folder name) in <code>_config.yml</code> to use this theme. Different themes provide a wealth of configuration items, which can be further customized. At the same time, all themes are also built using standard front-end technology, and you can also modify and customize the themes yourself.</p><p>For example, for the theme <a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid</a> I use here, the content of the article page can only be placed on the right. By modifying its template, you can Define the layout, display the table of contents on the left, and make the text not forced to be centered (space-evenly).</p><h2 id="Summarize"><a href="#Summarize" class="headerlink" title="Summarize"></a>Summarize</h2><p>After a few hours, Hexo, a static blog generation framework, still gave me a lot of surprises. First of all, article writing is very easy. It can be done directly on the familiar Typora. Front-Matter also allows me to control the style of the article. In the past few years, there have been countless templates and plug-ins contributed by developers from all over the world, and many of them are eye-catching.</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Blog</tag>
      
      <tag>Frontend</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/StaticBlog/en/2021/09/23/hello-world/"/>
    <url>/StaticBlog/en/2021/09/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
